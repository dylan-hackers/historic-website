<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="env_1.htm">
<LINK REL=UP HREF="env_21.htm">
<LINK REL=PREV HREF="env_24.htm">
<LINK REL=NEXT HREF="env_26.htm">
<TITLE>2.3   Problems at run time </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING25></A>

<DIV>
<P><A HREF="env_26.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_24.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_21.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2 Fixing Bugs</P>

</DIV>
<A NAME=HEADING25-0></A>
<A NAME=UID-expanding-889970></A>
<H1>2.3   <A NAME=MARKER-9-228></A>Problems at run time </H1>
<P>Now we have taken a brief look at how Functional Developer treats compile-time problems, we will look at how it lets us debug problems that only emerge as exceptions at run time. </P>
<P><B>Note:</B> The numbered example steps in this section lead us through a possible debugging scenario. In places the example is a little unrealistic. This is because usually you are familiar with at least some of the code you are debugging, and also because the main purpose of the example is to introduce features of Functional Developer. </P>
<DL>
<DT><DD>1.  With the rebuilt version of Reversi that compiled with no warnings, start a new game, with <B>Application &gt; Start</B>.
<DT><DD>2.  After a couple of moves, save the new game by choosing <B>File &gt; Save</B> in the Reversi window.
<DT><DD>The Save dialog appears.
<DT><DD>3.  Choose a file to save into, and click <B>Save</B>.
<DT><DD>An application error dialog appears.
</DL>
<P> <A NAME=MARKER-10-229></A><IMG ALIGN=TOP SRC=error2-0.gif></P>
<P>Figure 2.3   <A NAME=MARKER-9-230></A>A Dylan run-time application error.</P>
<P>The dialog appeared because the Functional Developer debugger caught an unhandled Dylan exception in the Reversi application. Something is wrong with the game-saving code. We must start up a debugger window to see what went wrong.</P>
<DL>
<DT><DD>4.  <A NAME=MARKER-10-231></A>Choose Debug reversi.exe and click <B>OK</B> to enter the debugger.
<DT><DD>The Functional Developer debugger appears. We discuss the debugger in detail in <A HREF="env_100.htm#MARKER-9-477">Chapter 6, "Debugging and Interactive Development"</A>. 
</DL>
<P>In its uppermost pane, the debugger shows the error that it caught. It will be:</P>
<PRE>
Dylan error: <I>n</I> is not of type {&lt;class&gt;: &lt;BYTE-CHARACTER&gt;}
<P></P>
</PRE>
<P>where <I>n</I> is either 0, 1, or 2. (The value depends on the state of the game when we saved it. The reason for this will become clear shortly.) </P>
<P>In the left-hand pane beneath the message, there is a tree item for the master thread of the Reversi application. This tells us that the exception was raised in that thread. (In Reversi's case, there happens to be only one thread, but other applications might have multiple threads, and knowing the thread that raised the exception is useful. See <A HREF="env_100.htm#MARKER-9-477">Chapter 6</A> for more information about debugger options.)</P>
<P>When expanded, the tree item shows the current state of the call stack for Reversi's master thread. When the debugger is invoked on a thread, it pauses execution in that thread. So when we expand the tree we see the stack almost exactly as it was at the moment that the debugger was invoked.</P>
<P>The reason why what we see is <I>almost</I> exactly what the stack was like at the moment the debugger was invoked is that the stack pane normally filters out a lot of call frames that the Functional Developer run-time system creates. Because these are not frames that the running application creates directly, most of the time they are of no interest, and so it is convenient to hide them. You can change the filtering with the <A NAME=MARKER-2-232></A>drop-down list available directly above the thread pane in the debugger. The default filter setting is "Filtered visible frames". </P>
<P> <A NAME=MARKER-10-233></A><IMG ALIGN=TOP SRC=errstack2-0.gif></P>
<P>Figure 2.4   The Reversi application stack after a game-saving error.</P>
<P>Each item in the list is a call frame on the stack for the thread being debugged. We call this list of call frames a stack backtrace or simply a <I>backtrace</I>. </P>
<P>The backtrace shows frames in the order they were created, with the most recent at the top of the list. The frames are represented by the names of the functions whose call created them, and are accompanied by an icon denoting the sort of call it was. See <A HREF="env_106.htm#MARKER-9-483">Section 6.2.2.2 on page 100</A> for details of the icons and their meanings, but note for now that the <A NAME=MARKER-2-234></A>green arrow icon represents the current location of the stack pointer--that is, the call at which the thread was paused. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="env_26.htm#HEADING26-0"><B>2.3.1  </B> - Searching the stack backtrace for the cause of the error</A>
<DD>
<DT><A REL=BELOW HREF="env_27.htm#HEADING27-0"><B>2.3.2  </B> - Browsing local variables </A>
<DD>
<DT><A REL=BELOW HREF="env_28.htm#HEADING28-0"><B>2.3.3  </B> - Browsing definitions</A>
<DD>
<DT><A REL=BELOW HREF="env_29.htm#HEADING29-0"><B>2.3.4  </B> - Fixing the error</A>
<DD>
<DT><A REL=BELOW HREF="env_30.htm#HEADING30-0"><B>2.3.5  </B> - Loading the saved game back in </A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Getting Started with Functional Developer - 31 MAR 2000</ADDRESS>
<P><A HREF="env_26.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_24.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_21.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
