<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="env_1.htm">
<LINK REL=UP HREF="env_184.htm">
<LINK REL=PREV HREF="env_186.htm">
<LINK REL=NEXT HREF="env_188.htm">
<TITLE>A.2.3   Creating the client stubs library</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING187></A>

<DIV>
<P><A HREF="env_188.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_186.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_184.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>A.2   An example COM server and client</P>

</DIV>
<A NAME=HEADING187-0></A>
<H1>A.2.3   Creating the client stubs library</H1>
<P>Now we create a project for the client-side stubs of the encryption interface.</P>
<DL>
<DT><DD>1.  Choose <B>File &gt; New...</B> from the main window.
<DT><DD>2.  Select <B>Project</B> and click <B>OK</B>.
<DT><DD>The New Project wizard appears. 
<DT><DD>3.  In the Project Type section, select "Interface to COM Type Library" and click <B>Next</B>.
<DT><DD>4.  Click <B>Browse...</B> and navigate to the Functional Developer examples folder. 
<DT><DD>The folder required is called Examples and is placed under the top-level Functional Developer folder. 
<DT><DD>It is usually <CODE>C:\Program Files\Functional Objects\Functional Developer\Examples</CODE>.
<DT><DD>5.  Go to the <CODE>Documentation\RotNExample</CODE> subfolder and choose the <CODE>RotNExample.tlb</CODE> file.
<DT><DD>6.  Click <B>Next</B> to continue to the next page of the wizard. 
<DT><DD>7.  Select "Dispatch client interfaces" and click <B>Next</B> to continue to the next page of the wizard.
<DT><DD>8.  Choose "Translate all" on the next page, so that both the RotNExample COM class and the IRotNExample interface are translated. Click <B>Next</B>.
<DT><DD>9.  Change the name of the project to <B>RotNExample-client-stubs</B>.
<DT><DD>10.  Choose a suitable Location for the project.
<DT><DD>11.  Make sure that the "Dynamic Link Library (DLL)" option is chosen in the Project Settings and Templates section.
<DT><DD>12.  Make sure that the "Include any available templates" option is <I>not</I> chosen.
<DT><DD>13.  Click <B>Next</B> to continue.
</DL>
<P>We are now at the Use Libraries page. We are only defining the stubs for the client, so we do not need any unusual libraries. </P>
<DL>
<DT><DD>14.  Choose the "Simple" option and click <B>Next</B>.
<DT><DD>15.  Choose the "Standard IO streams and string formatting" option from "IO and system support", and click <B>Next</B>.
<DT><DD>16.  Choose the "Win32 API" option from "GUI support", and click <B>Next</B>.
</DL>
<P>Note that the "OLE Automation" option on the "OLE Automation support" page is automatically selected. That is what we want.</P>
<DL>
<DT><DD>17.  Click <B>Next</B>. 
<DT><DD>18.  Choose the "None&Yacute;" option from "Database support" and click <B>Next</B>.
</DL>
<P>We are now at the final page of the New Project wizard.</P>
<DL>
<DT><DD>19.  Make any changes you want to the Source File Headers section. 
<DT><DD>20.  Click <B>Finish</B>.
<DT><DD>The new project appears. 
</DL>
<P>As with the server stubs project, we have to build this project to make the type library tool run.</P>
<DL>
<DT><DD>21.  Build the project with <B>Project &gt; Build</B>.
</DL>
<P>As before, files are added to the project. The <CODE>type-library-module.dylan</CODE> file serves the same purpose as with the server stubs. The difference is that <CODE>stubs.dylan</CODE> contains different code. It defines a dispatch-client class for the <CODE>IRotNExample</CODE> interface:</P>
<PRE>
/* Dispatch interface: IRotNExample version 0.0
 * GUID: {822ED42A-3EB1-11D2-A3CA-0060B0572A7F}
 * Description: An example interface for Functional Developer's
   Getting Started manual. 
*/
<P></P>
define dispatch-client &lt;IRotNExample&gt;
  uuid &quot;{822ED42A-3EB1-11D2-A3CA-0060B0572A7F}&quot;;
  property IRotNExample/key :: 
    type-union(&lt;integer&gt;, &lt;machine-word&gt;), name: &quot;key&quot;, 
               disp-id: 12288;
  function IRotNExample/encrypt (arg-pre :: &lt;string&gt;) =&gt;
    (arg-result :: &lt;string&gt;), name: &quot;encrypt&quot;, disp-id: 24576;
  function IRotNExample/decrypt (arg-pre :: &lt;string&gt;) =&gt;
    (arg-result :: &lt;string&gt;), name: &quot;decrypt&quot;, disp-id: 24577;
end dispatch-client &lt;IRotNExample&gt;;
<P></P>
</PRE>
<P>This defines a class <CODE>&lt;IRotNExample&gt;</CODE> which allows a client to use the described interface.</P>
<P>There is also generated code corresponding to the COM class RotNExample from the type library:</P>
<PRE>
/* COM class: RotNExample version 0.0
 * GUID: {C44502DB-3EB1-11D2-A3CA-0060B0572A7F}
 * Description: Implementation of IRotNExample.
 */
<P></P>
define constant $RotNExample-class-id = 
  as(&lt;REFCLSID&gt;, &quot;{C44502DB-3EB1-11D2-A3CA-0060B0572A7F}&quot;);
<P></P>
define function make-RotNExample () 
    =&gt; (default-interface :: &lt;IRotNExample&gt;)
  let default-interface = make(&lt;IRotNExample&gt;, 
                               class-id: $RotNExample-class-id);
  values(default-interface)
end function make-RotNExample;
<P></P>
</PRE>
<P>This function creates an instance of the RotNExample COM class, and returns its default (and only) interface.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Getting Started with Functional Developer - 31 MAR 2000</ADDRESS>
<P><A HREF="env_188.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_186.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_184.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
