<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="env_1.htm">
<LINK REL=UP HREF="env_100.htm">
<LINK REL=PREV HREF="env_119.htm">
<LINK REL=NEXT HREF="env_121.htm">
<TITLE>6.6   Restarts</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING120></A>

<DIV>
<P><A HREF="env_121.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_119.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_100.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6 Debugging and Interactive Development</P>

</DIV>
<A NAME=HEADING120-0></A>
<A NAME=UID-debug-900626></A>
<H1>6.6   <A NAME=MARKER-9-506></A>Restarts</H1>
<P>The debugger provides a way to signal any <A NAME=MARKER-2-507></A>restart for which a handler is available at a given point in application execution. Restarts are part of the Dylan language's condition system, and are explained in chapter 7 of the DRM. </P>
<P>You can use the debugger to signal a restart if your application has entered the debugger due to a condition having been signalled but not handled, or due to it reaching a breakpoint. You cannot do so if the application has paused because you used <B>Application &gt; Pause</B>. (Use <B>Application &gt; Resume</B> to restart your application in that case.)</P>
<P>To select a restart to be signalled, choose <B>Thread &gt; Continue...</B>, which displays a dialog listing all available restarts. </P>
<P>For convenience, there are two other menu items for signalling <CODE>&lt;abort&gt;</CODE> restarts, which are defined to mean "terminate the current computation".</P>
<P><B>Thread &gt; Abort</B> signals the innermost available <CODE>&lt;abort&gt;</CODE> restart--that is, it aborts as little as possible--whereas <B>Thread &gt; Abort All</B> signals the outermost <CODE>&lt;abort&gt;</CODE> restart--that is, it aborts as much as possible. </P>
<P>Although the meaning of <CODE>&lt;abort&gt;</CODE> restarts is part of the Dylan language, your application must provide handlers to implement them. If you are using DUIM for your application's GUI, note that DUIM frames normally provide <CODE>&lt;abort&gt;</CODE> handlers in the event loop, so that aborting while processing an event will proceed to process the next event. See the DUIM documentation for <CODE>start-frame</CODE> and <CODE>start-dialog</CODE>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Getting Started with Functional Developer - 31 MAR 2000</ADDRESS>
<P><A HREF="env_121.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_119.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_100.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
