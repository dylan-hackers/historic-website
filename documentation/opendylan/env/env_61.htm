<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="env_1.htm">
<LINK REL=UP HREF="env_60.htm">
<LINK REL=PREV HREF="env_60.htm">
<LINK REL=NEXT HREF="env_62.htm">
<TITLE>4.1.6.1   Creating a GUI project</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING61></A>

<DIV>
<P><A HREF="env_62.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_60.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_60.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.1.6   Projects for GUI applications</P>

</DIV>
<A NAME=HEADING61-0></A>
<H1>4.1.6.1   Creating a GUI project</H1>
<P>First, we create the new project for our GUI application.</P>
<DL>
<DT><DD>1.  Click the New Project (<IMG ALIGN=TOP SRC=newproj.gif>) button in the main window.
</DL>
<P>On the first page, we want to specify the project type. </P>
<DL>
<DT><DD>2.  Select "GUI Application (EXE)" in the Project type box.
<DT><DD>3.  Click <B>Next</B>.
</DL>
<P>We now move to the second page of the wizard. </P>
<P>Here, we want to name the project and specify a folder for its files.</P>
<DL>
<DT><DD>4.  Name the project <B>GUI-App</B> and choose a location for it.
</DL>
<P>The New Project wizard can set up some skeleton program code for our project, according to the project's characteristics as we specify them. Template code is not relevant for all kinds of projects--for instance, our Hello project would not have benefited from any more initial program structure than it had--but the wizard will include any that is relevant if we check the "Include any available templates" box.</P>
<DL>
<DT><DD>5.  Make sure the "Include any available templates" box is checked.
<DT><DD>We ignore the <B>Advanced...</B> button again.
<DT><DD>6.  Click <B>Next</B>. 
</DL>
<P>We now move to the third page of the wizard.</P>
<P>When we created the Hello project, we chose the Minimal option here, to use only the Functional-Dylan library. Our GUI application also needs to use other libraries for access to the native window system.</P>
<DL>
<DT><DD>7.  Select "Simple" in the Use Libraries box.
<DT><DD>8.  Click <B>Next</B>.
</DL>
<P>We now proceed through a series of pages allowing us to specify our project requirements in high-level terms, without knowing the names of specific Functional Developer API libraries. </P>
<P>The wizard will make our project's library definition use the right libraries and modules to do what we ask on these pages, and will include suitable template code in the project sources. Thus the Simple option is a useful way to create projects until you are more familiar with the libraries that Functional Developer offers.</P>
<P>The features we can specify fall into several categories. The choices available depend on the edition of Functional Developer you own. All editions offer I/O and system support, and GUI support. The <A NAME=MARKER-2-345></A>Professional and Enterprise Editions also offer OLE Automation support, networking support, and database support. </P>
<P>On the first page we can specify the what I/O and system support we want in our project. For each option, the wizard shows which libraries the project will use. </P>
<DL>
<DT><DD>9.  Leave the default settings on this page as they are, and click <B>Next</B>.
</DL>
<P>The next page is for specifying GUI support details. Here, we can decide whether we want to do the window programming for the application by using DUIM, Functional Developer's high-level GUI toolkit, or by using the Win32 API libraries described in the <I>C FFI and Win32</I> library reference. We want to use DUIM in this project.</P>
<DL>
<DT><DD>10.  Select "Dylan User Interface Manager (DUIM)".
<DT><DD>11.  Click <B>Next</B>.
</DL>
<P>Now the wizard offers different pages according to the edition of Functional Developer you own. For this example, we do not want to use any edition-specific libraries, so we will keep clicking <B>Next</B> until we get to the last page of the wizard, which is the same for all editions. This is the page for specifying source file headers, as we saw in <A HREF="env_58.htm#MARKER-9-334">Section 4.1.4 on page 64</A>.</P>
<DL>
<DT><DD>12.  Click <B>Next</B> until the last page of the wizard appears.
</DL>
<P>If you made any changes to this page last time, they will have been preserved. Whenever you click <B>Finish</B>, the wizard saves all these headers (except <CODE>Synopsis:</CODE>) and some other details, and reinstates them next time you create a project. See <A HREF="env_64.htm#MARKER-9-351">Section 4.3 on page 73</A> for a list of the details that the wizard saves.</P>
<DL>
<DT><DD>13.  Make any changes you want to here, and then click <B>Finish</B>.
</DL>
<P>The wizard creates the new GUI-App project and opens it.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Getting Started with Functional Developer - 31 MAR 2000</ADDRESS>
<P><A HREF="env_62.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_60.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_60.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
