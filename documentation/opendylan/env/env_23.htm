<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="env_1.htm">
<LINK REL=UP HREF="env_21.htm">
<LINK REL=PREV HREF="env_22.htm">
<LINK REL=NEXT HREF="env_24.htm">
<TITLE>2.2   Problems at compile time </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING23></A>

<DIV>
<P><A HREF="env_24.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_22.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_21.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2 Fixing Bugs</P>

</DIV>
<A NAME=HEADING23-0></A>
<A NAME=UID-expanding-887909></A>
<H1>2.2   <A NAME=MARKER-9-217></A>Problems at compile time </H1>
<P>In this section we look at how the compiler handles problems that it comes across in a project's source code. When we rebuilt Reversi in <A HREF="env_22.htm#MARKER-9-216">Section 2.1</A>, the compiler discovered nine problems in the project's source code. It reported those problems and divided them into two categories: serious warnings and warnings.</P>
<P>The compiler issues a <I><A NAME=MARKER-2-218></A>serious warning</I> for code that would lead to an exception at run time if it was executed. Among the causes of serious warnings are Dylan syntax errors, references to undefined bindings, and calls to functions with the wrong number or type of arguments. </P>
<P>For code with only cosmetic problems, such as a method definition that ends with <CODE>end</CODE> <CODE>class</CODE> instead of <CODE>end</CODE> <CODE>method</CODE>, the compiler issues a <I><A NAME=MARKER-2-219></A>warning</I>. </P>
<P>You can <A NAME=MARKER-2-220></A>see a table of any warnings or serious warnings that were generated the last time a project was compiled by choosing the Warnings page in the project window. After a build where there were warnings or serious warnings, like this one, the Warnings page is selected automatically.</P>
<P> <IMG ALIGN=TOP SRC=warnings-2-0-first.gif></P>
<P>Figure 2.1   <A NAME=MARKER-10-221></A>The project window's Warnings page.</P>
<P>The table has four columns:</P>
<DL>
<DT>Source<DD><P> Shows the source code location of the problem that caused the warning or serious warning<A NAME=MARKER-10-222></A>. The column has the form {<I>file name</I>}:{<I>line number</I>}.</P>
<DT>Library<DD><P> Shows the library containing the source code that caused the warning.</P>
<DT>Owner<DD><P> Shows the problem area that caused the warning.</P>
<DT>Warning<DD><P> Shows the warning or serious warning message. </P>
</DL>
<P>The items in the table are sorted lexically by the Source column value. <A NAME=MARKER-2-223></A>Warnings and serious warnings without associated source locations have empty Source fields, and appear at the top of the list. (To sort the table by the values in another column, click on that column's header.)</P>
<P>Each warning or serious warning is linked to the source definition that caused it. We can select individual warnings and serious warnings to learn more about the problems they are describing.</P>
<DL>
<DT><DD>1.  Select the first item in the Source column, a serious warning in <CODE>saving.dylan</CODE> at line 20.
</DL>
<P>We can now see the full text of the serious warning:</P>
<PRE>
Serious warning at saving:20: 

Unexpected token &quot;define&quot;.
<P></P>
</PRE>
<P>If we double-click on an item, Functional Developer opens the appropriate source file in an <A NAME=MARKER-2-224></A>editor window, and positions the insertion point at the line containing the problem. If the problem spans a range of lines, the entire range is highlighted in the editor. Likewise, if the problem is an undefined binding, the binding in question is highlighted.</P>
<DL>
<DT><DD>2.  Double-click on the same item.
<DT><DD>An editor window appears.
</DL>
<P>Notice how the editor separates each definition in a source file with a gray line. Printed in the middle of each line is the name of the definition below it. These code separators also appear above top-level expressions wrapped with <CODE>begin</CODE> ... <CODE>end</CODE>. </P>
<P>The code separators are just a visual aid, and are not part of the file itself. If you opened the source file in a different editor you would not see the separators. They are ignored by the compiler.</P>
<P>When you add a new definition, or a new <CODE>begin</CODE> ... <CODE>end</CODE> top-level form, the code separators will only be updated if you manually refresh the editor window (<B>View &gt; Refresh</B>), move the cursor past an existing separator, or perform some other operation that forces the editor to redisplay. </P>
<P> <IMG ALIGN=TOP SRC=editor.gif><A NAME=MARKER-10-225></A></P>
<P>Figure 2.2   The Functional Developer editor.</P>
<P>Now we can see the cause of the first serious warning. A semi-colon is missing from the end of the definition of <CODE>number-for-piece</CODE> in <CODE>saving.dylan</CODE>. The missing semi-colon makes the definitions of <CODE>number-for-piece</CODE> and <CODE>piece-for-number</CODE> run into one another instead of being separate. </P>
<P>As it turns out, all the other serious warnings that were reported were caused by this single missing semi-colon. The compiler could not parse the definitions of <CODE>number-for-piece</CODE> and <CODE>piece-for-number</CODE>. The compiler skips over such source code and does not generate object code for it. </P>
<P>This means that any subsequent references to <CODE>number-for-piece</CODE> and <CODE>piece-for-number</CODE> in the source code would be references to name bindings that are never defined in the compiled application. Lines 32, 50, 59, and 73 referred to one or the other of these names, which triggered the serious warnings. </P>
<DL>
<DT><DD>3.  Add the missing semi-colon so that the last line of the definition <CODE>number-for-piece</CODE> appears as follows:
</DL>
<PRE>
  end method number-for-piece;
<P></P>
</PRE>
<P>While we are editing the file, we can fix the non-serious warning. It is caused by a mismatched <CODE>end</CODE> clause in <CODE>reversi-game-write-data</CODE>. It is a method, but the <CODE>end</CODE> clause says <CODE>end</CODE> <CODE>class</CODE> instead of <CODE>end</CODE> <CODE>method</CODE>.</P>
<DL>
<DT><DD>4.  Locate the definition of the <CODE>reversi-game-write-data</CODE> method in <CODE>saving.dylan</CODE>.
<DT><DD>5.  Change the last line of the definition so that it appears as follows:
</DL>
<PRE>
  end method reversi-game-write-data; 
<P></P>
</PRE>
<DL>
<DT><DD>6.  Choose <B>File &gt; Save</B> in the editor.
<DT><DD>Functional Developer saves the file, first making a backup of the previous version in <CODE>saving.dylan~</CODE>--that is, in a file of the same name, but with an extra character in the file extension, a tilde (~), to show that it is a backup file.
</DL>
<P>Having attended to the cause of the serious warnings and warnings, we can rebuild the application and try out the new version.</P>
<DL>
<DT><DD>7.  Choose <B>Project</B> <B>&gt;</B> <B>Build</B>.
<DT><DD>You can choose this in either the editor or the project window.
</DL>
<P>Notice the status bar in the Reversi project window after the build is complete:</P>
<PRE>
Build completed with no warnings.
<P></P>
</PRE>
<P>As well as removing the serious warning our semi-colon correction addressed, all the other serious warnings that were follow-on effects of the missing semi-colon have gone away. In addition, the single ordinary warning was removed by the <CODE>end</CODE>-clause fix.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="env_24.htm#HEADING24-0"><B>2.2.1  </B> - Controlling the compiler's treatment of warnings</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Getting Started with Functional Developer - 31 MAR 2000</ADDRESS>
<P><A HREF="env_24.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_22.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_21.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
