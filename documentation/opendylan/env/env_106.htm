<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="env_1.htm">
<LINK REL=UP HREF="env_104.htm">
<LINK REL=PREV HREF="env_105.htm">
<LINK REL=NEXT HREF="env_107.htm">
<TITLE>6.2.2.2   Call frames </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING106></A>

<DIV>
<P><A HREF="env_107.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_105.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_104.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6.2.2   Stack pane</P>

</DIV>
<A NAME=HEADING106-0></A>
<H1>6.2.2.2   <A NAME=MARKER-9-483></A>Call frames </H1>
<P>Under the root node, at the first level of expansion, the stack pane lists the call frames in the backtrace. The most recently executed call frame is listed first. </P>
<P>Each call frame is represented by the name of the function or method whose call created the frame. If you select a name, the source code associated with it (if any) appears in the pane opposite. See <A HREF="env_108.htm#MARKER-9-485">Section 6.2.3 on page 101</A> for details of this pane.</P>
<P>Beside each frame name is an icon indicating the sort of call that created the frame:</P>
<TABLE BORDER=1><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=blue-m.gif></P>
</TD><TD><P>This was a call to a method selected through run-time dispatch. </P>
</TD></TR><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=grey-f.gif></P>
</TD><TD><P>This was a direct call, either to a method whose dispatch details were all worked out at compile time, or to a method constant (a function). </P>
</TD></TR><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=grey-question.gif></P>
</TD><TD><P>This was a call to a foreign (non-Dylan) function. Some of the calls that the Dylan run-time system makes are foreign calls.</P>
</TD></TR><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=green-arrow.gif></P>
</TD><TD><P>This arrow denotes the position of the stack pointer in the thread. It will always be at the top of the list of frames.</P>
</TD></TR></TABLE><P>When debugging, be aware that some function call frames may be optimized away by, for example, inlining or tail-call optimization. This is particularly important to note if you are compiling in Production mode, where more optimization occurs than in Interactive Development mode. </P>
<P>The debugger also hides certain stack frames concerned with activities like method dispatch, since these are of no interest in debugging user applications.</P>
<P>You can filter other frames out of the backtrace if you wish, according either to their type or to their names. For instance, you can filter out all foreign call frames or all frames whose names contain a particular string. See <A HREF="env_147.htm#MARKER-9-561">"Stack options" on page 129</A>.</P>
<P> <A NAME=MARKER-10-484></A><IMG ALIGN=TOP SRC=dbgbak.gif></P>
<P>Figure 6.3   The debugger's stack pane.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Getting Started with Functional Developer - 31 MAR 2000</ADDRESS>
<P><A HREF="env_107.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="env_105.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="env_104.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="env_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="env_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="env_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
