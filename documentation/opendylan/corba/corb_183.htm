<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="corba_1.htm">
<LINK REL=UP HREF="corb_179.htm">
<LINK REL=PREV HREF="corb_182.htm">
<LINK REL=NEXT HREF="corb_184.htm">
<TITLE>A.4.12.4   Examples</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING183></A>

<DIV>
<P><A HREF="corb_184.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corb_182.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corb_179.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>A.4.12   Mapping for operations</P>

</DIV>
<A NAME=HEADING183-0></A>
<H1>A.4.12.4   Examples</H1>
<P><B>In Parameters</B></P>
<PRE>
// IDL
interface stealth {
  exception power_failure {};
  void engage_cloak (in long power) 
    raises (power_failure);
};
<P></P>
// Dylan
define open abstract class &lt;stealth&gt; (&lt;object&gt;)
end class;
<P></P>
define open generic stealth/engage-cloak
  (stealth :: &lt;stealth&gt;, power :: CORBA/&lt;long&gt;)
  =&gt; ();
<P></P>
define class stealth/&lt;power-failure&gt;
  (CORBA/&lt;user-exception&gt;)
end class;
<P></P>
define sealed domain make
  (singleton(stealth/&lt;power-failure&gt;));
<P></P>
define sealed domain initialize (stealth/&lt;power-failure&gt;);
<P></P>
</PRE>
<P><B>Out Parameters</B></P>
<PRE>
// IDL
interface fuel_cell : power_source {
short burn_hydrogen
  (in long burn_rate, out sequence&lt;short,7&gt; emissions);
};
<P></P>
// Dylan
define open abstract class &lt;fuel-cell&gt; (&lt;power-source&gt;)
end class;
<P></P>
define open generic fuel-cell/burn-hydrogen
    (fuel-cell :: &lt;fuel-cell&gt;, burn-rate :: CORBA/&lt;long&gt;)
  =&gt; (result :: CORBA/&lt;short&gt;, 
      emissions ::limited(CORBA/&lt;sequence&gt;, of: CORBA/&lt;short&gt;));
<P></P>
</PRE>
<P><B>InOut Parameters</B></P>
<PRE>
// IDL
interface frame {
  void request-sizes (inout long width, inout long height);
};
<P></P>
// Dylan
define open abstract class &lt;frame&gt; (&lt;object&gt;)
end class;
<P></P>
define open generic frame/request-sizes
    (frame :: &lt;frame&gt;,
     width :: CORBA/&lt;long&gt;,
     height :: CORBA/&lt;height&gt;)
 =&gt; (width :: CORBA/&lt;long&gt;, 
     height :: CORBA/&lt;height&gt;);
<P></P>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Developing Component Software with CORBA - 26 May 1999</ADDRESS>
<P><A HREF="corb_184.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corb_182.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corb_179.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
