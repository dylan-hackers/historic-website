<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="corba_1.htm">
<LINK REL=UP HREF="corba_47.htm">
<LINK REL=PREV HREF="corba_47.htm">
<LINK REL=NEXT HREF="corba_49.htm">
<TITLE>4.2.1   Libraries created by compiling IDL</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING48></A>

<DIV>
<P><A HREF="corba_49.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corba_47.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corba_47.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.2   Compiling IDL for a CORBA application</P>

</DIV>
<A NAME=HEADING48-0></A>
<H1>4.2.1   Libraries created by compiling IDL</H1>
<P>The IDL compiler can produce <I><A NAME=MARKER-2-185></A>skeleton</I>, <I><A NAME=MARKER-2-186></A>stub</I>, and <I><A NAME=MARKER-2-187></A>protocol</I> libraries from an IDL file. This, again, is as specified in <A HREF="corb_102.htm#MARKER-9-355">Appendix A, "An IDL Binding for Dylan"</A>. The purpose of these libraries is to make writing CORBA applications easier, by providing a pre-built interface to CORBA operations.</P>
<P>The skeletons or <I>server skeletons</I> library contains code for use by a CORBA server application, while the stubs or <I>client stubs</I> library contains code for use by a CORBA client application. In both cases, the code hides the details of CORBA communication from the application, allowing you to invoke operations in other CORBA objects without having to worry about where those objects are running. The stubs and skeletons act as proxies for the real, remote operations.</P>
<P>The protocol library is a Dylan representation of the interface described in the IDL file. The Dylan representation is mapped from IDL according to the Dylan IDL binding, with open classes and open generic functions representing IDL interfaces and operations. As we saw in <A HREF="corba_15.htm#MARKER-9-132">Chapter 2, "Quick Start Tutorial"</A>, the protocol provides the basis for implementing clients and servers. The skeletons and the stubs library both use the protocol library and re-export the names from it.</P>
<P><B>Note:</B> Typically a server project uses the client stubs library in addition to the skeletons and protocol library. This allows the server to make callbacks to the client.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Developing Component Software with CORBA - 26 May 1999</ADDRESS>
<P><A HREF="corba_49.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corba_47.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corba_47.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
