<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="corba_1.htm">
<LINK REL=UP HREF="corb_196.htm">
<LINK REL=PREV HREF="corb_198.htm">
<LINK REL=NEXT HREF="corb_200.htm">
<TITLE>A.5.2.3   Nil object references</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING199></A>

<DIV>
<P><A HREF="corb_200.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corb_198.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corb_196.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>A.5.2   ORB Interface</P>

</DIV>
<A NAME=HEADING199-0></A>
<H1>A.5.2.3   Nil object references</H1>
<P><B>Background</B></P>
<P>CORBA allows for nil object references. These are returned from some operations to indicate situations where, for example, no real object reference could be found.</P>
<P>Dylan programmers normally indicate such a situation by returning the rogue value <CODE>#f</CODE> and by declaring the type of the return value to be <CODE>false-or(&lt;some-type&gt;)</CODE>.</P>
<P><B>Specification</B></P>
<P>NIL object references shall be mapped to interface-specific values that can be tested with <CODE>CORBA::IS_NIL</CODE>. A nil object reference for a particular interface shall be obtainable by calling the function <CODE>make-nil</CODE> on the associated protocol class.</P>
<P><B>Rationale</B></P>
<P>Using <CODE>#f</CODE> to represent nil object references would be natural and convenient in some respects, notably during testing. However, all object reference type declarations would have to be wrapped with <CODE>false-or</CODE> which would be very awkward. Even if we did this then we would create ambiguous, unorderable methods which all accepted <CODE>#f</CODE> for some generic functions. A less pervasive approach where <CODE>false-or</CODE> was only used for return values would be better, but then it would be harder to glue operations together. The glue code would have to check for <CODE>#f</CODE> output from one operation before calling the next. This seems an inappropriate place to check this, and should be left to the receiving operation.</P>
<P>There are also advantages in terms of type safety. A spurious <CODE>#f</CODE> is more easily passed to, or returned from, an operation than a more explicit nil reference.</P>
<P><B>Example</B></P>
<PRE>
// Dylan
let philosopher = make-nil(&lt;philosopher&gt;);
corba/object/is-nil(philosopher); // returns #t
<P></P>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Developing Component Software with CORBA - 26 May 1999</ADDRESS>
<P><A HREF="corb_200.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corb_198.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corb_196.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
