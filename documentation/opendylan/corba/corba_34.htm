<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="corba_1.htm">
<LINK REL=UP HREF="corba_33.htm">
<LINK REL=PREV HREF="corba_33.htm">
<LINK REL=NEXT HREF="corba_35.htm">
<TITLE>3.1   About the bank example</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING34></A>

<DIV>
<P><A HREF="corba_35.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corba_33.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corba_33.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>3 Setting up the Bank Example</P>

</DIV>
<A NAME=HEADING34-0></A>
<A NAME=UID-bank-setup-889909></A>
<H1>3.1   About the bank example</H1>
<P>Chapters 4, 5, and 6 of this guide present a deeper CORBA development example than the Hello World example we saw in chapter 2. The new example is a simple implementation of a bank. The architecture of the bank has three components: </P>
<UL>
<LI>A database that provides persistent storage for the accounts managed by the bank.
<LI>A CORBA server that represents the bank and provides an object-oriented interface to its accounts.
<LI>A CORBA client that provides a graphical user interface to the bank.
</UL>
<P>This application is a typical example of a three-tier application architecture comprising a database access layer, a business logic layer, and a user interface layer.</P>
<P>Accounts are stored as records in a Microsoft Access<SUP>TM</SUP> relational database. The database is manipulated by the server using the Functional Developer SQL-ODBC library. </P>
<P>The server provides a single CORBA object that represents the bank. This object manages a collection of CORBA objects that represent customer accounts. The bank has operations for opening and closing accounts, and for retrieving existing accounts from the database. In turn, accounts support operations for querying and updating their balance.</P>
<P>The client initially contacts the server by obtaining a reference to the bank object from the Functional Developer ORB. It then presents the user with a graphical interface to the bank.</P>
<P>In response to user requests, the interface invokes operations on the bank, obtaining further references to accounts created on the server. The client manages separate windows for the bank and each of the accounts that are active in the server. </P>
<P>We will use the Functional Developer DUIM library to implement the client's user interface.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Developing Component Software with CORBA - 26 May 1999</ADDRESS>
<P><A HREF="corba_35.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corba_33.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corba_33.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
