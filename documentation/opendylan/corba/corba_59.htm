<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="corba_1.htm">
<LINK REL=UP HREF="corba_57.htm">
<LINK REL=PREV HREF="corba_58.htm">
<LINK REL=NEXT HREF="corba_60.htm">
<TITLE>5.2   The client's perspective </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING59></A>

<DIV>
<P><A HREF="corba_60.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corba_58.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corba_57.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>5 The Bank Client</P>

</DIV>
<A NAME=HEADING59-0></A>
<A NAME=UID-bank-client-889797></A>
<H1>5.2   The client's <A NAME=MARKER-2-210></A>perspective </H1>
<P>From the client's perspective, the IDL definition of a bank's interface, together with some documentation, fully determines its functionality. This means that in writing the client we need only rely on the information in the documented IDL to be able to interact with a bank object. Knowing the IDL description, we can implement the client before our bank object implementation is available.</P>
<P>The Bank-Protocol library, which was produced by the IDL compiler, Scepter, merely specifies the protocol for interacting with CORBA objects satisfying the interfaces in the IDL file <CODE>bank.idl</CODE>. The client-side implementation of this protocol resides the Bank-Stubs library. Any application that wants to act as a client with respect to some CORBA object matching an interface in the <CODE>bank.idl</CODE> file should use the Bank-Stubs library.</P>
<P>The Bank-Stubs library defines the following concrete classes:</P>
<PRE>
BankingDemo/&lt;account-reference&gt;
BankingDemo/&lt;checkingAccount-reference&gt;
BankingDemo/&lt;bank-reference&gt; 
<P></P>
</PRE>
<P>These classes subclass the following abstract classes:</P>
<PRE>
BankingDemo/&lt;account&gt;
BankingDemo/&lt;checkingAccount&gt; 
BankingDemo/&lt;bank&gt; 
<P></P>
</PRE>
<P>The class <CODE>BankingDemo/&lt;checkingAccount-reference&gt;</CODE> is defined to inherit from <CODE>BankingDemo/&lt;account-reference&gt;</CODE>, matching the inheritance relationship in the IDL. Instances of these classes act as proxies for CORBA objects running on the server. </P>
<P>The Bank-Stubs library also defines a concrete <I>stub</I> method, specialized on the appropriate proxy class, for each protocol function stemming from an IDL attribute or operation. When the client applies the generic function to a particular target proxy, the stub method communicates with the ORB to invoke the corresponding operation on the actual target object in the server. If the request succeeds, the stub method returns the result to the client. If the request fails, raising a CORBA user or system exception, the stub method raises the corresponding Dylan condition of the appropriate class. This condition can then be handled by the client code using standard Dylan constructs.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Developing Component Software with CORBA - 26 May 1999</ADDRESS>
<P><A HREF="corba_60.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corba_58.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corba_57.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
