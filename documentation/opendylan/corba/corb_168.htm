<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="corba_1.htm">
<LINK REL=UP HREF="corb_165.htm">
<LINK REL=PREV HREF="corb_167.htm">
<LINK REL=NEXT HREF="corb_169.htm">
<TITLE>A.4.10.3   Mapping for structure type</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING168></A>

<DIV>
<P><A HREF="corb_169.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corb_167.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corb_165.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>A.4.10   Mapping for constructed types</P>

</DIV>
<A NAME=HEADING168-0></A>
<H1>A.4.10.3   Mapping for structure type</H1>
<P><B>Background</B></P>
<P>IDL defines a <CODE>structure</CODE> type that aggregates together multiple pieces of data of potentially heterogeneous types.</P>
<P>Dylan programmers define new classes for this purpose.</P>
<P><B>Specification</B></P>
<P>An IDL structure shall be mapped to a sealed, concrete, Dylan subclass of <CODE>CORBA/&lt;struct&gt;</CODE> together with pairs of sealed getter and setter generic functions and a required initialization keyword for each struct member. The initialization keywords shall be Dylan symbols mapped using the normal identifier mapping rules, but without any scope prefixes. It shall be an error to call the getter and setter functions on instances of types other than those mapped from the IDL structure. Furthermore the Dylan protocol functions <CODE>make</CODE> and <CODE>initialize</CODE> shall be sealed over the domain of the mapped class.</P>
<P><B>Rationale</B></P>
<P>The Dylan class, the getters, the setters, and initializers, are defined to be sealed in the anticipation that operations on structures are expected to be as efficient as possible without any need for extension.</P>
<P>There is no need to specify whether the getter and setter generic functions are defined as Dylan slots. The data may in fact be maintained in a foreign internal format convenient for network transmission.</P>
<P>The initialization keywords are required so as not to introduce complicated defaulting rules.</P>
<P>The superclass <CODE>CORBA/&lt;struct&gt;</CODE> is made explicit to allow <CODE>instance?</CODE> tests.</P>
<P><B>Examples</B></P>
<PRE>
// IDL
struct meeting {
  string topic, venue, convenor;
  long date, duration;
  sequence&lt;string&gt; attendees, agenda, hidden_agenda, 
minutes;
};
<P></P>
// Dylan (using slots)
define class &lt;meeting&gt; (CORBA/&lt;struct&gt;)
  slot meeting/topic :: CORBA/&lt;string&gt;,
      required-init-keyword: topic:;
    slot meeting/venue :: CORBA/&lt;string&gt;,
      required-init-keyword: venue:;
    slot meeting/convenor :: CORBA/&lt;string&gt;,
      required-init-keyword: convenor:;
    slot meeting/date :: CORBA/&lt;long&gt;,
      required-init-keyword: date:;
    slot meeting/duration :: CORBA/&lt;long&gt;,
      required-init-keyword: duration:;
    slot meeting/attendees ::
       limited(CORBA/&lt;sequence&gt;, of: CORBA/&lt;string&gt;)&gt;,
       required-init-keyword: attendees:; 
    slot meeting/agenda ::
       limited(CORBA/&lt;sequence&gt;, of: CORBA/&lt;string&gt;)&gt;,
       required-init-keyword: agenda:; 
    slot meeting/hidden-agenda :: 
      limited(CORBA/&lt;sequence&gt;, of: CORBA/&lt;string&gt;)&gt;,
      required-init-keyword: hidden-agenda:; 
    slot meeting/minutes ::
      limited(CORBA/&lt;sequence&gt;, of: CORBA/&lt;string&gt;)&gt;,
      required-init-keyword: minutes:; 
end class;
<P></P>
define sealed domain make (singleton(&lt;meeting&gt;));
define sealed domain initialize (&lt;meeting&gt;);
<P></P>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Developing Component Software with CORBA - 26 May 1999</ADDRESS>
<P><A HREF="corb_169.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="corb_167.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="corb_165.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="corba_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="corba_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="corb_206.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
