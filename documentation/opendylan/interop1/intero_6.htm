<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="intero_4.htm">
<LINK REL=PREV HREF="intero_5.htm">
<LINK REL=NEXT HREF="intero_7.htm">
<TITLE>1.2   Overview </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING6></A>

<DIV>
<P><A HREF="intero_7.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="intero_5.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="intero_4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_152.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>1 The C-FFI Library</P>

</DIV>
<A NAME=HEADING6-0></A>
<A NAME=UID-c-ffi-886476></A>
<H1>1.2   <B><A NAME=MARKER-10-196></A></B><A NAME=MARKER-9-197></A>Overview </H1>
<P>This section is an overview of the C-FFI library, introducing the most commonly used constructs as the basis for examples.</P>
<P>The C-FFI library provides a set of macros that can be used to describe a C interface in a form that the Functional Developer compiler can understand; we call these macros the <I>C interface definition language</I>. </P>
<P>The C interface definition language provides macros that correspond to each of C's type, function, variable, and constant defining forms. These macros define Dylan classes that designate and encapsulate instances of C types, Dylan methods through which to manipulate C variables and call out to C functions, and functions with C-compatible entry points through which to call in to Dylan from C. </P>
<P>In addition to the interface definition language, the C-FFI library provides run-time methods and functions for allocating, manipulating and destroying instances of C data structures. For example, using these facilities you can allocate C structs and arrays, and access and set their elements.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="intero_7.htm#HEADING7-0"><B>1.2.1  </B> - C types in Dylan</A>
<DD>
<DT><A REL=BELOW HREF="intero_8.htm#HEADING8-0"><B>1.2.2  </B> - C functions in Dylan</A>
<DD>
<DT><A REL=BELOW HREF="intero_9.htm#HEADING9-0"><B>1.2.3  </B> - C variables in Dylan</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>C FFI and Win 32 Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="intero_7.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="intero_5.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="intero_4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_152.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
