<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_113.htm">
<LINK REL=PREV HREF="inte_129.htm">
<LINK REL=NEXT HREF="inte_131.htm">
<TITLE>2.10   Other minor details</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING130></A>

<DIV>
<P><A HREF="inte_131.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_129.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_113.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_152.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2 The Functional Developer Win32 API Libraries</P>

</DIV>
<A NAME=HEADING130-0></A>
<A NAME=UID-win32-888865></A>
<H1>2.10   <A NAME=MARKER-2-676></A>Other minor details</H1>
<P>The types <CODE>&lt;FARPROC&gt;</CODE> and <CODE>&lt;PROC&gt;</CODE> are defined as equivalent to <CODE>&lt;C-function-pointer&gt;</CODE>, so any C function wrapper object can be passed to a routine taking a <CODE>&lt;FARPROC&gt;</CODE> without needing to do any type conversion like that needed in C.</P>
<P>Type casts between handles and integers (<CODE>&lt;integer&gt;</CODE> or <CODE>&lt;machine-word&gt;</CODE>) can be done by using <CODE>as</CODE>. For example: </P>
<PRE>
window-class.hbrBackground-value := 
                                 as(&lt;HBRUSH&gt;, $COLOR-WINDOW + 1);
<P></P>
</PRE>
<P>Note that pointers and handles must be compared using <CODE>=</CODE>, not <CODE>==</CODE>, in order to compare the C address instead of the Dylan wrapper objects.</P>
<P>For type casts from one pointer type to another, use the function <CODE>pointer-cast</CODE> instead of <CODE>as</CODE>. Think of <CODE>as</CODE> as converting the data structure pointed to, while <CODE>pointer-cast</CODE> operates on just the pointer itself.</P>
<P>The Dylan function <CODE>pointer-value</CODE> can be used to convert between a Dylan integer and a <CODE>LARGE-INTEGER</CODE> or <CODE>ULARGE-INTEGER</CODE>. For example: </P>
<PRE>
let li :: make( &lt;PLARGE-INTEGER&gt; ); pointer-value(li) := 0; 
<P></P>
</PRE>
<P>allocates a <CODE>LARGE-INTEGER</CODE> and sets its value to 0, without needing to be concerned with the individual fields of the internal representation. Alternatively, you can use an initialization keyword: </P>
<PRE>
let li :: make( &lt;PLARGE-INTEGER&gt;, value: 0 );
<P></P>
</PRE>
<P>The C macros <CODE>MAKEPOINT</CODE>, <CODE>MAKEPOINTS</CODE>, and <CODE>LONG2POINT</CODE> do not easily translate to Dylan. Instead, use the Dylan function <CODE>lparam-to-xy </CODE>to split a parameter into two signed numbers. For example: </P>
<PRE>
let ( x, y ) = LPARAM-TO-XY(lParam);
<P></P>
</PRE>
<P>In Dylan, <CODE>&lt;RECTL&gt;</CODE> is an alias of <CODE>&lt;RECT&gt;</CODE> instead of being a distinct type. (In Win32, they are structurally equivalent but were separate types for the sake of source code compatibility with Win16; there is no need to maintain that artificial distinction in Dylan.) </P>
<P>Windows resource files (<CODE>.rc</CODE> files) can be included by using the LID file field <CODE>RC-Files:</CODE>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>C FFI and Win 32 Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_131.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_129.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_113.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_152.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
