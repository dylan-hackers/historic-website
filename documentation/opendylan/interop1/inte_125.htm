<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_113.htm">
<LINK REL=PREV HREF="inte_124.htm">
<LINK REL=NEXT HREF="inte_126.htm">
<TITLE>2.5   Defining callback functions</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING125></A>

<DIV>
<P><A HREF="inte_126.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_124.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_113.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_152.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2 The Functional Developer Win32 API Libraries</P>

</DIV>
<A NAME=HEADING125-0></A>
<A NAME=UID-win32-889773></A>
<H1>2.5   <A NAME=MARKER-2-657></A><A NAME=MARKER-2-658></A><A NAME=MARKER-2-659></A>Defining callback functions</H1>
<P>The Win32-common library provides a <CODE>define callback</CODE> macro to make it easy to define callback functions without the application programmer needing to use the FFI <CODE>define c-callable-wrapper</CODE> macro directly. It is used like this:</P>
<PRE>
define callback WndProc :: &lt;WNDPROC&gt; = my-window-function;
<P></P>
</PRE>
<P>This says that <CODE>WndProc</CODE> is being defined as a C function pointer of type <CODE>&lt;WNDPROC&gt;</CODE>, which when called from C causes the Dylan function <CODE>my-window-function</CODE> to be run. The Dylan function will be defined normally using <CODE>define method</CODE> or <CODE>define function</CODE>, and it is the responsibility of the programmer to ensure that its argument signature is consistent with what <CODE>&lt;WNDPROC&gt;</CODE> requires. For example:</P>
<PRE>
define method my-window-function(
               hWnd	  :: &lt;HWND&gt;,       // window handle
               message :: &lt;integer&gt;,  // type of message
               uParam,                // additional information
               lParam)                // additional information
        =&gt; return :: &lt;integer&gt;;
...
<P></P>
</PRE>
<P>Note that the <CODE>uParam</CODE> and <CODE>lParam</CODE> arguments might receive values of either type <CODE>&lt;integer&gt;</CODE> or <CODE>&lt;machine-word&gt;</CODE>, so it may be best not to specialize them. Often these values are not used directly anyway, but are passed to other functions (such as <CODE>LOWORD</CODE> and <CODE>HIWORD</CODE>) which have methods for handling either representation.</P>
<P>The other types of function supported by <CODE>define callback</CODE> are dialog functions (<CODE>&lt;DLGPROC&gt;</CODE>) and dialog hooks (<CODE>&lt;LP...HOOKPROC&gt;</CODE>), both of which have the same argument types as a window function, but return a <CODE>&lt;boolean&gt;</CODE>. (The dialog hook functions are actually declared in <CODE>COMMDLG.H</CODE> as returning a <CODE>UINT</CODE>, but the value is always supposed to be <CODE>TRUE</CODE> or <CODE>FALSE</CODE>, so the Dylan callback interface has been implemented using <CODE>BOOL</CODE> instead.)</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>C FFI and Win 32 Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_126.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_124.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_113.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_152.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
