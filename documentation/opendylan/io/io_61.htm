<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="io_1.htm">
<LINK REL=UP HREF="io_55.htm">
<LINK REL=PREV HREF="io_60.htm">
<LINK REL=NEXT HREF="io_62.htm">
<TITLE>5.6.6   Using file streams</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING61></A>

<DIV>
<P><A HREF="io_62.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="io_60.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="io_55.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="io_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="io_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="io_333.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>5.6   Reading from and writing to streams</P>

</DIV>
<A NAME=HEADING61-0></A>
<H1>5.6.6   <A NAME=MARKER-10-354></A><A NAME=MARKER-2-355></A>Using file streams</H1>
<P>The following operations can be performed on file streams. </P>
<STRONG><A NAME=MARKER-2-356></A><A NAME=MARKER-2-357></A>close</STRONG>
<P><I>G.f. method</I></P>
<PRE>
close <I>file-stream</I> #key <I>abort</I> <I>wait?</I> =&gt; ()
<P></P>
</PRE>
<DL>
<DT><DD>Closes a file stream. If the stream is asynchronous and <I>wait?</I> is false (its default value is <CODE>#t</CODE>), then a close request is merely enqueued to be performed after all pending write operations; otherwise the file is closed immediately and all underlying system resources held on behalf of the stream are freed.
<DT><DD>If <I>abort?</I>. is false (the default) all buffered data is written before closing; if <I>abort?</I> false, this data is discarded.
<DT><DD>If <I>synchronize?</I> (default value <CODE>#f</CODE>) is true, the file is flushed to the physical disk before closing -- this guarantees that no data is retained in the operating system's write cache. Calling <CODE>close</CODE> with <I>synchronize?</I> <CODE>#t</CODE> is equivalent to calling <CODE>force-output</CODE> with <I>synchronize?</I> true and then calling <CODE>close</CODE>.
</DL>
<STRONG>wait-for-io-completion</STRONG>
<P><I>Statement macro</I></P>
<PRE>
wait-for-io-completion <I>file-stream</I> =&gt; ()
<P></P>
</PRE>
<DL>
<DT><DD>If <I>file-stream</I> is asynchronous, waits for all pending <CODE>write</CODE> or <CODE>close</CODE> operations to complete and signals any queued errors. If <I>file-stream</I> is not asynchronous, returns immediately.
</DL>
<STRONG><A NAME=MARKER-2-358></A>with-open-file</STRONG>
<P><I>Statement macro</I></P>
<PRE>
with-open-file (<I>stream-var</I> = <I>filename</I>, #rest <I>keys</I>) <I>body</I> end =&gt; <I>values</I>
<P></P>
</PRE>
<DL>
<DT><DD>This macro provides a safe mechanism for working with file streams. It creates a file stream and binds it to <I>stream-var</I>, evaluates a <I>body</I> of code within the context of this binding, and then closes the stream. The macro calls <A HREF="io_80.htm#MARKER-9-493"><CODE>close</CODE></A> upon exiting <I>body</I>. 
<DT><DD>The values of the last expression in <I>body</I> are returned. 
<DT><DD>The <I>keys</I> are passed to the <CODE>make</CODE> method on <A HREF="io_88.htm#MARKER-9-531"><CODE>&lt;file-stream&gt;</CODE></A>.
<DT><DD>For example, the following expression yields the contents of file <CODE>foo.text</CODE> as a <A HREF="io_79.htm#MARKER-9-487"><CODE>&lt;byte-vector&gt;</CODE></A>:
</DL>
<PRE>
with-open-file (fs = &quot;foo.text&quot;, element-type: &lt;byte&gt;)
  read-to-end(fs)
end;
<P></P>
</PRE>
<DL>
<DT><DD>It is roughly equivalent to:
</DL>
<PRE>
begin
  let hidden-fs = #f;     // In case the user bashes fs variable
  block ()
    hidden-fs := make(&lt;file-stream&gt;, 
                    locator: &quot;foo.text&quot;, element-type: &lt;byte&gt;);
    let fs = hidden-fs;
    read-to-end(fs);
  cleanup
    if (hidden-fs) close(hidden-fs) end;
  end block;
end;
<P></P>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>System and I/O Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="io_62.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="io_60.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="io_55.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="io_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="io_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="io_333.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
