<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="io_1.htm">
<LINK REL=UP HREF="io_46.htm">
<LINK REL=PREV HREF="io_46.htm">
<LINK REL=NEXT HREF="io_48.htm">
<TITLE>5.4.1   Streams, growing sequences, and object identity</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING47></A>

<DIV>
<P><A HREF="io_48.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="io_46.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="io_46.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="io_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="io_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="io_333.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>5.4   Concepts</P>

</DIV>
<A NAME=HEADING47-0></A>
<H1>5.4.1   Streams, <A NAME=MARKER-9-270></A>growing sequences, and object identity</H1>
<P>When writing to output streams over sequences, Dylan may from time to time need to grow the underlying sequence that it is using to represent the stream data. </P>
<P>Consider the example of an output stream instantiated over an empty string. As soon as a write operation is performed on the stream, it is necessary to replace the string object used in the representation of the string stream. As well as incurring the cost of creating a new string, references to the string within the program after the replacement operation has occurred will still refer to the <I>original</I> string, and this may not be what the user intended. </P>
<P>To guarantee that other references to a sequence used in an output <A HREF="io_113.htm#MARKER-9-662"><CODE>&lt;sequence-stream&gt;</CODE></A> will have access to any elements written to the sequence via the stream, supply a stretchy collection (such as a <CODE>&lt;stretchy-vector&gt;</CODE>) to <CODE>make</CODE>. A stream over a stretchy vector will use the same stretchy vector throughout the stream's existence. </P>
<P>For example:</P>
<PRE>
let sv = make(&lt;stretchy-vector&gt;);
<P></P>
let stream = make(&lt;sequence-stream&gt;, 
                  contents: sv, 
                  direction: #&quot;output&quot;);
<P></P>
write(stream,#(1, 2, 3, 4, 5, 6, 7, 8, 9));
<P></P>
write(stream,&quot;ABCDEF&quot;);
<P></P>
values(sv, stream-contents(stream));
<P></P>
</PRE>
<P>The example returns two values. Each value is the same (<CODE>==</CODE>) stretchy vector:</P>
<PRE>
(1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F')
<P></P>
</PRE>
<P>If a stretchy vector is not supplied, the result is different: </P>
<PRE>
let v = make(&lt;vector&gt;, size: 5);
<P></P>
let stream = make(&lt;sequence-stream&gt;,
                  contents: v, 
                  direction: #&quot;output&quot;);
<P></P>
write(stream,#(1, 2, 3, 4, 5, 6, 7, 8, 9));
<P></P>
write(stream,&quot;ABCDEF&quot;);
<P></P>
values(v, stream-contents(stream));
<P></P>
</PRE>
<P>This example returns as its first value the original vector, whose contents are unchanged, but the second value is a new vector:</P>
<PRE>
(1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F')
<P></P>
</PRE>
<P>This difference arises because the output stream in the second example does not use a stretchy vector to hold the stream data. A vector of at least 15 elements is necessary to accommodate the elements written to the stream, but the vector supplied, <CODE>v</CODE>, can hold only 5. Since the stream cannot change <CODE>v</CODE>'s size, it must allocate a new vector each time it grows. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>System and I/O Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="io_48.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="io_46.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="io_46.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="io_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="io_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="io_333.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
