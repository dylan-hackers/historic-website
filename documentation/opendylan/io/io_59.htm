<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="io_1.htm">
<LINK REL=UP HREF="io_55.htm">
<LINK REL=PREV HREF="io_58.htm">
<LINK REL=NEXT HREF="io_60.htm">
<TITLE>5.6.4   Reading and writing by lines</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING59></A>

<DIV>
<P><A HREF="io_60.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="io_58.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="io_55.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="io_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="io_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="io_333.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>5.6   Reading from and writing to streams</P>

</DIV>
<A NAME=HEADING59-0></A>
<H1>5.6.4   Reading and writing by lines</H1>
<P>The following functions provide line-based input and output operations.</P>
<P>The newline sequence for string streams is a sequence comprising the single newline character <CODE>\n</CODE>. For character file streams, the newline sequence is whatever sequence of characters the underlying platform uses to represent a newline. For example, on MS-DOS platforms, the sequence comprises two characters: a carriage return followed by a linefeed.</P>
<P><B>Note:</B> No other functions in the Streams module do anything to manage the encoding of newlines; calling <A HREF="io_138.htm#MARKER-9-787"><CODE>write-element</CODE></A> on the character <CODE>\n</CODE> does not cause the <CODE>\n</CODE> character to be written as the native newline sequence, unless <CODE>\n</CODE> happens to <I>be</I> the native newline sequence.</P>
<STRONG><A NAME=MARKER-2-340></A><A NAME=MARKER-2-341></A>read-line</STRONG>
<P><I>Open generic function</I></P>
<PRE>
read-line <I>input-stream</I> #key <I>on-end-of-stream</I> =&gt; <I>string-or-eof</I> <I>newline?</I> 
<P></P>
</PRE>
<DL>
<DT><DD>Returns a newly allocated <CODE>&lt;string&gt;</CODE> containing all the input in <I>input-stream</I> up to the next newline. The string does not contain the newline itself. 
<DT><DD><I>newline?</I> is <CODE>#t</CODE> if the read terminated with a newline or <CODE>#f</CODE> if the read terminated because it came to the end of the stream.
<DT><DD>The type of the result string is chosen so that the string can contain characters of <I>input-stream</I>'s element type. For example, if the element type is <A HREF="io_77.htm#MARKER-9-477"><CODE>&lt;byte-character&gt;</CODE></A>, the string will be a <CODE>&lt;byte-string&gt;</CODE>.
</DL>
<STRONG><A NAME=MARKER-2-342></A><A NAME=MARKER-2-343></A>write-line</STRONG>
<P><I>Open generic function</I></P>
<PRE>
write-line <I>output-stream</I> <I>string</I> #key <I>start</I> <I>end</I> =&gt; () 
<P></P>
</PRE>
<DL>
<DT><DD>Writes <I>string</I> followed by a newline sequence to <I>output-stream</I>. 
<DT><DD>The default method behaves as though it calls <A HREF="io_137.htm#MARKER-9-782"><CODE>write</CODE></A> on <I>string</I> and then calls <A HREF="io_99.htm#MARKER-9-587"><CODE>new-line</CODE></A>, with <I>output-stream</I> locked across both calls.
<DT><DD>If supplied, <I>start</I> and <I>end</I> delimit the portion of <I>string</I> to write to the stream. They default to 0 and <I>string<CODE>.size</CODE></I> respectively.
</DL>
<STRONG><A NAME=MARKER-2-344></A><A NAME=MARKER-2-345></A>new-line</STRONG>
<P><I>Open generic function</I></P>
<PRE>
new-line <I>output-stream</I> =&gt; ()
<P></P>
</PRE>
<DL>
<DT><DD>Writes a newline sequence to <I>output-stream</I>. 
<DT><DD>A method for <A HREF="io_99.htm#MARKER-9-587"><CODE>new-line</CODE></A> is defined on <A HREF="io_127.htm#MARKER-9-738"><CODE>&lt;string-stream&gt;</CODE></A> that writes the character <CODE>\n</CODE> to the string stream.
</DL>
<P>See also <A HREF="io_109.htm#MARKER-9-640"><CODE>read-line-into!</CODE>,  page 87</A>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>System and I/O Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="io_60.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="io_58.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="io_55.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="io_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="io_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="io_333.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
