<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="dref_1.htm">
<LINK REL=UP HREF="dref_830.htm">
<LINK REL=PREV HREF="dref_856.htm">
<LINK REL=NEXT HREF="dref_858.htm">
<TITLE> contain</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING857></A>

<DIV>
<P><A HREF="dref_858.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_856.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_830.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>9.4   DUIM-Frames Module</P>

</DIV>
<A NAME=HEADING857-0></A>
<H1> <A NAME=MARKER-2-6697></A><A NAME=MARKER-9-6698></A>contain</H1>
<P><I>Generic function</I></P>
<H3>Summary</H3>
<P> Creates and returns a frame containing the specified object.</P>
<H3>Signature</H3>
<dl><dd><pre>contain <I>object</I> #rest <I>initargs</I> #key <I>own-thread?</I> #all-keys =&gt; <I>sheet</I> <I>frame</I></pre></dl>
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>object</I><DD> An instance of type <CODE>type-union(<A HREF="dref_473.htm#MARKER-9-2638">&lt;sheet&gt;</A>, &lt;class&gt;, <A HREF="dref_908.htm#MARKER-9-6948">&lt;frame&gt;</A>)</CODE>.
<P> </P><DT><I>initargs</I><DD> Instances of type <CODE>&lt;object&gt;</CODE>.
</DL>
<H3>Values</H3>
<DL>
<P> </P><DT><I>sheet</I><DD> An instance of type <A HREF="dref_473.htm#MARKER-9-2638"><CODE>&lt;sheet&gt;</CODE></A>.
<P> </P><DT><I>frame</I><DD> An instance of type <A HREF="dref_908.htm#MARKER-9-6948"><CODE>&lt;frame&gt;</CODE></A>.
</DL>
<H3><A NAME=MARKER-10-6699></A>Library</H3>
<dl><dd><pre>duim-frames</pre></dl>
<H3>Module</H3>
<dl><dd><pre>duim-frames</pre></dl>
<H3>Description</H3>
<P> Creates and returns a frame containing <I>object</I>. This function is intended to be used as a convenience function when testing sections of code in development; you are note recommended to use it in your final source code. The function wraps a set of DUIM objects in a frame and displays them on screen, without you needing to worry about the creation, management, or display of frames on the computer screen. The <CODE>contain</CODE> function is most useful when testing code interactively using the Dylan Interactor.</P>
<P> If <I>own-thread?</I> is <CODE>#t</CODE>, then the window that is created by <CODE>contain</CODE> runs in its own thread. If not supplied, <I>own-thread?</I> is <CODE>#f</CODE>.</P>
<P> Consider the following expression that calls <CODE>contain</CODE>:</P>
<dl><dd><pre>contain(make(&lt;button&gt;));</pre></dl>
<P> This is equivalent to the fuller expression:</P>
<DL><DD><PRE>begin
   let frame = make(&lt;simple-frame&gt;, 
                     title: &quot;container&quot;, 
                     layout: make(&lt;button&gt;));
   start-frame(frame);
end;</PRE></DL>
<P> <A NAME=MARKER-10-6700></A>As can be seen, when testing short pieces of code interactively in the environment, the former section of code is easier to use than the latter.</P>
<H3>Example</H3>
<P> Assigning the result of a contain expression allows you to manipulate the DUIM objects being contained interactively, as shown in the example below.</P>
<P> You should assume the following code is typed into the Dylan Interactor, and that each expression is evaluated by pressing the RETURN key at the points indicated.</P>
<DL><DD><PRE>*g* := contain
         (make
           (&lt;list-box&gt;, 
            items: #(#&quot;One&quot;, #&quot;Two&quot;, #&quot;Three&quot;),
            label-key: 
              method (symbol) as-lowercase
                                (as(&lt;string&gt;, symbol))
              end));<I>RETURN</I></PRE></DL>
<dl><dd><pre>gadget-items(*g*);<I>RETURN</I></pre></dl>
<P> As you would expect, evaluating the call to <A HREF="dref_690.htm#MARKER-9-5084"><CODE>gadget-items</CODE></A> returns the following result:</P>
<dl><dd><pre>#(#&quot;one&quot;, #&quot;two&quot;, #&quot;three&quot;)</pre></dl>
<P> In a similar way, you can destructively modify the slot values of any contained DUIM objects</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Functional Developer Library Reference: DUIM - 3 Dec 1998</ADDRESS>
<P><A HREF="dref_858.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_856.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_830.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
