<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="dref_1.htm">
<LINK REL=UP HREF="dref_4.htm">
<LINK REL=PREV HREF="dref_8.htm">
<LINK REL=NEXT HREF="dref_10.htm">
<TITLE>1.5   Immutability of objects</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING9></A>

<DIV>
<P><A HREF="dref_10.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_8.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>1 Conventions in this Manual</P>

</DIV>
<A NAME=HEADING9-0></A>
<A NAME=UID-conventions-888083></A>
<H1>1.5   Immutability of objects</H1>
<P>Most DUIM objects are <I>immutable</I>, that is, at the API level none of their components can be modified once the object is created. Examples of immutable objects include all of the members of the <CODE>&lt;region&gt;</CODE> classes, pens, brushes, colors, and text styles. Since immutable objects by definition never change, functions in the DUIM API can safely capture immutable objects without first copying them. This also allows DUIM to cache immutable objects. Any <CODE>make</CODE> methods that return immutable objects are free to either create and return a new object, or return an already existing object. </P>
<P>A few DUIM objects are <I>mutable</I>. Some components of mutable objects can be modified once the object has been created, usually via setter functions. </P>
<P>In DUIM, object immutability is maintained at the class level. Throughout this specification, the immutability or mutability of a class will be explicitly specified. </P>
<P>Some immutable classes also allow <I>interning</I>. A class is said to be interning if it guarantees that two instances that are equivalent will always be <CODE>==</CODE>. For example, the class <CODE>&lt;text-style&gt;</CODE> is interned, so calling <CODE>make-text-style</CODE> twice with the same arguments would return identical values. </P>
<P>In some rare cases, DUIM <I>will</I> modify objects that are members of immutable classes. Such objects are referred to as being <I>volatile</I>. Extreme care must be take with volatile objects. For example, objects of class <CODE>&lt;bounding-box&gt;</CODE> are often volatile. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="dref_10.htm#HEADING10-0"><B>1.5.1  </B> - Behavior of interfaces</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Functional Developer Library Reference: DUIM - 3 Dec 1998</ADDRESS>
<P><A HREF="dref_10.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_8.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_4.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
