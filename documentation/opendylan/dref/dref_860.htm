<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="dref_1.htm">
<LINK REL=UP HREF="dref_830.htm">
<LINK REL=PREV HREF="dref_859.htm">
<LINK REL=NEXT HREF="dref_861.htm">
<TITLE> define frame</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING860></A>

<DIV>
<P><A HREF="dref_861.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_859.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_830.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>9.4   DUIM-Frames Module</P>

</DIV>
<A NAME=HEADING860-0></A>
<H1> <A NAME=MARKER-2-6714></A><A NAME=MARKER-9-6715></A>define frame</H1>
<P><I>Definition macro</I></P>
<H3>Summary</H3>
<P> Defines a new class of frame with the specified properties.<A NAME=MARKER-10-6716></A></P>
<H3>Macro call</H3>
<dl><dd><pre>define frame <I>name</I> ({<I>supers</I>},*) {<I>slots-panes-options</I>} end</pre></dl>
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>name</I><DD> A Dylan name<SUB>bnf</SUB>.
<P> </P><DT><I>supers</I><DD> A Dylan name<SUB>bnf</SUB>.
<P> </P><DT><I>slots-panes-options</I><DD> A Dylan body<SUB>bnf</SUB>.
</DL>
<H3><A NAME=MARKER-10-6717></A>Values</H3>
<DL>
<P> </P><DT>None.<DD>
</DL>
<H3>Library</H3>
<dl><dd><pre>duim-frames</pre></dl>
<H3>Module</H3>
<dl><dd><pre>duim-frames</pre></dl>
<H3>Description</H3>
<P> Defines a new class of frame called <I>name</I> with the specified properties. This macro is equivalent to <CODE>define class</CODE>, but with additional options.</P>
<P> The <I>supers</I> argument lets you specify any classes from which the frame you are creating should inherit. You must include at least one concrete frame class, such as <A HREF="dref_983.htm#MARKER-9-7339"><CODE>&lt;simple-frame&gt;</CODE></A> or <A HREF="dref_881.htm#MARKER-9-6800"><CODE>&lt;dialog-frame&gt;</CODE></A>.</P>
<P> The <I>slots-panes-options</I> supplied describe the state variables of the frame class; that is, the total composition of the frame. This includes, but is not necessarily limited to, any panes, layouts, tool bar, menus, and status bar contained in the frame. You can specify arbitrary slots in the definition of the frame. You may specify any of the following:</P>
<UL>
<LI>A number of slots for defining per-instance values of the frame state.
<LI>A number of named panes. Each pane defines a sheet of some sort.
<LI>A single layout.
<LI>A tool bar.
<LI>A status bar.
<LI>A menu bar. 
<LI>A command table.
<LI>A number of sequential pages for inclusion in a multi-page frame such as a wizard or property dialog.
</UL>
<P> <B>Note:</B> If the frame has a menu bar, either define the menu bar and its panes, or a command table, but not both. See the discussion below for more details.</P>
<P> <A NAME=MARKER-10-6718></A>The syntax for each of these options is described below.</P>
<P> The <CODE>slot</CODE> option allows you to define any slot values that the new frame class should allow. This option has the same syntax as slot specifiers in <CODE>define class</CODE>, allowing you to define init-keywords, required init-keywords, init-functions and so on for the frame class.</P>
<P> For each of the remaining options, the syntax is as follows:</P>
<dl><dd><pre><I>option</I> <I>name</I> (<I>owner</I>) <I>body</I>;</pre></dl>
<P> The argument <I>option</I> is the name of the option used, taken from the list described below, <I>name</I> is the name you assign to the option for use within your code, <I>owner</I> is the owner of the option, usually the frame itself, and <I>body</I> contains the definition of value returned by the option.</P>
<P> <CODE>pane</CODE> specifies a single pane in the frame. The default is <CODE>#f</CODE>, meaning that there is no single pane. This is the simplest way to define a pane hierarchy. </P>
<P> <CODE>layout</CODE> specifies the layout of the frame. The default is to lay out all of the named panes in horizontal strips. The value of this option must evaluate to an instance of a layout.</P>
<P> <CODE>command-table</CODE> defines a command table for the frame. The default is to create a command table with the same name as the frame. The value of this option must evaluate to an instance of <A HREF="dref_845.htm#MARKER-9-6633"><CODE>&lt;command-table&gt;</CODE></A>.</P>
<P> <CODE>menu-bar</CODE> is used to specify the commands that will in the menu bar of the frame. The default is <CODE>#t</CODE>. If used, it typically specifies the top-level commands of the frame. The value of this option can evaluate to any of the following:</P>
<DL>
<P> </P><DT><CODE>#f</CODE><DD> The frame has no menu bar.
<P> </P><DT><CODE>#t</CODE>,<DD> The menu bar for the frame is defined by the value of the <CODE>command-table</CODE> option.
<P> </P><DT>A command table<DD>
<P>The menu bar for the frame is defined by this command table.</P>
<P> </P><DT>A body of code<DD> This is interpreted the same way as the <CODE>menu-item</CODE> options to <A HREF="dref_859.htm#MARKER-9-6711"><CODE>define command-table</CODE></A>. 
</DL>
<P> <CODE>disabled-commands</CODE> is used to specify a list of command names that are initially disabled in the application frame. The default is <CODE>#[]</CODE>. The set of enabled and disabled commands can be modified via <A HREF="dref_843.htm#MARKER-9-6625"><CODE>command-enabled?-setter</CODE></A>. </P>
<P> <CODE>tool-bar</CODE> is used to specify a tool bar for the frame. The default is <CODE>#f</CODE>. The value of this option must evaluate to an instance of <A HREF="dref_802.htm#MARKER-9-5682"><CODE>&lt;tool-bar&gt;</CODE></A>. </P>
<P> <CODE>top-level</CODE> specifies a function that executes the top level loop of the frame. It has as its argument a list whose first element is the name of a function to be called to execute the top-level loop. The function must take at least one argument, which is the frame itself. The rest of the list consists of additional arguments to be passed to the function. </P>
<P> <CODE>icon</CODE> specifies an <A HREF="dref_225.htm#MARKER-9-1167"><CODE>&lt;image&gt;</CODE></A><CODE>&lt;image&gt;</CODE> to be used in the window decoration for the frame. This icon may be used in the title bar of the frame, or when the frame is iconized, for example.</P>
<P> <CODE>geometry</CODE> specifies the geometry for the frame.</P>
<P> <CODE>pages</CODE> is used to define the pages of a wizard or property frame. This evaluates to a list of pages, each of which can be defined as panes within the frame definition itself. For example:</P>
<DL><DD><PRE>define frame &lt;wizard-type&gt; (&lt;wizard-frame&gt;)
  ...
  pages (frame)
    vector(frame.page-1, frame.page-2, frame.page-3);
end frame &lt;wizard-type&gt;</PRE></DL>
<P> The <I>name</I>, <I>supers</I>, and slot arguments are not evaluated. The values of each of the options are evaluated.</P>
<H3>Example</H3>
<DL><DD><PRE>define frame &lt;multiple-values-dialog&gt; (&lt;dialog-frame&gt;)
  pane label-pane (frame)
    make(&lt;option-box&gt;, items: #(&quot;&amp;Red&quot;, &quot;&amp;Green&quot;,
                                &quot;&amp;Blue&quot;));
  pane check-one (frame)
    make(&lt;check-button&gt;, label: &quot;Check box test text&quot;);
  pane check-two (frame)
    make(&lt;check-button&gt;, label: &quot;Check box test text&quot;);
  pane radio-box (frame)
    make(&lt;radio-box&gt;,
         items: #(&quot;Option &amp;1&quot;, &quot;Option &amp;2&quot;, 
                  &quot;Option &amp;3&quot;, &quot;Option &amp;4&quot;),
         orientation: #&quot;vertical&quot;);
  pane first-group-box (frame)
    grouping (&quot;Group box&quot;, max-width: $fill)
      vertically (spacing: 4)
        make(&lt;label&gt;, label: &quot;Label:&quot;);
        horizontally (spacing: 4, 
                      y-alignment: #&quot;center&quot;)
          frame.label-pane;
          make(&lt;button&gt;, label: &quot;Button&quot;);
        end;
        frame.check-one;
        frame.check-two;
      end
    end;
  pane second-group-box (frame)
    grouping (&quot;Group box&quot;, max-width: $fill)
      frame.radio-box
    end;
  layout (frame)
    vertically (spacing: 4)
      frame.first-group-box;
      frame.second-group-box;
    end;
end frame &lt;multiple-values-dialog&gt;;</PRE></DL>
<H3>See also</H3>
<P> <A HREF="dref_983.htm#MARKER-9-7339"><CODE>&lt;simple-frame&gt;</CODE>,  page 847</A></P>
<P> <A HREF="dref_989.htm#MARKER-9-7394"><CODE>&lt;wizard-frame&gt;</CODE>,  page 852</A></P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Functional Developer Library Reference: DUIM - 3 Dec 1998</ADDRESS>
<P><A HREF="dref_861.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_859.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_830.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
