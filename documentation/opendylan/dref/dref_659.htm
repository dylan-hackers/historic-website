<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="dref_1.htm">
<LINK REL=UP HREF="dref_652.htm">
<LINK REL=PREV HREF="dref_658.htm">
<LINK REL=NEXT HREF="dref_660.htm">
<TITLE> &lt;button&gt;</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING659></A>

<DIV>
<P><A HREF="dref_660.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_658.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_652.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>8.11   DUIM-Gadgets Module</P>

</DIV>
<A NAME=HEADING659-0></A>
<H1> <A NAME=MARKER-2-4906></A><A NAME=MARKER-9-4907></A>&lt;button&gt;</H1>
<P><I>Open abstract instantiable class</I></P>
<H3>Summary</H3>
<P> The class of all button gadgets.</P>
<H3>Superclasses</H3>
<dl><dd><pre><CODE><A HREF="dref_815.htm#MARKER-9-5774">&lt;value-gadget&gt;</A></CODE></pre></dl>
<H3>Init-keywords</H3>
<DL>
<P> </P><DT><CODE>accelerator:</CODE><DD> <A NAME=MARKER-2-4908></A><A NAME=MARKER-2-4909></A>An instance of type <CODE>false-or(<A HREF="dref_383.htm#MARKER-9-2258">&lt;gesture&gt;</A>)</CODE>. Default value: <CODE>#f</CODE>.
<P> </P><DT><CODE>mnemonic:</CODE><DD> <A NAME=MARKER-2-4910></A><A NAME=MARKER-2-4911></A>An instance of type <CODE>false-or(&lt;character&gt;)</CODE>. Default value: <CODE>#f</CODE>.
</DL>
<H3>Library</H3>
<dl><dd><pre>duim-gadgets</pre></dl>
<H3>Module</H3>
<dl><dd><pre>duim-gadgets</pre></dl>
<H3>Description</H3>
<P> The class of all button gadgets.</P>
<P> The <CODE>accelerator:</CODE> init-keyword is used to specify a keyboard accelerator for the button. This is a key press that gives the user a method for activating the button using a short key sequence rather than by clicking the button itself. Keyboard accelerators usually combine the CONTROL and possibly SHIFT keys with an alphanumeric character.</P>
<P> When choosing accelerators, you should be aware of style guidelines that might be applicable for the operating system you are developing for. For example, a common accelerator for the command <B>File &gt; Open</B> in Windows is CTRL+O.</P>
<P> Keyboard accelerators are mostly used in menu buttons, though they can be applied to other forms of button as well.</P>
<P> The <CODE>mnemonic:</CODE> init-keyword is used to specify a keyboard mnemonic for the button. This is a key press that involves pressing the ALT key followed by a number of alphanumeric keys.</P>
<P> Note that the choice of keys is more restrictive than for keyboard accelerators. They are determined in part by the names of button itself (and, in the case of menu buttons, the menu that contains it), as well as by any appropriate style guidelines. For example, a common mnemonic for the <B>File &gt; Open</B> command is ALT, F, O. </P>
<P> Mnemonics have the advantage that the letters forming the mnemonic are automatically underlined in the button label on the screen (and, for menu buttons, the menu itself). This means that they do not have to be remembered. In addition, when the user makes use of a mnemonic in a menu, the menu itself is displayed on screen, as if the command had been chosen using the mouse. This does not happen if the keyboard accelerator is used.</P>
<P> Buttons are intrinsically "non-stretchy" gadgets. That is, the width and height of a button is generally calculated on the basis of the button's label, and the button will be sized so that it fits the label accordingly. Sometimes, however, you want a button to occupy all the available space that is given it, however large that space may be. To force a button to use all the available width or height, specify <CODE>max-width: $fill</CODE> or <CODE>max-height: $fill</CODE> accordingly in the button definition. See the second example below to see how this is done.</P>
<H3>Operations</H3>
<P> <A HREF="dref_864.htm#MARKER-9-6731"><CODE>dialog-apply-button-setter</CODE></A> <A HREF="dref_867.htm#MARKER-9-6743"><CODE>dialog-back-button-setter</CODE></A> <BR><A HREF="dref_870.htm#MARKER-9-6757"><CODE>dialog-cancel-button-setter</CODE></A> <BR><A HREF="dref_876.htm#MARKER-9-6781"><CODE>dialog-exit-button-setter</CODE></A> <A HREF="dref_883.htm#MARKER-9-6838"><CODE>dialog-help-button-setter</CODE></A> <A HREF="dref_886.htm#MARKER-9-6849"><CODE>dialog-next-button-setter</CODE></A> <A HREF="dref_864.htm#MARKER-9-6731"><CODE>dialog-apply-button-setter</CODE></A></P>
<H3>Example</H3>
<DL><DD><PRE>contain
  (make(&lt;button&gt;, label: &quot;Hello&quot;, 
        activate-callback: 
          method (gadget) 
            notify-user
              (format-to-string 
                 (&quot;Pressed button %=&quot;, gadget),
                 owner: gadget) 
          end));</PRE></DL>
<P> The following example creates a column layout that contains two elements. </P>
<UL>
<LI>The first is a row layout that itself contains two buttons with short labels. 
<LI>The second is a button with a long label. 
</UL>
<P> The use of <CODE>equalize-widths?:</CODE> in the call to <CODE>vertically</CODE> ensures that these two elements have the same width.</P>
<P> The interesting part of this example is in the use of <CODE>max-width: $fill</CODE> in the definition of the buttons with shorter labels. If this was not used, then each button would be sized such that it just fit its own label, and there would be empty space in the row layout. However, using <CODE>max-width: $fill</CODE> ensures that each button is made as large as possible, so as to fit the entire width of the row layout.</P>
<DL><DD><PRE>vertically (equalize-widths?: #t)
    horizontally ()
      make(&lt;button&gt;, label: &quot;Red&quot;, max-width: $fill);
      make(&lt;button&gt;, label: &quot;Ultraviolet&quot;, 
           max-width: $fill);
    end;
    make(&lt;button&gt;, 
         label: 
           &quot;A button with a really really long label&quot;);
end</PRE></DL>
<H3>See also</H3>
<P> <A HREF="dref_660.htm#MARKER-9-4913"><CODE>&lt;button-box&gt;</CODE>,  page 535</A></P>
<P> <A HREF="dref_662.htm#MARKER-9-4930"><CODE>&lt;check-button&gt;</CODE>,  page 538</A></P>
<P> <A HREF="dref_594.htm#MARKER-9-4426"><CODE>$fill</CODE>,  page 465</A></P>
<P> <A HREF="dref_674.htm#MARKER-9-5004"><CODE>gadget-accelerator</CODE>,  page 552</A></P>
<P> <A HREF="dref_745.htm#MARKER-9-5323"><CODE>&lt;menu-button&gt;</CODE>,  page 616</A></P>
<P> <A HREF="dref_762.htm#MARKER-9-5402"><CODE>&lt;radio-button&gt;</CODE>,  page 631</A></P>
<P> <A HREF="dref_615.htm#MARKER-9-4543"><CODE>&lt;space-requirement&gt;</CODE>,  page 484</A></P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Functional Developer Library Reference: DUIM - 3 Dec 1998</ADDRESS>
<P><A HREF="dref_660.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_658.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_652.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
