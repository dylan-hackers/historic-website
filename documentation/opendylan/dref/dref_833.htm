<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="dref_1.htm">
<LINK REL=UP HREF="dref_830.htm">
<LINK REL=PREV HREF="dref_832.htm">
<LINK REL=NEXT HREF="dref_834.htm">
<TITLE> add-command-table-menu-item</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING833></A>

<DIV>
<P><A HREF="dref_834.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_832.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_830.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>9.4   DUIM-Frames Module</P>

</DIV>
<A NAME=HEADING833-0></A>
<H1> <A NAME=MARKER-2-6573></A><A NAME=MARKER-10-6574></A><A NAME=MARKER-2-6575></A><A NAME=MARKER-9-6576></A>add-command-table-menu-item</H1>
<P><I>Generic function</I></P>
<H3>Summary</H3>
<P> Adds a menu item to the specified command table.</P>
<H3>Signature</H3>
<dl><dd><pre>add-command-table-menu-item <I>command-table</I> <I>string</I> <I>type</I> <I>value</I> #key <I>documentation</I> <I>after</I> <I>accelerator</I> <I>mnemonic</I> <I>text-style</I> <I>error?</I> <I>items</I> <I>label-key</I> <I>value-key</I> <I>test</I> <I>callback</I> =&gt; <I>menu-item</I></pre></dl>
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>command-table</I><DD> An instance of type <A HREF="dref_845.htm#MARKER-9-6633"><CODE>&lt;command-table&gt;</CODE></A>.
<P> </P><DT><I>string</I><DD> An instance of type <CODE>false-or(&lt;string&gt;)</CODE>.
<P> </P><DT><I>type</I><DD> An instance of type <CODE>one-of(#&quot;command&quot;, #&quot;function&quot;, #&quot;menu&quot;, #&quot;divider&quot;)</CODE>.
<P> </P><DT><I>value</I><DD> An instance of type <CODE>&lt;object&gt;</CODE>.
<P> </P><DT><I>documentation</I><DD> An instance of type <CODE>&lt;string&gt;</CODE>.
<P> </P><DT><I>after</I><DD> An instance of type <CODE>one-of(#&quot;start&quot;, #&quot;end&quot;, #&quot;sort&quot;)</CODE>, or an instance of <CODE>&lt;string&gt;</CODE>. Default value: <CODE>#&quot;end&quot;</CODE>.
<P> </P><DT><I>accelerator</I><DD> An instance of type <CODE>false-or(</CODE><A HREF="dref_383.htm#MARKER-9-2258"><CODE>&lt;gesture&gt;</CODE></A><CODE>)</CODE>.
<P> </P><DT><I>mnemonic</I><DD> An instance of type <CODE>false-or(</CODE><A HREF="dref_383.htm#MARKER-9-2258"><CODE>&lt;gesture&gt;</CODE></A><CODE>)</CODE>.
<P> </P><DT><I>text-style</I><DD> An instance of type <A HREF="dref_266.htm#MARKER-9-1358"><CODE>&lt;text-style&gt;</CODE></A>.
<P> </P><DT><I>error?</I><DD> An instance of type <CODE>&lt;boolean&gt;</CODE>. Default value: <CODE>#t</CODE>.
<P> </P><DT><I>items</I><DD> An instance of type <CODE>limited(&lt;sequence&gt;, of: )</CODE>.<A NAME=MARKER-10-6577></A>
<P> </P><DT><I>label-key</I><DD> An instance of type <CODE>&lt;function&gt;</CODE>.
<P> </P><DT><I>value-key</I><DD> An instance of type <CODE>&lt;function&gt;</CODE>.
<P> </P><DT><I>test</I><DD> An instance of type <CODE>&lt;function&gt;</CODE>.<A NAME=MARKER-10-6578></A>
<P> </P><DT><I>callback</I><DD> An instance of type <CODE>&lt;function&gt;</CODE>.
</DL>
<H3><A NAME=MARKER-10-6579></A>Values</H3>
<DL>
<P> </P><DT><I>menu-item</I><DD> An instance of type <A HREF="dref_850.htm#MARKER-9-6656"><CODE>&lt;command-table-menu-item&gt;</CODE></A>.
</DL>
<H3><A NAME=MARKER-10-6580></A>Library</H3>
<dl><dd><pre>duim-frames</pre></dl>
<H3>Module</H3>
<dl><dd><pre>duim-frames</pre></dl>
<H3>Description</H3>
<P> Adds a command menu item to the menu in <I>command-table</I>. The <I>string</I> argument is the name of the command menu item; its character case is ignored. The <I>type</I> of the item is either <CODE>#&quot;command&quot;</CODE>, <CODE>#&quot;function&quot;</CODE>, <CODE>#&quot;menu&quot;</CODE>, or <CODE>#&quot;divider&quot;</CODE>. </P>
<P> When <I>type</I> is <CODE>#&quot;command&quot;</CODE>, <I>value</I> must be one of the following:</P>
<UL>
<LI>A command (a list consisting of a command name followed by a list of the arguments for the command).
<LI>A command name. In this case, <I>value</I> behaves as though a command with no arguments was supplied.
</UL>
<P> When all the required arguments for the command are supplied, clicking on an item in the menu invokes the command immediately. Otherwise, the user is prompted for the remaining required arguments. </P>
<P> When <I>type</I> is <CODE>#&quot;function&quot;</CODE>, <I>value</I> must be a function having indefinite extent that, when called, returns a command. The function is called with two arguments:</P>
<UL>
<LI>The gesture used to select the item (either a keyboard or button press event).
<LI>A "numeric argument". 
</UL>
<P> When <I>type</I> is <CODE>#&quot;menu&quot;</CODE>, this indicates that a sub-menu is required, and <I>value</I> must be another command table or the name of another command table. </P>
<P> When <I>type</I> is <CODE>#&quot;divider&quot;</CODE>, some sort of a dividing line is displayed in the menu at that point. If <I>string</I> is supplied, it will be drawn as the divider instead of a line. If the look and feel provided by the underlying window system has no corresponding concept, <CODE>#&quot;divider&quot;</CODE> items may be ignored. When <I>type</I> is <CODE>#&quot;divider&quot;</CODE>, <I>value</I> is ignored. </P>
<P> The argument <I>documentation</I> specifies a documentation string, This can be used to provide the user with some online documentation for the menu item. Documentation strings are often displayed in a status bar at the bottom of an application; highlighting the menu item using the mouse pointer displays the documentation string in the status bar.</P>
<P> The <I>text-style</I> argument, if supplied, represents text style. This specifies the font family, style, and weight with which to display the menu item in the menu. For most menu items, you should just use the default text style (that is, the one that the user chooses for all applications). However, in certain cases, some variation is allowed. </P>
<P> The <I>text-style</I> argument is of most use in context sensitive pop-up menus, which often have a default menu item. This is usually the command that is invoked by pressing the RETURN key on the current selection: for example, in a list of files, the default command usually opens the selected file in the application associated with it. In Windows 95, the default command is displayed using a bold font, to differentiate it from other commands in the menu, and you should use the text-style argument to specify this.</P>
<P> When altering the text style of a menu item, you should always try to stick to any relevant interface guidelines.</P>
<P> The <I>items</I> argument is used to specify the gadgets that are to be supplied to the command table as menu items. You can supply either push boxes, check boxes, or radio boxes.<A NAME=MARKER-10-6581></A></P>
<P> The <I>after</I> argument denotes where in the menu the new item is to be added. It must be one of the following:</P>
<DL>
<P> </P><DT><CODE>#&quot;start&quot;</CODE> <DD> Adds the new item to the beginning of the menu.
<P> </P><DT><CODE>#&quot;end&quot;</CODE> <DD> Adds the new item to the end of the menu.
<P> </P><DT>A string naming an existing entry <DD>
<P>Adds the new item after that entry. </P>
<P> </P><DT><CODE>#&quot;sort&quot;</CODE><DD> Insert the item in such as way as to maintain the menu in alphabetical order. 
</DL>
<P> If <I>mnemonic</I> is supplied, the item is added to the keyboard mnemonic table for the command table. The value of <I>mnemonic</I> must be a keyboard gesture name. </P>
<P> When <I>mnemonic</I> is supplied and <I>type</I> is <CODE>#&quot;command&quot;</CODE> or <CODE>#&quot;function&quot;</CODE>, typing a key on the keyboard that matches the mnemonic invokes the command specified by <I>value</I>.</P>
<P> When <I>type</I> is <CODE>#&quot;menu&quot;</CODE>, the command is read from the submenu indicated by <I>value</I> in a window system specific manner. This usually means that the submenu itself is displayed, allowing the user to see the available options at that point.</P>
<P> When <I>accelerator</I> is supplied, typing a key sequence on the keyboard that matches the accelerator invokes the command specified by <I>value</I>, no matter what <I>type</I> is.</P>
<P> If the item named by <I>string</I> is already present in the command table and <I>error?</I> is <CODE>#t</CODE>, then an error is signalled. When the item is already present in the command table and <I>error?</I> is <CODE>#f</CODE>, the old item is removed from the menu before adding the new item. Note that the character case of <I>string</I> is ignored when searching the command table.</P>
<H3><A NAME=MARKER-10-6582></A>See also</H3>
<P> <A HREF="dref_850.htm#MARKER-9-6656"><CODE>&lt;command-table-menu-item&gt;</CODE>,  page 724</A></P>
<P> <A HREF="dref_979.htm#MARKER-9-7315"><CODE>remove-command-table-menu-item</CODE>,  page 844</A></P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Functional Developer Library Reference: DUIM - 3 Dec 1998</ADDRESS>
<P><A HREF="dref_834.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dref_832.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dref_830.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dref_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dref_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dref_991.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
