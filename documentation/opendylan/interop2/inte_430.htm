<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_388.htm">
<LINK REL=PREV HREF="inte_429.htm">
<LINK REL=NEXT HREF="inte_431.htm">
<TITLE> out-ref</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING430></A>

<DIV>
<P><A HREF="inte_431.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_429.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_388.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.12   The OLE-AUTOMATION module </P>

</DIV>
<A NAME=HEADING430-0></A>
<H1> <A NAME=MARKER-2-1408></A>out-ref</H1>
<P><I>Function</I></P>
<H3>Summary</H3>
<dl><dd><pre>out-ref <I>type</I> =&gt; <I>ref</I></pre></dl>
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>type</I><DD> An instance of <CODE>&lt;integer&gt;</CODE> or <CODE>&lt;type&gt;</CODE>.
</DL>
<H3>Values</H3>
<DL>
<P> </P><DT><I>ref</I><DD> An instance of <CODE>&lt;ole-arg-spec&gt;</CODE>.
</DL>
<H3>Description</H3>
<P> Use this in a client to construct an object that can be passed as an argument to <CODE>call-simple-method</CODE> and receive the value of a returned output parameter. The return value is an instance of <CODE>&lt;ole-arg-spec&gt;</CODE>.</P>
<P> The <I>type</I> of the value is specified as either one of the low-level VARIANTARG type codes (such as <CODE>$VT-I4</CODE>) or as a C-FFI type designator, or as a corresponding Dylan type. Use the accessor <CODE>arg-spec-value</CODE> to get the value after the call.</P>
<P> For example, if a server defines a method that has a by-reference output parameter with C type <CODE>long</CODE>, a Dylan client could receive the value like this:</P>
<DL><DD><PRE>  // first make a place to hold the output parameter
  let ref = out-ref(&lt;C-long&gt;);
  // then call the server method
  call-simple-method(disp-interface, disp-id, ref);
  // now pick up the received value
  let value = arg-spec-value(ref);</PRE></DL>
<P> If the server is written in Dylan, it will simply receive an instance of <CODE>&lt;C-long*&gt;</CODE>, and should use <CODE>pointer-value-setter</CODE> to store the value.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_431.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_429.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_388.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
