<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_356.htm">
<LINK REL=PREV HREF="inte_363.htm">
<LINK REL=NEXT HREF="inte_365.htm">
<TITLE>4.5.8   Skeleton OLE Automation controller</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING364></A>

<DIV>
<P><A HREF="inte_365.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_363.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_356.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.5   Building an Automation controller application</P>

</DIV>
<A NAME=HEADING364-0></A>
<H1>4.5.8   <A NAME=MARKER-2-1196></A><A NAME=MARKER-2-1197></A><A NAME=MARKER-2-1198></A>Skeleton OLE Automation controller</H1>
<P>The following skeleton code for a simple Automation controller combines the features discussed in sections <A HREF="inte_357.htm#MARKER-9-1173">4.5.1</A> to <A HREF="inte_363.htm#MARKER-9-1195">4.5.7</A>:</P>
<PRE>
OLE-initialize();  // Initialize OLE libraries
<P></P>
let dispinterface = create-dispatch(class-id); // Start server
<P></P>
let disp-id = 
  get-id-of-name(disp-interface, &quot;frob&quot;); // Look method up 
<P></P>
let result = call-simple-method(dispinterface, disp-id, &quot;foo&quot;,
                                &quot;bar&quot;); // Call the method
<P></P>
Release(dispinterface); // Release the server 
<P></P>
OLE-uninitialize();  // Shut down OLE
<P></P>
</PRE>
<P>A controller application that fits this simple model can be made even simpler using the <A NAME=MARKER-2-1199></A>macro <CODE><A NAME=MARKER-2-1200></A><A HREF="inte_405.htm#MARKER-9-1348">with-dispatch-interface</A></CODE>: </P>
<PRE>
with-dispatch-interface dispinterface (class-id)
  let disp-id = 
    get-id-of-name(dispinterface, &quot;frob&quot;); // Look method up
<P></P>
  let result = call-simple-method(dispinterface, disp-id, &quot;foo&quot;,
                                  &quot;bar&quot;); // Call the method
<P></P>
end with-dispatch-interface;
<P></P>
</PRE>
<P>Furthermore, if a DISPID will only be used once, the member name can just be passed directly to <A HREF="inte_408.htm#MARKER-9-1360"><CODE>get-property</CODE></A> or <A HREF="inte_411.htm#MARKER-9-1367"><CODE>call-simple-method</CODE></A> instead with no loss of efficiency. So we could do:</P>
<PRE>
with-dispatch-interface disp-interface (class-id)
  let result = call-simple-method(disp-interface, &quot;frob&quot;, &quot;foo&quot;,
                                  &quot;bar&quot;);
end with-dispatch-interface;
<P></P>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_365.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_363.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_356.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
