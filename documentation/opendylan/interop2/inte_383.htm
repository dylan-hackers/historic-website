<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_347.htm">
<LINK REL=PREV HREF="inte_382.htm">
<LINK REL=NEXT HREF="inte_384.htm">
<TITLE>4.7   Error reporting</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING383></A>

<DIV>
<P><A HREF="inte_384.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_382.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_347.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4 OLE Automation</P>

</DIV>
<A NAME=HEADING383-0></A>
<A NAME=UID-ole-automation-901218></A>
<H1>4.7   <A NAME=MARKER-2-1266></A><A NAME=MARKER-2-1267></A>Error reporting</H1>
<P>Most of the low-level COM and OLE functions return a status code as their first result value. You can test this value with the functions <CODE>FAILED?</CODE> and <CODE>SUCCEEDED?</CODE> to determine whether an error is indicated. You can also compare the value against various named constants to check for specific error conditions. </P>
<P>These constants are defined in source files under the top-level System folder in the Functional Developer distribution:</P>
<PRE>
System\ole\com\com-err.dylan
System\ole\ole-automation\auto-err.dylan
<P></P>
</PRE>
<P>The Dylan type of OLE status codes is called either <CODE>&lt;SCODE&gt;</CODE> ("status code") or <CODE>&lt;HRESULT&gt;</CODE> ("result handle"). These two names mean the same thing; the reason for there being two names is historical.</P>
<P><B>Note:</B> Do not assume that status code is an <CODE>&lt;integer&gt;</CODE>. </P>
<P>In order to simplify your application, the high-level OLE Automation functions do not require you to check status codes. Instead, when an error occurs, it is signalled automatically as an instance of class <A HREF="inte_567.htm#MARKER-9-1910"><CODE>&lt;ole-error&gt;</CODE></A>, a subclass of <CODE>&lt;error&gt;</CODE>.</P>
<P>If you call a low-level function and want to turn the status code into an error, do something like this: </P>
<PRE>
let status = foo(interface, whatever);
check-ole-status(status, &quot;foo&quot;, interface, whatever);
<P></P>
</PRE>
<P>The call to <A HREF="inte_569.htm#MARKER-9-1916"><CODE>check-ole-status</CODE></A> signals an <A HREF="inte_567.htm#MARKER-9-1910"><CODE>&lt;ole-error&gt;</CODE></A> if the call to <CODE>foo</CODE> fails.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_384.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_382.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_347.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
