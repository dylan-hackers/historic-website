<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_388.htm">
<LINK REL=PREV HREF="inte_395.htm">
<LINK REL=NEXT HREF="inte_397.htm">
<TITLE> &lt;variable-description&gt;</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING396></A>

<DIV>
<P><A HREF="inte_397.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_395.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_388.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.12   The OLE-AUTOMATION module </P>

</DIV>
<A NAME=HEADING396-0></A>
<H1> <A NAME=MARKER-2-1315></A><A NAME=MARKER-2-1316></A><A NAME=MARKER-9-1317></A>&lt;variable-description&gt;</H1>
<P><I>Sealed concrete class</I></P>
<H3>Summary</H3>
<P> Describes a single property of a dispinterface. </P>
<H3>Superclasses</H3>
<dl><dd><pre>&lt;object&gt; </pre></dl>
<H3>Init-keywords</H3>
<DL>
<P> </P><DT><CODE>name:</CODE><DD> A string name for the property. Required.
<P> </P><DT><CODE>getter:</CODE><DD> A Dylan function that takes the dispinterface as its sole argument and returns the value of the property, or <CODE>#f</CODE> if the property is not externally readable. Default value: <CODE>#f</CODE>.
<P> </P><DT><CODE>setter:</CODE><DD> A Dylan function that changes the value of the property, taking the new value and the dispinterface as its arguments, or <CODE>#f</CODE> if the client is not permitted to change the property value. Default value: <CODE>#f</CODE>.
<P>Note that there is a special case. If the value of the property is an interface pointer (such as <CODE>&lt;LPUNKNOWN&gt;</CODE> or <CODE>&lt;LPDISPATCH&gt;</CODE>), the setter method must call <CODE>AddRef</CODE> on the new value and must call <CODE>Release</CODE> on the old value.</P>
<P> </P><DT><CODE>type:</CODE><DD> A C designator type from the C-FFI library. It is used to specify the datatype that an Automation client written in C or C++ will use to represent the property value. The following values are legal:
<P><CODE>&lt;C-int&gt;</CODE>, <CODE>&lt;C-short&gt;</CODE>, <CODE>&lt;C-long&gt;</CODE>, <CODE>&lt;C-float&gt;</CODE>, <CODE>&lt;C-double&gt;</CODE>, <CODE>&lt;C-signed-char&gt;</CODE>, <CODE>&lt;C-character&gt;</CODE>, <CODE>&lt;CY&gt;</CODE>,   <CODE>&lt;DATE&gt;</CODE>, <A HREF="inte_391.htm#MARKER-9-1291"><CODE>&lt;ole-array&gt;</CODE></A>, <A HREF="inte_393.htm#MARKER-9-1300"><CODE>&lt;class-factory&gt;</CODE></A>, <A HREF="inte_389.htm#MARKER-9-1284"><CODE>&lt;LPDISPATCH&gt;</CODE></A>, <CODE>&lt;C-HRESULT&gt;</CODE>, <CODE>&lt;VARIANT-BOOL&gt;</CODE>, <CODE>&lt;VARIANT&gt;</CODE> </P>
<P>You can also specify the corresponding Dylan type (such as <CODE>&lt;single-float&gt;</CODE>, <CODE>&lt;double-float&gt;</CODE>, <CODE>&lt;character&gt;</CODE>, or <CODE>&lt;boolean&gt;</CODE>). The class <CODE>&lt;integer&gt;</CODE> is considered equivalent to <CODE>&lt;C-long&gt;</CODE>, and <CODE>&lt;string&gt;</CODE> is equivalent to <A HREF="inte_391.htm#MARKER-9-1291"><CODE>&lt;ole-array&gt;</CODE></A>.</P>
<P>(In addition, the low-level representation as an instance of <CODE>&lt;LPTYPEDESC&gt;</CODE> can be used here.)</P>
<P>For an array, you must also specify the element type. Do this by using the function <CODE>ole-array-type</CODE> to construct a type description. For example, <CODE>ole-array-type(&lt;C-float&gt;)</CODE> for a vector or array of single floats, or <CODE>ole-array-type(&lt;VARIANT&gt;)</CODE> for a heterogeneous array. Note that dimensions are not specified here.</P>
<P>If you do not specify the <CODE>type:</CODE>, the OLE-Automation library will select one automatically to most closely match the Dylan type declared for the result value of the getter function. One way or the other, the type must be specified. </P>
<P>Note that the default is the type declared for the generic function. It is not sufficient simply to specify the type for a slot, since there is not enough information here to know which method is applicable.</P>
<P> </P><DT><A NAME=MARKER-10-1318></A><CODE>documentation:</CODE><DD> A optional string describing the property. This is called a <I>helpstring</I> in IDL. 
<P> </P><DT><CODE>help-context:</CODE><DD> The position in the WinHelp file (from <CODE>help-file:</CODE> in the <CODE>&lt;coclass-type-info&gt;</CODE> instance) where this property is documented. Optional. 
<P> </P><DT><CODE>disp-id:</CODE><DD> An <CODE>&lt;integer&gt;</CODE> which is the DISPID (dispatch ID) by which the client will refer to the property. Usually you would not specify this, and the OLE-Automation library would automatically assign a DISPID. You do need to specify a DISPID when implementing a stock property. For example:
</DL>
<DL><DD><PRE>                  make(&lt;variable-description&gt;, 
                       name: &quot;Value&quot;, 
                       disp-id: $DISPID-VALUE ...) </PRE></DL>
<H3>Description</H3>
<P> Describes a single property of a dispinterface. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_397.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_395.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_388.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
