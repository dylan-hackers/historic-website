<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_366.htm">
<LINK REL=PREV HREF="inte_377.htm">
<LINK REL=NEXT HREF="inte_379.htm">
<TITLE>4.6.10   Servers providing more than one dispinterface</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING378></A>

<DIV>
<P><A HREF="inte_379.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_377.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_366.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.6   Building an Automation server application</P>

</DIV>
<A NAME=HEADING378-0></A>
<H1>4.6.10   <A NAME=MARKER-2-1247></A><A NAME=MARKER-2-1248></A><A NAME=MARKER-2-1249></A><A NAME=MARKER-9-1250></A>Servers providing more than one dispinterface</H1>
<P>You can create a server that supports more than one dispinterface as follows. </P>
<PRE>
define constant my-coclass-type-info =
  make(&lt;coclass-type-info&gt;,
       uuid: make-GUID(...), // Class ID
       interfaces: 
         vector(make(&lt;component-interface-description&gt;,
                     class: &lt;my-dispatch-object1&gt;, 
                     typeinfo: make(&lt;disp-type-info&gt;, ...)),
                make(&lt;component-interface-description&gt;,
                     class: &lt;my-dispatch-object2&gt;, 
                     typeinfo: make(&lt;disp-type-info&gt;, 
                                    uuid: make-GUID(...), ...), ...)
...
));
<P></P>
...
<P></P>
let factory = make-object-factory(my-type-info);
<P></P>
</PRE>
<P>Each element of the <CODE>interfaces:</CODE> sequence specifies a dispinterface with type information, and the Dylan class that must be instantiated to implement it. </P>
<P>By default, the first dispinterface listed will be the default interface that will be returned if a client application calls <A HREF="inte_565.htm#MARKER-9-1905"><CODE>QueryInterface</CODE></A> on <CODE>$IID-IDispatch</CODE> (although it can specify an alternate <CODE>uuid:</CODE> too). </P>
<P>The type information for the remaining dispinterfaces must specify the <CODE>uuid:</CODE> option, supplying the ID that a client application can use to select them.</P>
<P>Note too that each type information instance must provide a value for the <CODE>name:</CODE> option, so that it has a distinguished name in the type library. See <A HREF="inte_353.htm#MARKER-9-1164">"Type libraries and type information" on page 174</A> a description of a type library.</P>
<P>By default, the class factory instantiates the class <A HREF="inte_400.htm#MARKER-9-1332"><CODE>&lt;simple-component-object&gt;</CODE>,  page 213</A>, but you can specify a user-defined subclass thereof with the <CODE>class:</CODE> initialization keyword for <A HREF="inte_399.htm#MARKER-9-1326"><CODE>&lt;coclass-type-info&gt;</CODE>,  page 211</A>. This is a subclass of <CODE>&lt;IUnknown&gt;</CODE>, so its <CODE>initialize</CODE> method could create additional interfaces using it as the controlling unknown if you want your OLE object to support other interfaces besides <CODE>IDispatch</CODE>. Also, <CODE>&lt;coclass-type-info&gt;</CODE> accepts all of the same optional keywords as <A HREF="inte_395.htm#MARKER-9-1311"><CODE>&lt;disp-type-info&gt;</CODE>,  page 203</A>, which can be used to provide type library documentation for the object as a whole. This might be a reason to use it even if there is only one interface. For example:</P>
<PRE>
make-object-factory(
  make(&lt;coclass-type-info&gt;,
       name: &quot;foo&quot;, documentation: &quot;la de dah&quot;,
       major-version: 1, minor-version: 2,
...
<P></P>
</PRE>
<P>Alternatively, the type information can be specified by using the macro <CODE>define</CODE> <CODE>coclass</CODE>. For example:</P>
<PRE>
define coclass my-coclass 
  name &quot;foo&quot;;
  uuid make-GUID(...); // Class ID
  default interface &lt;interface-1&gt;;
  interface &lt;interface-2&gt;;
end;
<P></P>
</PRE>
<P>where each interface class was defined by <CODE>define</CODE> <CODE>dispatch-interface</CODE>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_379.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_377.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_366.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
