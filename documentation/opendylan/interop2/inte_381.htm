<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_366.htm">
<LINK REL=PREV HREF="inte_380.htm">
<LINK REL=NEXT HREF="inte_382.htm">
<TITLE>4.6.13   Skeleton OLE Automation server </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING381></A>

<DIV>
<P><A HREF="inte_382.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_380.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_366.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.6   Building an Automation server application</P>

</DIV>
<A NAME=HEADING381-0></A>
<H1>4.6.13   <A NAME=MARKER-2-1258></A><A NAME=MARKER-2-1259></A><A NAME=MARKER-2-1260></A><A NAME=MARKER-2-1261></A>Skeleton OLE Automation server </H1>
<P>Putting all the previous elements together, the main program for an Automation server might look something like this:</P>
<PRE>
define constant $my-class-id = make-GUID(...);
<P></P>
define method main-program () =&gt; ()
<P></P>
  if (OLE-util-register-only?()) // [un]register and terminate
    register-automation-server($my-class-id, 
                               &quot;Foo.Bar&quot;,
                               &quot;Simple OLE Automation server&quot;);
<P></P>
  else
    initialize-my-application(); // create window etc.
<P></P>
    // create and register the factory object:
<P></P>
    with-class-factory (clsid: $my-class-id,
                        class: &lt;my-dispatch-object&gt;,
                        typeinfo: make(&lt;disp-type-info&gt;, ...))
<P></P>
      // normal Windows event loop:
<P></P>
      with-stack-structure (pmsg :: &lt;PMSG&gt;)
        while(GetMessage(pmsg, $NULL-HWND, 0, 0))
          TranslateMessage(pmsg);
          DispatchMessage(pmsg);
        end while;
      end with-stack-structure;
<P></P>
    end with-class-factory;
<P></P>
    values()
<P></P>
  end if;
<P></P>
end method main-program;
<P></P>
</PRE>
<P>However, if the program uses DUIM to implement its user interface, the event loop will be provided by DUIM, so the main program will look something like:</P>
<PRE>
define method main-program () =&gt; ()
  if (OLE-util-register-only?()) // [un]register and terminate
    register-automation-server($my-class-id, &quot;Foo.Bar&quot;,
      &quot;a simple OLE Automation server example&quot;);
  else
    let frame = make(&lt;my-frame&gt;);
    with-class-factory (clsid: $my-class-id,
                        class: &lt;my-dispatch-object&gt;,
                        typeinfo: ...))
      start-frame(frame);
    end with-class-factory;
  end if;
end method main-program;
<P></P>
</PRE>
<P>Some application programs can be used either interactively or by Automation control. In such a case, you might want to create a class factory only if the program was actually initiated by an Automation controller. For this purpose, you can do something like this:</P>
<PRE>
...
<P></P>
let factory = #f;
<P></P>
if (OLE-util-automation?())
  factory := make(&lt;class-factory&gt;, ...);
end if;
<P></P>
... // body of program
<P></P>
revoke-registration(factory); // does nothing if argument is #f
<P></P>
...
<P></P>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_382.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_380.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_366.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
