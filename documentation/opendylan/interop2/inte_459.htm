<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_455.htm">
<LINK REL=PREV HREF="inte_458.htm">
<LINK REL=NEXT HREF="inte_460.htm">
<TITLE> terminate</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING459></A>

<DIV>
<P><A HREF="inte_460.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_458.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_455.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6.7.2   Required methods for compound document servers</P>

</DIV>
<A NAME=HEADING459-0></A>
<H1> <A NAME=MARKER-10-1586></A><A NAME=MARKER-2-1587></A><A NAME=MARKER-2-1588></A>terminate</H1>
<P><I>G.f. method</I></P>
<H3>Summary</H3>
<P> A hook method for cleanup events in your server application when the container disconnects.</P>
<H3>Signature</H3>
<dl><dd><pre>terminate <I>obj</I> =&gt; ()</pre></dl>
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>obj</I><DD> An instance of your subclass of <A HREF="inte_452.htm#MARKER-9-1562"><CODE>&lt;ole-server-framework&gt;</CODE></A> or <A HREF="inte_453.htm#MARKER-9-1566"><CODE>&lt;ole-in-process-server&gt;</CODE></A>.
</DL>
<H3>Values</H3>
<P> None.</P>
<H3>Library</H3>
<dl><dd><pre>OLE-Server</pre></dl>
<H3>Module</H3>
<dl><dd><pre>OLE-Server</pre></dl>
<H3>Description</H3>
<P> A hook method for cleanup events in your server application. The method is called by the OLE-Server library when the container disconnects.</P>
<P> Your method must take whatever action is appropriate given that the object <I>obj</I> is no longer in use. Typically, your method should post a close message to cause the process to be terminated. For example:</P>
<DL><DD><PRE>define method terminate (obj :: &lt;my-server-obj&gt;) =&gt; ()
  next-method();
  if (OLE-util-started-by-OLE?()) // if started by OLE 
    // post close message to terminate the process.
    PostMessage(obj.main-window, $WM-SYSCOMMAND, 
                $SC-CLOSE, 0);
  end if;
  values()
end;</PRE></DL>
<P> <B>Note:</B> Your method must always call <CODE>next-method</CODE> first, because there is a default method that does important bookkeeping. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_460.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_458.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_455.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
