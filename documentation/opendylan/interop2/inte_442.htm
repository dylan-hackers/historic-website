<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_436.htm">
<LINK REL=PREV HREF="inte_441.htm">
<LINK REL=NEXT HREF="inte_443.htm">
<TITLE> define dual-interface</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING442></A>

<DIV>
<P><A HREF="inte_443.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_441.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_436.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>5.3   Macros for defining custom interfaces</P>

</DIV>
<A NAME=HEADING442-0></A>
<H1> <A NAME=MARKER-2-1491></A>define dual-interface</H1>
<P><I>Definition macro</I></P>
<H3>Summary</H3>
<P> Creates a new dual COM interface.</P>
<H3>Macro call</H3>
<DL><DD><PRE>define <EM>[</EM> <I>class-adjectives</I> <EM>]</EM> dual-interface <I>interface-name</I>  (<I>superclass</I>)
  <EM>[</EM> client-class <I>vtable-client-class-name</I>
<EM>  [</EM> :: <I>client-superclass-name</I> <EM>] </EM>; <EM>]</EM>
  <EM>{</EM> <I>typelib-clause</I> 
<EM>  |</EM> <I>property</I> 
<EM>  | <I>function</I></EM> <EM>}*</EM>
end <EM>[</EM>dual-interface<EM>]</EM> <EM>[<I>interface-name]</I></EM></PRE></DL>
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>class-adjectives</I><DD> Any Dylan class definition adjective.
<P> </P><DT><I>interface-name</I><DD> name<SUB>bnf</SUB> 
<P> </P><DT><I>vtable-client-class-name</I><DD>
<P> </P><DT><DD> name<SUB>bnf </SUB>
<P> </P><DT><I>typelib-clause</I> <DD>
</DL>
<DL><DD><PRE>  <EM>{ </EM>uuid <I>uuid</I>; 
<EM>  |</EM> name <I>name</I>; 
<EM>  |</EM> documentation <I>documentation</I>;
  <EM>|</EM> help-file <I>help-file</I>; 
<EM>  |</EM> help-context <I>help-context</I>; 
  <EM>|</EM> major-version <I>major-version</I>; 
  <EM>|</EM> minor-version <I>minor-version</I>; 
  <EM>|</EM> locale <I>locale</I>;
  <EM>}</EM></PRE></DL>
<DL>
<P> </P><DT><I>property</I> <DD>
</DL>
<DL><DD><PRE>  <EM>{ [</EM> virtual <EM>]</EM> property <I>property-name</I> :: <I>property-type</I> 
          <EM>{</EM> , <I>option</I> <EM>}*</EM> ;
  <EM>|</EM> constant property <I>property-name</I> :: <I>property-type</I> 
           <EM>[</EM> = <I>property-value</I> <EM>] {</EM> , <I>option</I> <EM>}*</EM> ;
  <EM>}</EM></PRE></DL>
<DL>
<P> </P><DT><I>function</I> <DD>
</DL>
<DL><DD><PRE>function <I>member-name</I> 
  ( <EM>{</EM> <I>argument-name</I> :: <I>argument-type</I>, <EM>}*</EM> )
       =&gt; ( <EM>[</EM> <I>result-name</I> :: <I>result-type</I> <EM>]</EM> )
  <EM>{</EM> , <I>option</I> <EM>}*</EM> ;</PRE></DL>
<DL>
<P> </P><DT><I>option</I> <DD>
</DL>
<DL><DD><PRE>  <EM>{</EM> name: <I>name</I> 
<EM>  |</EM> disp-id: <I>disp-id</I> 
  <EM>|</EM> documentation: <I>documentation</I> 
  <EM>|</EM> help-context:  <I>help-context</I> 
  <EM>}</EM></PRE></DL>
<H3>Library</H3>
<dl><dd><pre>OLE-Automation</pre></dl>
<H3>Module</H3>
<dl><dd><pre>OLE</pre></dl>
<H3>Description</H3>
<P> Used to create a dual interface, with the members being accessible either through a v-table or through <CODE>IDispatch/Invoke</CODE>. This macro combines the functionality of <CODE>define</CODE> <CODE>vtable-interface</CODE> and <CODE>define</CODE> <CODE>dispatch-interface</CODE>. Typically it is used to define a class that just specifies the interface, with implementations of the interface being defined by subclasses.</P>
<P> The <I>superclass</I> list specifies the class to inherit from. It should be either <CODE>&lt;simple-dispatch&gt;</CODE> or another server class defined with <CODE>define</CODE> <CODE>dual-interface</CODE> or <CODE>define</CODE> <CODE>dispatch-interface</CODE>. </P>
<P> If another server class is included, the type information for this class inherits the type information from the superclass.</P>
<P> An instance of <CODE>&lt;dual-type-info&gt;</CODE> (a subclass of <BR><CODE>&lt;vtable-type-info&gt;</CODE>) is created which is an <CODE>ITypeInfo</CODE> interface describing the dual interface.</P>
<P> This value can be fetched by applying the function <BR><CODE>type-information</CODE> to the class or to an instance of the class.</P>
<P> Call function <CODE>dispatch-type-information</CODE> to obtain the instance of <CODE>&lt;disp-type-info&gt;</CODE> instead.</P>
<P> The clauses of the definition have the same meaning as documented for the <CODE>define</CODE> <CODE>vtable-interface</CODE> and <CODE>define</CODE> <CODE>dispatch-interface</CODE> macros. However, compared to <CODE>define</CODE> <CODE>vtable-interface</CODE>, dispatch interfaces impose several restrictions: </P>
<UL>
<LI>The <CODE>vtable-member</CODE> clause cannot be used. (All member functions will implicitly return a status code.)
<LI>No more than one result value can be returned in addition to the implicit status code.
<LI>The data types for properties, parameters, and return values are restricted to those supported by OLE Automation. (Refer to section 4.8 of the <I>OLE, COM, ActiveX and DBMS</I> library reference.)
<P>Compared to <CODE>define</CODE> <CODE>dispatch-interface</CODE>, dual interfaces impose the following restrictions: </P>
<LI>The <CODE>uuid</CODE> clause is required.
<LI>The <CODE>slot</CODE> clause cannot be used; slots should be defined in a separate implementation subclass.
<LI>Properties should be declared as <CODE>virtual</CODE> in an interface class that will use a separate implementation subclass.
<LI>Property types and function parameter and result lists must be explicitly declared instead of defaulting from the function definition. (This implementation limitation is because the types are needed for compile-time generation of v-table functions, not just for the run-time creation of type info data.)
<LI>Do not call <CODE>exit-invoke</CODE> or <CODE>abort</CODE> in the implementation method for a dual interface member function or property because there will be no condition handler when it is invoked through the <CODE>v-table</CODE>. 
</UL>
<H3>Example</H3>
<DL><DD><PRE>define dual-interface &lt;IDual&gt; (&lt;simple-dispatch&gt;)
  client-class &lt;C-IDual&gt;;
  uuid &quot;{DC86922A-16C3-11D2-9A67-006097C90313}&quot;;
  virtual property foo :: &lt;integer&gt;;
  function bar (a :: &lt;integer&gt;) 
    =&gt; (b :: &lt;string&gt;);
end dual-interface &lt;IDual&gt;;</PRE></DL>
<DL><DD><PRE>define COM-interface &lt;my-dual&gt; (&lt;IDual&gt;)
  slot foo :: &lt;integer&gt;;
end COM-interface &lt;my-dual&gt;;</PRE></DL>
<DL><DD><PRE>define method bar (this :: &lt;my-dual&gt;, a :: &lt;integer&gt;)
               =&gt; (result :: &lt;SCODE&gt;, b :: &lt;string&gt;)
  ...
  values($S-OK, ...)
end method bar;</PRE></DL>
<P> The above defines a class <CODE>&lt;IDual&gt;</CODE> which specifies a dual interface, and a subclass <CODE>&lt;my-dual&gt;</CODE> which implements a server for it. It also defines a class <CODE>&lt;C-IDual&gt;</CODE> for v-table client access, and creates type information describing the interface. </P>
<P> </P>
<A NAME=LINK-ole-custintface-lastpage></A><A NAME=LINK-ole-server-firstpage></A><!-- FM pgf ignored -->

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_443.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_441.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_436.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
