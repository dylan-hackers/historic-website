<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_492.htm">
<LINK REL=PREV HREF="inte_515.htm">
<LINK REL=NEXT HREF="inte_517.htm">
<TITLE> &lt;class-factory&gt;</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING516></A>

<DIV>
<P><A HREF="inte_517.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_515.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_492.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6.7.6   Miscellaneous OLE-SERVER module classes and functions </P>

</DIV>
<A NAME=HEADING516-0></A>
<H1> <A NAME=MARKER-2-1749></A><A NAME=MARKER-2-1750></A><A NAME=MARKER-9-1751></A>&lt;class-factory&gt;</H1>
<P><I>Open concrete primary class</I></P>
<H3>Summary</H3>
<P> This class implements the COM <CODE>IClassFactory</CODE> interface. Making an instance of it causes it to be registered with the system automatically, for use by potential clients. </P>
<H3>Superclasses</H3>
<dl><dd><pre>&lt;LPUNKNOWN&gt; </pre></dl>
<H3>Init-keywords</H3>
<DL>
<P> </P><DT><CODE>clsid:</CODE><DD> The COM Class ID that identifies the object the server provides. Required. This ID can be represented either as a string of 32 hexadecimal digits in the following format 
<P>  &quot;{<I>xxxxxxxx</I>-<I>xxxx</I>-<I>xxxx</I>-<I>xxxx</I>-<I>xxxxxxxxxxxx</I>}&quot; </P>
<P>That is, where each <I>x</I> is a hexadecimal digit. For example:</P>
<P>  &quot;{e90f09e0-43db-11d0-8a04-02070119f639}&quot;</P>
<P>Alternatively, the ID can be a <A HREF="inte_558.htm#MARKER-9-1889"><CODE>&lt;REFCLSID&gt;</CODE></A>, as returned from <A HREF="inte_559.htm#MARKER-9-1892"><CODE>make-GUID</CODE></A>.</P>
<P>You can get the ID value by generating a GUID with Functional Developer's <CODE>create-id</CODE> utility. See <A HREF="inte_285.htm#MARKER-9-909">"Creating GUID numbers" on page 129</A>. </P>
<P> </P><DT><CODE>class:</CODE><DD> The Dylan class (usually a user-defined subclass of <A HREF="inte_452.htm#MARKER-9-1562"><CODE>&lt;ole-server-framework&gt;</CODE></A>) that is to be instantiated when the client (controller) requests it. Required.
<P> </P><DT><CODE>args:</CODE><DD> Optional sequence of initialization arguments to be passed to <CODE>make</CODE> when instantiating the object. The default is to pass the same arguments as for the <CODE>&lt;class-factory&gt;</CODE> (<A HREF="inte_452.htm#MARKER-9-1562"><CODE>&lt;ole-server-framework&gt;</CODE></A> accepts and ignores those that are only for the factory, and <CODE>&lt;class-factory&gt;</CODE> ignores any that it does not recognize.) Note that <A HREF="inte_452.htm#MARKER-9-1562"><CODE>&lt;ole-server-framework&gt;</CODE></A> requires <CODE>typeinfo:</CODE> to be supplied.
<P> </P><DT><CODE>server-module-handle:</CODE><DD>
<P>Contains the <A NAME=MARKER-2-1752></A><CODE>&lt;hModule&gt;</CODE> instance of the server DLL when invoked from an in-process server. This argument is not normally specified by the user, but is passed in automatically when the class factory is created from the in-process DLL entry-point. Note that if you do not specify an explicit <CODE>args</CODE> argument, then this argument will be passed into your object along with all the other initialization arguments.</P>
<P> </P><DT><CODE>server-context:</CODE> <DD>
<P>Indicates where the server is running. See the description of <CODE>create-dispatch</CODE> below for a list of possible values. Defaults to <CODE>$CLSCTX-LOCAL-SERVER</CODE>. You can use <CODE>$CLSCTX-INPROC-SERVER</CODE> instead to suppress external registration of the factory.</P>
<P> </P><DT><CODE>connection-flags:</CODE> <DD>
<P>Optional connection flags, controlling whether more than one client is allowed to invoke the same class factory (and hence use the same server process). The value is one of the following OLE constants:</P>
<P><CODE>$REGCLS-SINGLEUSE</CODE> -- Only one connection allowed. This is the default value. </P>
<P><CODE>$REGCLS-MULTIPLEUSE</CODE> -- Multiple connections allowed.</P>
<P><CODE>$REGCLS-MULTI-SEPARATE</CODE> -- Multiple connections allowed, separate control.</P>
<P><A NAME=MARKER-10-1753></A>For further explanation of these constants, see the Microsoft OLE/COM API documentation for the function <CODE>CoClassRegisterClassObject</CODE>.</P>
</DL>
<H3>Library</H3>
<dl><dd><pre>OLE-Server</pre></dl>
<H3>Module</H3>
<dl><dd><pre>OLE-Server</pre></dl>
<H3>Description</H3>
<P> This class implements the COM <CODE>IClassFactory</CODE> interface. Making an instance of it causes it to be registered with the system automatically, for use by potential clients. </P>
<P> A server application does not need to use the instance directly, except that it must call <A HREF="inte_515.htm#MARKER-9-1748"><CODE>revoke-registration</CODE></A> on the instance before terminating.</P>
<P> Any keyword arguments other than those documented above are passed in the <CODE>make</CODE> call when the Dylan class is instantiated. Note that <A HREF="inte_452.htm#MARKER-9-1562"><CODE>&lt;ole-server-framework&gt;</CODE></A> requires you to supply <CODE>typeinfo:</CODE>. </P>
<P> You can subclass <CODE>&lt;class-factory&gt;</CODE> (using <CODE>define</CODE> <CODE>COM-interface</CODE>) if desired for adding functionality (such as overriding the <CODE>IClassFactory/LockServer</CODE> and <CODE>terminate</CODE> methods).</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_517.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_515.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_492.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
