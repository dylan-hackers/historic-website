<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inter_58.htm">
<LINK REL=PREV HREF="inter_67.htm">
<LINK REL=NEXT HREF="inter_69.htm">
<TITLE>1.5.4   Liaison functions</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING68></A>

<DIV>
<P><A HREF="inter_69.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inter_67.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inter_58.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>1.5   Result-set collections</P>

</DIV>
<A NAME=HEADING68-0></A>
<H1>1.5.4   <A NAME=MARKER-2-262></A><A NAME=MARKER-2-263></A><A NAME=MARKER-9-264></A>Liaison functions</H1>
<P>Liaison functions convert records retrieved from a database query to Dylan objects. These functions bridge the conceptual gap between relational databases and Dylan's object-orientation. </P>
<P>To create a Dylan object from a retrieved record, the liaison function must understand the form of the records coming from the database and the mappings of records to Dylan objects. These Dylan objects make up the elements of the result set: the results of the liaison function are added to the result set each time it is called. As your application iterates over a result set, the liaison function provides the objects that the application processes.</P>
<P>If you do not provide a liaison function for a result set, the SQL-ODBC library supplies a <CODE>default-liaison</CODE> function to perform the conversion. If a coercion policy is provided, the <CODE>default-liaison</CODE> function is <CODE>copy-sequence</CODE>. The new sequence is safe in that it is a normal Dylan collection with no relationship to databases, SQL statements, or result sets. If a coercion policy is not provided, the <CODE>default-liaison</CODE> is the identity function. </P>
<P>You can specify the identity function as the liaison function to process the actual record objects. If no type coercion is performed by the functions on the record class, this function will have the lowest overhead, but there are some restrictions: the values retrieved from the record may become invalid when the state of the iteration protocol changes.</P>
<P>The liaison function can, potentially, cause the greatest number of problems for an application using SQL-ODBC since there is no type safety between the liaison function, the record class and the SQL <CODE>SELECT</CODE> statement. You must ensure that the liaison function is in sync with the SQL <CODE>SELECT</CODE> statement since there is no support in SQL-ODBC for this.</P>
<P>Example:</P>
<PRE>
define class &lt;book&gt; (&lt;object&gt;)
  slot title :: &lt;string&gt;, init-keyword: title:;
  slot publisher :: &lt;string&gt;, init-keyword: publisher:;
  slot isbn :: &lt;string&gt;, init-keyword: isbn:;
  slot author :: &lt;string&gt;, init-keyword: author:;
end class;
<P></P>
begin
  let booker =
    method (record :: &lt;record&gt;) =&gt; (book :: &lt;book&gt;)
      let (title, publisher, isbn, last_name, first_name) =
        apply(values, record);

      make(&lt;book&gt;, title: title, publisher: publisher, 
           isbn: isbn, author: concatenate(last_name, &quot;, &quot;,
           first_name));
    end method;
let query = make(&lt;sql-statement&gt;,
                 statement: &quot;select title, publisher, isbn,
                               last_name, first_name
                             from book, author, book_author
                             where book.isbn = book_author.isbn
                               and book_author.author_id = 
                                     author.author_id
                             order by author.last_name,
                                      author.first_name&quot;);
execute(query, liaison: booker
        result-set-policy: 
          make(&lt;forward-only-result-set-policy&gt;));
end;
<P></P>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inter_69.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inter_67.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inter_58.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
