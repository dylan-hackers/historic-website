<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_271.htm">
<LINK REL=PREV HREF="inte_273.htm">
<LINK REL=NEXT HREF="inte_275.htm">
<TITLE>2.2.3   Representing interfaces </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING274></A>

<DIV>
<P><A HREF="inte_275.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_273.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_271.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2.2   Overview of OLE/COM and the Functional Developer API</P>

</DIV>
<A NAME=HEADING274-0></A>
<H1>2.2.3   <A NAME=MARKER-10-876></A>Representing <A NAME=MARKER-2-877></A>interfaces </H1>
<P>COM represents interfaces using a simple table-and-pointer mechanism. When a client connects to an object and requests an interface, it receives a C pointer to the interface. The interface pointer leads to a table of pointers (called a <I>vtable</I>) each of which point to the COM methods of the interface. </P>
<P>Suppose there was an interface <CODE>IPaint</CODE> with the methods <CODE>Draw</CODE> and <CODE>Fill</CODE> in addition to the methods <CODE>QueryInterface</CODE>, <CODE>AddRef</CODE> and <CODE>Release</CODE> that are inherited from <CODE>IUnknown</CODE>. <A HREF="#MARKER-9-878">Figure 2.4</A> shows how a connection to <CODE>IPaint</CODE> would be represented. </P>
<P><IMG ALIGN=TOP SRC=in27ima5.gif></P>
<P>Figure 2.4   <A NAME=MARKER-9-878></A>COM interface representation.</P>
<P>In an <A NAME=MARKER-2-879></A><A NAME=MARKER-2-880></A><A NAME=MARKER-2-881></A><A NAME=MARKER-2-882></A>OLE/COM application built with Functional Developer libraries, you often do not need to represent COM interfaces, classes, or methods explicitly. The libraries instead provide high-level protocols that implement the necessary COM details for you. You may be required to implement certain Dylan methods or extend certain Dylan classes, but usually do not need to represent a COM class, interface, or method directly. This is very convenient, and adequate for most applications. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_275.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_273.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_271.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
