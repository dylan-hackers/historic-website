<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_466.htm">
<LINK REL=PREV HREF="inte_467.htm">
<LINK REL=NEXT HREF="inte_469.htm">
<TITLE> register-ole-server</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING468></A>

<DIV>
<P><A HREF="inte_469.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_467.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_466.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6.7.4   Self-registration for local server applications</P>

</DIV>
<A NAME=HEADING468-0></A>
<H1> <A NAME=MARKER-2-1617></A><A NAME=MARKER-2-1618></A><A NAME=MARKER-9-1619></A>register-ole-server</H1>
<P><I>Function</I></P>
<H3>Summary</H3>
<P> Depending on the command-line arguments passed to the application, this function creates or deletes the Windows 95 and Windows NT system registry entries necessary for the current application to be used as a server for an embeddable OLE object.</P>
<H3>Signature</H3>
<DL><DD><PRE>register-ole-server <I>class-id</I> <I>prog-id</I> <I>title-string</I> 
                    #key <I>full-name</I> <I>short-name</I> <I>app-name</I> 
                         <I>misc-status</I> <I>verbs</I> =&gt; ()
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>class-id</I><DD> The COM Class ID that identifies the object the server provides. Required. 
<P>This ID can be represented either as a string of 32 hexadecimal digits in the following format </P>
<P>  &quot;{<I>xxxxxxxx</I>-<I>xxxx</I>-<I>xxxx</I>-<I>xxxx</I>-<I>xxxxxxxxxxxx</I>}&quot; </P>
<P>That is, where each <I>x</I> is a hexadecimal digit. For example:</P>
<P>  &quot;{e90f09e0-43db-11d0-8a04-02070119f639}&quot;</P>
<P>Alternatively, the ID can be an instance of <A HREF="inte_558.htm#MARKER-9-1889"><CODE>&lt;REFCLSID&gt;</CODE></A>, as returned from <A HREF="inte_559.htm#MARKER-9-1892"><CODE>make-GUID</CODE></A>.</P>
<P> </P><DT><I>prog-id</I><DD> An instance of <CODE>&lt;string&gt;</CODE>. Required.
<P> </P><DT><I>title-string</I><DD> An instance of <CODE>&lt;string&gt;</CODE>. Required.
<P> </P><DT><I>full-name</I><DD> An instance of <CODE>&lt;string&gt;</CODE>. Default value: the value of <I>short-name</I>.
<P> </P><DT><I>short-name</I><DD> An instance of <CODE>&lt;string&gt;</CODE>. Default value: the value of <I>app-name</I>.
<P> </P><DT><I>app-name</I><DD> An instance of <CODE>&lt;string&gt;</CODE>. Default value: the value of <I>title-string</I>.
<P> </P><DT><I>misc-status</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>.
<P> </P><DT><I>verbs</I><DD> An instance of <CODE>&lt;vector&gt;</CODE>. Default value: see Description.
</DL>
<H3>Values</H3>
<P> None.</P>
<H3>Library</H3>
<dl><dd><pre>OLE-Server</pre></dl>
<H3>Module</H3>
<dl><dd><pre>OLE-Server</pre></dl>
<H3>Description</H3>
<P> Creates the Windows 95 and Windows NT system registry entries necessary for the current application to be used as a server for an embeddable OLE object. But if the application was invoked with <CODE>/UnregServer</CODE> or <CODE>-UnregServer</CODE>, this function will try to delete any registry entries that belong to the application. </P>
<P> The <I>class-id</I> argument must have the same value as passed with the <CODE>clsid:</CODE> init-keyword to <CODE>make</CODE> on <A HREF="inte_516.htm#MARKER-9-1751"><CODE>&lt;class-factory&gt;</CODE></A>. </P>
<P> The <I>prog-id</I> argument is a unique internal string name for the class. It must begin with a letter. It cannot contain any spaces or punctuation except a period (.) character, and it must not be more than 39 characters long. In order to ensure uniqueness, the recommended format is:</P>
<dl><dd><pre>  <I>vendor-name</I>.<I>product-name</I>.<I>version-number</I> </pre></dl>
<P> For example:</P>
<dl><dd><pre>  AcmeWidgets.FrobMaster.2</pre></dl>
<P> The <I>title-string</I> argument appears in a container's Insert Object dialog box to identify the kind of object this server application provides. </P>
<P> The <I>full-name</I> keyword argument is the full type name of the class. Its default value is the value of the <I>short-name</I> keyword. </P>
<P> The <I>short-name</I> keyword argument is used for popup menus and the Links dialog box. It must be a string of not more than 15 characters in length. Its default value is the value of the <I>app-name</I> keyword. </P>
<P> The <I>app-name</I> keyword argument is the name of the application servicing the class, and is used in the Result text in dialog boxes. Its default value is the value of the required <I>title-string</I> argument. </P>
<P> The <I>misc-status</I> keyword argument specifies the value to be returned by <CODE>IOleObject::GetMiscStatus</CODE>. The value is formed by using <CODE>logior</CODE> to combine <CODE>$OLEMISC-</CODE>... constants. Default value: 0.</P>
<P> The <I>verbs</I> keyword argument specifies the verbs and menu entries that the object supports. The value is a vector, with each element representing the attributes of one verb. Default value: </P>
<DL><DD><PRE>  vector(vector(0, &quot;&amp;Edit&quot;,  // in-place activation
                $MF-ENABLED, 
                $OLEVERBATTRIB-ONCONTAINERMENU),
         vector(1, &quot;&amp;Open&quot;,  // out-of-place activation
                $MF-ENABLED, 
                $OLEVERBATTRIB-ONCONTAINERMENU))</PRE></DL>
<P> This value produces the following registry entries:</P>
<dl><dd><pre>  HKEY_CLASSES_ROOT\CLSID\{...}\Verb\0 = &amp;Edit,0,2</pre></dl>
<dl><dd><pre>  HKEY_CLASSES_ROOT\CLSID\{...}\Verb\1 = &amp;Open,0,2</pre></dl>
<P> Alternatively, you can register a server with: </P>
<DL><DD><PRE>  // check for &quot;/RegServer&quot; or &quot;/UnregServer&quot;
  if (~OLE-util-maybe-just-register(<I>class-id</I>, 
                                    <I>prog-id</I>, 
                                    <I>title-string</I>, 
                                   short-name: <I>name</I>))
  // now run the application
  ...
  end if;</PRE></DL>
<P> Here, the <CODE>OLE-util-maybe-just-register</CODE> function has the same arguments as <CODE>register-ole-server</CODE>. It either unregisters the server application and returns <CODE>#t</CODE>, or does nothing and returns <CODE>#f</CODE>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_469.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_467.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_466.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
