<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_284.htm">
<LINK REL=PREV HREF="inte_285.htm">
<LINK REL=NEXT HREF="inte_287.htm">
<TITLE>2.5.2   Making a GUID instance </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING286></A>

<DIV>
<P><A HREF="inte_287.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_285.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_284.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2.5   Making GUIDs</P>

</DIV>
<A NAME=HEADING286-0></A>
<H1>2.5.2   <A NAME=MARKER-2-910></A><A NAME=MARKER-2-911></A><A NAME=MARKER-2-912></A>Making a GUID instance </H1>
<P>After generating all the GUID numbers you need for the different parts of your application, the next stage is to supply those GUIDs in the proper format when you instantiate the classes, interfaces, and so on that the GUIDs will identify. </P>
<P>You need to supply GUIDs when making instances of classes such as <A HREF="inte_322.htm#MARKER-9-1014"><CODE>&lt;embeddable-frame&gt;</CODE></A> (from the DUIM-OLE-Server and DUIM-OLE-Control libraries), and<A HREF="inte_393.htm#MARKER-9-1303"><CODE>&lt;class-factory&gt;</CODE></A> (from the OLE-Automation and OLE-Server libraries). </P>
<P>The Functional Developer OLE/COM API offers two ways of doing this. The simplest, but least efficient, method is to pass the GUID as a string, in the format used in the output of the <CODE>create-id</CODE> utility (see <A HREF="inte_285.htm#MARKER-9-909">"Creating GUID numbers"</A>, above). That format is:</P>
<PRE>
&quot;{<I>xxxxxxxx</I>-<I>xxxx</I>-<I>xxxx</I>-<I>xxxx</I>-<I>xxxxxxxxxxxx</I>}&quot;
<P></P>
</PRE>
<P>Where each <I>x</I> is a hexadecimal digit. For example:</P>
<PRE>
&quot;{C16C1BFE-41DA-11D1-9A58-006097C90313}&quot;
<P></P>
</PRE>
<P>You could paste these strings directly into your code, to server as init arguments for the various classes that require GUIDs.</P>
<P>The second, and more efficient, way to supply a GUID is to pass the output from <CODE>create-id</CODE> as a series of arguments to the function <CODE>make-GUID</CODE>, which creates the C data that the native Windows OLE/COM libraries need to represent the GUID, and returns a handle on that data as an instance of the class <CODE>&lt;REFGUID&gt;</CODE>. (The class <CODE>&lt;REFGUID&gt;</CODE> also turns up in libraries under the aliases <CODE>&lt;REFCLSID&gt;</CODE> and <CODE>&lt;REFIID&gt;</CODE>.)</P>
<P>The DUIM-OLE-Server, DUIM-OLE-Control, OLE-Automation, OLE-Server and OLE-Control-Framework libraries all export <CODE>make-GUID</CODE>.</P>
<P>The following is a brief description of <CODE>make-GUID</CODE>. See page <A HREF="inte_559.htm#MARKER-9-1892">351</A> for a full reference description.</P>
<STRONG>make-GUID</STRONG>
<P><I>Function</I></P>
<PRE>
make-GUID <I>l</I> <I>w1</I> <I>w2</I> <I>b1</I> <I>b2</I> <I>b3</I> <I>b4</I> <I>b5</I> <I>b6</I> <I>b7</I> <I>b8</I> =&gt; <I>ID</I> 
<P></P>
</PRE>
<DL>
<DT><DD>Returns an object representing a a globally unique identifier (GUID), created from the arguments. The ID value is an instance of the class <CODE>&lt;REFGUID&gt;</CODE>. This function creates the C structure necessary to represent a GUID in the native Windows OLE/COM libraries. 
<DT><DD>The arguments to <CODE>make-GUID</CODE> are taken from the output of the GUID-generation utility <CODE>create-id</CODE>. Given the following value from <CODE>create-id</CODE>:
</DL>
<PRE>
  &quot;{113f2c00-f87b-11cf-89fd-02070119f639}&quot;
<P></P>
</PRE>
<DL>
<DT><DD>you need to split the value into parts as follows, and for each add the prefix #x. For example:
</DL>
<PRE>
  define constant $my-class-ID =
    make-GUID(#x113f2c00, #xf87b, #x11cf, #x89, #xfd, #x02, #x07,
              #x01, #x19, #xf6, #x39);
<P></P>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_287.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_285.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_284.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
