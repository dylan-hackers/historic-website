<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_271.htm">
<LINK REL=PREV HREF="inte_274.htm">
<LINK REL=NEXT HREF="inte_276.htm">
<TITLE>2.2.4   Dispatch interfaces </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING275></A>

<DIV>
<P><A HREF="inte_276.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_274.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_271.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2.2   Overview of OLE/COM and the Functional Developer API</P>

</DIV>
<A NAME=HEADING275-0></A>
<H1>2.2.4   <A NAME=MARKER-2-883></A>Dispatch interfaces </H1>
<P>The interface mechanism commonly used in OLE Automation deserves particular mention. As we have seen, server components can expose their services to clients through named interfaces: a simple painting server might offer a drawing interface called <CODE>IPaint</CODE>, while a word processor might offer access to its thesaurus through an interface called <CODE>IThesaurus</CODE>, and access to its indexing tools through an interface called <CODE>IIndex</CODE>. </P>
<P>But in Automation it is common to use a different means of exposing services to clients. Rather than defining named interfaces, Automation servers implement a <I>dispatch interface</I> or <I>dispinterface</I> protocol, where clients access COM methods through a dispatching mechanism instead of on a call-by-name basis. </P>
<P>The dispinterface protocol is defined by the standard COM interface <CODE>IDispatch</CODE>. This interface defines four COM methods: <CODE>Invoke</CODE>, <CODE>GetTypeInfo</CODE>, <CODE>GetIDsOfNames</CODE>, and <CODE>GetTypeInfoCount</CODE>. It also inherits from <CODE>IUnknown</CODE>, as all COM interfaces do, and so must provide implementations for the <CODE>QueryInterface</CODE>, <CODE>AddRef</CODE> and <CODE>Release</CODE> methods.</P>
<P>Every other COM method that a server defines for the dispinterface has its own identifier, called a <I>dispatch identifier</I> or <I>DISPID</I>. Rather than call these methods using a name, clients call <CODE>Invoke</CODE> and pass it the DISPID of the method they want to invoke. </P>
<P>As well as COM methods, dispinterfaces can also have <I>properties</I>. Properties are values that can be retrieved or set, just like slots in Dylan classes. Like the methods in a dispinterface, properties are accessed using <CODE>IDispatch</CODE>'s standard method <CODE>Invoke</CODE>.</P>
<P><A NAME=MARKER-10-884></A>Functional Developer's high-level interface to Automation is the OLE-Automation library. This library exports the Dylan class <CODE>&lt;simple-dispatch&gt;</CODE>, which represents the COM interface <CODE>IDispatch</CODE>. </P>
<P>You can define dispinterfaces of your own by defining a subclass of <CODE>&lt;simple-dispatch&gt;</CODE>. You can then define dispatch methods for your dispinterface by writing Dylan methods on your subclass of <CODE>&lt;simple-dispatch&gt;</CODE>. Because <CODE>&lt;simple-dispatch&gt;</CODE> is a subclass of <CODE>&lt;IUnknown&gt;</CODE>, it inherits the implementations of the three <CODE>IUnknown</CODE> methods. </P>
<P>You can define properties for your dispinterface simply by adding slots to your subclass definition. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_276.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_274.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_271.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
