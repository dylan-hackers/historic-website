<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_388.htm">
<LINK REL=PREV HREF="inte_390.htm">
<LINK REL=NEXT HREF="inte_392.htm">
<TITLE> &lt;ole-array&gt;</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING391></A>

<DIV>
<P><A HREF="inte_392.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_390.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_388.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.12   The OLE-AUTOMATION module </P>

</DIV>
<A NAME=HEADING391-0></A>
<H1> <A NAME=MARKER-2-1289></A><A NAME=MARKER-2-1290></A><A NAME=MARKER-9-1291></A><A NAME=MARKER-2-1292></A><A NAME=MARKER-2-1293></A><A NAME=MARKER-9-1294></A>&lt;ole-array&gt;</H1>
<P><I>Sealed concrete primary class</I></P>
<H3>Summary</H3>
<P> This class allows you to use the Dylan array protocol on data that is actually allocated as a C SAFEARRAY structure.</P>
<H3>Superclasses</H3>
<dl><dd><pre>&lt;array&gt;  &lt;LPSAFEARRAY&gt; </pre></dl>
<H3>Description</H3>
<P> This class allows you to use the Dylan array protocol on data that is actually allocated as a C SAFEARRAY structure.</P>
<P> Arrays received by Dylan from an OLE Automation call will appear as an <CODE>&lt;ole-vector&gt;</CODE> if they are one-dimensional, and otherwise as instances of <CODE>&lt;ole-array&gt;</CODE>.</P>
<P> <B>Note:</B> The Win32 OLE/COM libraries allocate memory on the C heap for these arrays. This means that the memory is not automatically reclaimed by the Functional Developer garbage collector. You must call the function <CODE>destroy</CODE> on an <CODE>&lt;ole-array&gt;</CODE> when you are finished with it.</P>
<P> <B>Note:</B> The dimensions in a SAFEARRAY specify both a lower and upper bound for the index, but since Dylan does not support alternate lower bounds, index 0 always corresponds to the first element when viewed as a Dylan array.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_392.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_390.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_388.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
