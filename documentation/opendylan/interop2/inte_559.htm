<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="intero_1.htm">
<LINK REL=UP HREF="inte_556.htm">
<LINK REL=PREV HREF="inte_558.htm">
<LINK REL=NEXT HREF="inte_560.htm">
<TITLE> make-GUID </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING559></A>

<DIV>
<P><A HREF="inte_560.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_558.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_556.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>8.3   GUID utilities</P>

</DIV>
<A NAME=HEADING559-0></A>
<H1> <A NAME=MARKER-2-1890></A><A NAME=MARKER-2-1891></A><A NAME=MARKER-9-1892></A>make-GUID </H1>
<P><I>Function</I></P>
<H3>Summary</H3>
<P> Creates an object representing a globally unique identifier (GUID). </P>
<H3>Signature</H3>
<dl><dd><pre>make-GUID <I>l</I> <I>w1</I> <I>w2</I> <I>b1</I> <I>b2</I> <I>b3</I> <I>b4</I> <I>b5</I> <I>b6</I> <I>b7</I> <I>b8</I> =&gt; <I>ID</I> </pre></dl>
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>l</I><DD> An instance of <CODE>&lt;machine-word&gt;</CODE> or <CODE>&lt;double-integer&gt;</CODE>. (32 bits.)
<P> </P><DT><I>w1</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (16 bits.)
<P> </P><DT><I>w2</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (16 bits.)
<P> </P><DT><I>b1</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (8 bits.)
<P> </P><DT><I>b2</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (8 bits.)
<P> </P><DT><I>b3</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (8 bits.)
<P> </P><DT><I>b4</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (8 bits.)
<P> </P><DT><I>b5</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (8 bits.)
<P> </P><DT><I>b6</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (8 bits.)
<P> </P><DT><I>b7</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (8 bits.)
<P> </P><DT><I>b8</I><DD> An instance of <CODE>&lt;integer&gt;</CODE>. (8 bits.)
</DL>
<H3>Values</H3>
<DL>
<P> </P><DT><I>ID</I><DD> An instance of <A HREF="inte_557.htm#MARKER-9-1886"><CODE>&lt;REFGUID&gt;</CODE></A>.
</DL>
<H3>Library</H3>
<dl><dd><pre>COM</pre></dl>
<H3>Module</H3>
<dl><dd><pre>COM</pre></dl>
<H3>Description</H3>
<P> Creates an object representing a globally unique identifier (GUID) from the arguments. </P>
<P> This function creates and initializes a C structure and returns a Dylan object representing it. The structure is in the form that the Microsoft COM libraries expect to see when passing GUIDs around as arguments or return values. </P>
<P> This function does not create the GUID value itself. You create the GUID's value with a separate utility, <CODE>create-id</CODE>. (See below.)</P>
<P> All argument values are hexadecimal literals. The first argument is a 32-bit value, the second and third are 16-bit values, and the remaining eight are 8-bit (single byte) values.</P>
<P> You will need this function whenever you need to represent GUID values. For instance, OLE server applications and controls must be registered in the Windows Registry with a unique (and fixed) COM Class ID, so that clients can invoke them. Class IDs are GUIDs. To give your application its Class ID, you must generate a GUID for it. Other items, such as Automation dispinterfaces, also require GUIDs. </P>
<P> This function returns the value <I>ID</I>, which is an instance of the class <A HREF="inte_557.htm#MARKER-9-1886"><CODE>&lt;REFGUID&gt;</CODE></A> (which has the alias <A HREF="inte_558.htm#MARKER-9-1889"><CODE>&lt;REFCLSID&gt;</CODE></A>). </P>
<P> The <CODE>make-GUID</CODE> function creates the C structure necessary to represent a GUID. However, it does <I>not</I> create the unique hexadecimal values that constitute the GUID. You must do that with a once-only invocation of a special utility program provided with Functional Developer called <CODE>create-id</CODE>. You can find the <CODE>create-id</CODE> utility in your Functional Developer installation's Bin folder.</P>
<P> To create a GUID value, run the <CODE>create-id</CODE> utility at an MS-DOS prompt. The utility takes a single integer argument, which is the number of GUIDs to generate. (The default is one GUID.) </P>
<P> The utility writes the GUIDs it generates to the standard output in the form of string literals that can be pasted into Dylan source code. For example, given the following value from <CODE>create-id</CODE>:</P>
<DL><DD><PRE>  MS-DOS&gt; create-id 
  &quot;{113f2c00-f87b-11cf-89fd-02070119f639}&quot;</PRE></DL>
<P> you need to split the value into parts as follows, adding the prefix #x to each. Then you call <CODE>make-GUID</CODE> on those values:</P>
<DL><DD><PRE>  define constant $my-class-ID =
    make-GUID(#x113f2c00, #xf87b, #x11cf, #x89, #xfd, 
              #x02, #x07, #x01, #x19, #xf6, #x39);</PRE></DL>
<P> See <A HREF="inte_276.htm#MARKER-9-889">"GUIDs: Globally unique identifiers" on page 123</A> for more on GUIDs and when to use <CODE>make-GUID</CODE>. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>OLE, COM, ActiveX and DBMS Reference - 31 MAR 2000</ADDRESS>
<P><A HREF="inte_560.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="inte_558.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="inte_556.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="intero_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="intero_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="inte_579.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
