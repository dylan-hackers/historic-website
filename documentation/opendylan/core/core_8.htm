<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="core_1.htm">
<LINK REL=UP HREF="core_7.htm">
<LINK REL=PREV HREF="core_7.htm">
<LINK REL=NEXT HREF="core_9.htm">
<TITLE>1.3.1   DEFINE FUNCTION </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING8></A>

<DIV>
<P><A HREF="core_9.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_7.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_7.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>1.3   The core of the common extensions </P>

</DIV>
<A NAME=HEADING8-0></A>
<H1>1.3.1   <A NAME=MARKER-2-114></A><A NAME=MARKER-2-115></A><A NAME=MARKER-9-116></A>DEFINE FUNCTION </H1>
<P>The <CODE>define</CODE> <CODE>function</CODE> definition macro provides a convenient way to define functions that have no generic properties and hence are not suitable for definition with <CODE>define</CODE> <CODE>generic</CODE> or <CODE>define</CODE> <CODE>method</CODE>. This extension has been accepted as part of the language since the DRM was published. </P>
<P>The <CODE>define</CODE> <CODE>function</CODE> macro provides a way of defining a function that says clearly to other programmers that the function is not part of any generic operation; furthermore, the function will not be extended as a generic function, and calling it need not involve any generic dispatch. Without this macro, programmers who wanted to do so would have to turn to <CODE>define</CODE> <CODE>constant</CODE>. With <CODE>define</CODE> <CODE>function</CODE>, programmer intent is more explicit and it relays more information to future maintainers of a piece of code.</P>
<P>The language definition of <CODE>define</CODE> <CODE>function</CODE> explicitly <I>does not</I> specify what it expands into, so that Dylan implementations have latitude to support this definer in the best way suited to the implementation.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Common Dylan and Functional Extensions - 31 Mar 00</ADDRESS>
<P><A HREF="core_9.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_7.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_7.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
