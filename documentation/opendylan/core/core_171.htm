<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="core_1.htm">
<LINK REL=UP HREF="core_168.htm">
<LINK REL=PREV HREF="core_170.htm">
<LINK REL=NEXT HREF="core_172.htm">
<TITLE> wait-for</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING171></A>

<DIV>
<P><A HREF="core_172.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_170.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_168.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.6.8   Notifications</P>

</DIV>
<A NAME=HEADING171-0></A>
<H1> <A NAME=MARKER-2-837></A><A NAME=MARKER-2-838></A><A NAME=MARKER-9-839></A>wait-for</H1>
<P><I>Sealed method</I></P>
<H3>Summary</H3>
<P> Wait for another thread to release a notification.</P>
<H3>Signature</H3>
<dl><dd><pre>wait-for <I>notification</I> #key <I>timeout</I> =&gt; <I>success</I> </pre></dl>
<H3>Arguments</H3>
<DL>
<P> </P><DT><I>notification</I><DD> An instance of <A HREF="core_169.htm#MARKER-9-833"><CODE>&lt;notification&gt;</CODE>,  page 105</A>.
<P> </P><DT><I>timeout</I><DD> Time-out interval. If the value is <CODE>#f </CODE>(the default), the time-out interval never elapses. Otherwise the value should be a <CODE>&lt;real&gt;</CODE>, corresponding to the desired interval in seconds.
</DL>
<H3>Values</H3>
<DL>
<P> </P><DT><I>success</I><DD> An instance of <CODE>&lt;boolean&gt;</CODE>.
</DL>
<H3>Library</H3>
<dl><dd><pre>threads</pre></dl>
<H3>Module</H3>
<dl><dd><pre>threads</pre></dl>
<H3>Description</H3>
<P> Wait for another thread to release <I>notification</I>. The lock associated with the notification must be owned. Atomically, the lock is released and the current thread starts blocking, waiting for another thread to release the notification. The current thread reclaims the lock once it has received the notification.</P>
<P> Note that the state should be tested again once <CODE>wait-for</CODE> has returned, because there may have been a delay between the <A HREF="core_172.htm#MARKER-9-842"><CODE>release</CODE>,  page 109</A> of the notification and the claiming of the lock, and the state may have been changed during that time. If a timeout is supplied, then this is used for waiting for the release of the notification only. The <CODE>wait-for</CODE> function always waits for the lock with no timeout, and it is guaranteed that the lock will be owned on return. The <CODE>wait-for</CODE> function returns <CODE>#f</CODE> if the notification wait times out.</P>
<H3>Exceptions</H3>
<P> Implementations of this <CODE>wait-for</CODE> method are permitted to signal a condition of the following class, which is a subclass of <CODE>&lt;error&gt;</CODE>:</P>
<DL>
<P> </P><DT><CODE>&lt;not-owned-error&gt;</CODE><DD>
<P>Implementations can signal this error if the application attempts to wait for a notification when the associated lock is not owned by the current thread.</P>
</DL>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Common Dylan and Functional Extensions - 31 Mar 00</ADDRESS>
<P><A HREF="core_172.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_170.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_168.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
