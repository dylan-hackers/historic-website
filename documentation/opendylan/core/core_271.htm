<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="core_1.htm">
<LINK REL=PREV HREF="core_270.htm">
<TITLE>Index</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING271></A>

<DIV>
<P><IMG ALIGN=BOTTOM SRC=nextg.gif ALT=Next BORDER=0> <A HREF="core_270.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A></P>
<P>Common Dylan and Functional Extensions</P>

</DIV>
<A NAME=HEADING271-0></A>
<H1>Index</H1>
<HR>
<A NAME=LINK-coreIX-lastpage></A><A NAME=LINK-coreIX-lastpage></A>
</DIV>

<DIV>

<DIV>
<H2>%</H2>
<PRE>
  <A HREF="core_231.htm#MARKER-2-1169">%* function</A>
  <A HREF="core_231.htm#MARKER-2-1167">%+ function</A>
  <A HREF="core_231.htm#MARKER-2-1168">%- function</A>
  <A HREF="core_231.htm#MARKER-2-1181">%abs function</A>
  <A HREF="core_231.htm#MARKER-2-1173">%ceiling/ function</A>
  <A HREF="core_231.htm#MARKER-2-1166">%count-high-zeros function</A>
  <A HREF="core_231.htm#MARKER-2-1165">%count-low-zeros function</A>
  <A HREF="core_231.htm#MARKER-2-1179">%divide function</A>
  <A HREF="core_231.htm#MARKER-2-1171">%floor/ function</A>
  <A HREF="core_231.htm#MARKER-2-1162">%logand function</A>
  <A HREF="core_231.htm#MARKER-2-1164">%logbit? function</A>
  <A HREF="core_231.htm#MARKER-2-1160">%logior function</A>
  <A HREF="core_231.htm#MARKER-2-1163">%lognot function</A>
  <A HREF="core_231.htm#MARKER-2-1161">%logxor function</A>
  <A HREF="core_231.htm#MARKER-2-1180">%negative function</A>
  <A HREF="core_231.htm#MARKER-2-1175">%round/ function</A>
  <A HREF="core_231.htm#MARKER-2-1182">%shift-left function</A>
  <A HREF="core_231.htm#MARKER-2-1183">%shift-right function</A>
  <A HREF="core_231.htm#MARKER-2-1177">%truncate/ function</A>
</PRE>
<H2>*</H2>
<PRE>
  <A HREF="core_204.htm#MARKER-2-990">* generic function</A>
  * method <A HREF="core_204.htm#MARKER-2-996">[1]</A> <A HREF="core_204.htm#MARKER-2-994">[2]</A>
  <A HREF="core_204.htm#MARKER-2-992">* sealed domain</A>
</PRE>
<H2>+</H2>
<PRE>
  <A HREF="core_204.htm#MARKER-2-974">+ generic function</A>
  <A HREF="core_204.htm#MARKER-2-982">- generic function</A>
  + method <A HREF="core_204.htm#MARKER-2-980">[1]</A> <A HREF="core_204.htm#MARKER-2-978">[2]</A>
  - method <A HREF="core_204.htm#MARKER-2-988">[1]</A> <A HREF="core_204.htm#MARKER-2-986">[2]</A>
  <A HREF="core_204.htm#MARKER-2-976">+ sealed domain</A>
  <A HREF="core_204.htm#MARKER-2-984">- sealed domain</A>
</PRE>
<H2>/</H2>
<PRE>
  <A HREF="core_204.htm#MARKER-2-998">/ generic function</A>
  <A HREF="core_204.htm#MARKER-2-1002">/ method</A>
  <A HREF="core_204.htm#MARKER-2-1000">/ sealed domain</A>
</PRE>
<H2><</H2>
<PRE>
  <A HREF="core_200.htm#MARKER-2-932">&lt; generic function</A>
  &lt; method <A HREF="core_200.htm#MARKER-2-934">[1]</A> <A HREF="core_227.htm#MARKER-2-1147">[2]</A> <A HREF="core_227.htm#MARKER-2-1146">[3]</A> <A HREF="core_227.htm#MARKER-2-1145">[4]</A>
  <A HREF="core_200.htm#MARKER-2-930">&lt; sealed domain</A>
</PRE>
<H2>=</H2>
<PRE>
  <A HREF="core_198.htm#MARKER-2-924">= generic function</A>
  = method <A HREF="core_198.htm#MARKER-2-926">[1]</A> <A HREF="core_227.htm#MARKER-2-1144">[2]</A> <A HREF="core_227.htm#MARKER-2-1143">[3]</A> <A HREF="core_227.htm#MARKER-2-1142">[4]</A>
  <A HREF="core_198.htm#MARKER-2-922">= sealed domain</A>
</PRE>
<H2>A</H2>
<PRE>
  <A HREF="core_231.htm#MARKER-2-1181">%abs function</A>
  <A HREF="core_204.htm#MARKER-2-1040">abs generic function</A>
  abs method <A HREF="core_204.htm#MARKER-2-1046">[1]</A> <A HREF="core_204.htm#MARKER-2-1044">[2]</A>
  <A HREF="core_204.htm#MARKER-2-1042">abs sealed domain</A>
  <A HREF="core_240.htm#MARKER-2-1229">acos method</A>
  <A HREF="core_241.htm#MARKER-2-1233">acosh method</A>
  adjectives
    <A HREF="core_12.htm#MARKER-2-135">inlining for constants</A>
    <A HREF="core_12.htm#MARKER-2-132">inlining for functions</A>
    <A HREF="core_12.htm#MARKER-2-138">inlining for methods</A>
    <A HREF="core_12.htm#MARKER-2-129">inlining for slots</A>
  <A HREF="core_29.htm#MARKER-2-340">after finalization</A>
  applications
    <A HREF="core_30.htm#MARKER-2-342">finalization on exiting</A>
    <A HREF="core_40.htm#MARKER-2-376">using finalization in</A>
    <A HREF="core_42.htm#MARKER-2-387">when to drain finalization queue</A>
  arithmetic
    <A HREF="core_210.htm#MARKER-2-1080">classes</A>
    <A HREF="core_205.htm#MARKER-2-1064">collections</A>
    <A HREF="core_192.htm#MARKER-2-909">extensions to Dylan</A>
    <A HREF="core_191.htm#MARKER-2-908">libraries, introduction to</A>
    operations <A HREF="core_204.htm#MARKER-2-969">[1]</A> <A HREF="core_212.htm#MARKER-2-1086">[2]</A> <A HREF="core_224.htm#MARKER-2-1116">[3]</A>
  as method <A HREF="core_227.htm#MARKER-2-1150">[1]</A> <A HREF="core_227.htm#MARKER-2-1149">[2]</A> <A HREF="core_227.htm#MARKER-2-1148">[3]</A>
  <A HREF="core_230.htm#MARKER-2-1159">as-unsigned function</A>
  <A HREF="core_204.htm#MARKER-2-1059">ash function</A>
  <A HREF="core_242.htm#MARKER-2-1237">asin method</A>
  <A HREF="core_243.htm#MARKER-2-1241">asinh method</A>
  <A HREF="core_44.htm#MARKER-2-393">assert statement macro</A>
  <A HREF="core_170.htm#MARKER-2-835">associated-lock function</A>
  <A HREF="core_244.htm#MARKER-2-1245">atan method</A>
  <A HREF="core_245.htm#MARKER-2-1249">atan2 method</A>
  <A HREF="core_246.htm#MARKER-2-1253">atanh method</A>
  <A HREF="core_187.htm#MARKER-2-879">atomic-decrement! function</A>
  <A HREF="core_186.htm#MARKER-2-876">atomic-increment! function</A>
  <A HREF="core_115.htm#MARKER-2-694">atomicity</A>
  <A HREF="core_89.htm#MARKER-2-580">automatic-finalization-enabled? function</A>
  <A HREF="core_90.htm#MARKER-2-583">automatic-finalization-enabled?-setter function</A>
  <A HREF="core_41.htm#MARKER-2-379">automatically draining the finalization queue</A>
</PRE>
<H2>B</H2>
<PRE>
  basic features
    <A HREF="core_97.htm#MARKER-2-634">Table-extensions library</A>
    Threads library <A HREF="core_126.htm#MARKER-2-724">[1]</A> <A HREF="core_137.htm#MARKER-2-752">[2]</A>
  <A HREF="core_219.htm#MARKER-2-1103">Big-integers library</A>
  binding
    dynamic <A HREF="core_121.htm#MARKER-2-707">[1]</A> <A HREF="core_178.htm#MARKER-2-855">[2]</A>
  <A HREF="core_45.htm#MARKER-2-395">&lt;byte-character&gt; class</A>
</PRE>
<H2>C</H2>
<PRE>
  <A HREF="core_108.htm#MARKER-2-662">case-insensitive-equal function</A>
  <A HREF="core_107.htm#MARKER-2-659">case-insensitive-string-hash function</A>
  <A HREF="core_204.htm#MARKER-2-1014">ceiling function</A>
  <A HREF="core_231.htm#MARKER-2-1173">%ceiling/ function</A>
  <A HREF="core_204.htm#MARKER-2-1022">ceiling/ function</A>
  class hierarchy
    <A HREF="core_125.htm#MARKER-2-723">threads</A>
  <A HREF="core_36.htm#MARKER-2-365">class-based finalization</A>
  classes
    <A HREF="core_45.htm#MARKER-2-394">&lt;byte-character&gt;</A>
    <A HREF="core_150.htm#MARKER-2-786">&lt;exclusive-lock&gt;</A>
    <A HREF="core_58.htm#MARKER-2-445">&lt;format-string-condition&gt;</A>
    <A HREF="core_143.htm#MARKER-2-768">&lt;lock&gt;</A>
    &lt;machine-word&gt; <A HREF="core_226.htm#MARKER-2-1134">[1]</A> <A HREF="core_229.htm#MARKER-2-1152">[2]</A>
    <A HREF="core_169.htm#MARKER-2-831">&lt;notification&gt;</A>
    <A HREF="core_86.htm#MARKER-2-566">&lt;random&gt;</A>
    <A HREF="core_164.htm#MARKER-2-820">&lt;read-write-lock&gt;</A>
    <A HREF="core_154.htm#MARKER-2-796">&lt;recursive-lock&gt;</A>
    <A HREF="core_146.htm#MARKER-2-775">&lt;semaphore&gt;</A>
    <A HREF="core_68.htm#MARKER-2-488">&lt;simple-condition&gt;</A>
    <A HREF="core_159.htm#MARKER-2-808">&lt;simple-lock&gt;</A>
    <A HREF="core_69.htm#MARKER-2-495">&lt;stretchy-sequence&gt;</A>
    &lt;string-table&gt; <A HREF="core_70.htm#MARKER-2-498">[1]</A> <A HREF="core_101.htm#MARKER-2-645">[2]</A>
    <A HREF="core_138.htm#MARKER-2-755">&lt;synchronization&gt;</A>
    <A HREF="core_131.htm#MARKER-2-736">&lt;thread&gt;</A>
    <A HREF="core_210.htm#MARKER-2-1081">arithmetic</A>
  client libraries
    <A HREF="core_122.htm#MARKER-2-711">thread safety in</A>
  <A HREF="core_103.htm#MARKER-2-651">collection-hash</A>
  collections
    <A HREF="core_205.htm#MARKER-2-1065">arithmetic</A>
  comparisons
    equality <A HREF="core_197.htm#MARKER-2-920">[1]</A> <A HREF="core_221.htm#MARKER-2-1111">[2]</A>
    magnitude <A HREF="core_199.htm#MARKER-2-928">[1]</A> <A HREF="core_222.htm#MARKER-2-1113">[2]</A>
  <A HREF="core_46.htm#MARKER-2-397">concatenate! generic function</A>
  <A HREF="core_47.htm#MARKER-2-400">condition-to-string generic function</A>
  conditional update <A HREF="core_118.htm#MARKER-2-699">[1]</A> <A HREF="core_184.htm#MARKER-2-870">[2]</A>
  conditional-update! statement macro <A HREF="core_185.htm#MARKER-2-873">[1]</A> <A HREF="core_189.htm#MARKER-2-887">[2]</A>
    <A HREF="core_188.htm#MARKER-2-882">extended form of</A>
  constants
    <A HREF="core_249.htm#MARKER-2-1264">$double-e</A>
    <A HREF="core_250.htm#MARKER-2-1267">$double-pi</A>
    <A HREF="core_230.htm#MARKER-2-1153">$machine-word-size</A>
    <A HREF="core_230.htm#MARKER-2-1155">$maximum-signed-machine-word</A>
    <A HREF="core_230.htm#MARKER-2-1157">$maximum-unsigned-machine-word</A>
    <A HREF="core_230.htm#MARKER-2-1156">$minimum-signed-machine-word</A>
    <A HREF="core_230.htm#MARKER-2-1158">$minimum-unsigned-machine-word</A>
    <A HREF="core_256.htm#MARKER-2-1290">$single-e</A>
    <A HREF="core_257.htm#MARKER-2-1293">$single-pi</A>
    <A HREF="core_75.htm#MARKER-2-521">$unfound</A>
    <A HREF="core_78.htm#MARKER-2-533">$unsupplied</A>
    <A HREF="core_12.htm#MARKER-2-134">inlining adjectives for</A>
  constructors
    specific <A HREF="core_194.htm#MARKER-2-914">[1]</A> <A HREF="core_211.htm#MARKER-2-1083">[2]</A> <A HREF="core_220.htm#MARKER-2-1106">[3]</A>
  constructs
    iteration <A HREF="core_207.htm#MARKER-2-1073">[1]</A> <A HREF="core_213.htm#MARKER-2-1089">[2]</A>
  <A HREF="core_7.htm#MARKER-2-110">core extensions to Dylan</A>
  <A HREF="core_247.htm#MARKER-2-1257">cos method</A>
  <A HREF="core_248.htm#MARKER-2-1261">cosh method</A>
  <A HREF="core_231.htm#MARKER-2-1166">%count-high-zeros function</A>
  functions
    <A HREF="core_231.htm#MARKER-2-1166">%count-high-zeros</A>
  <A HREF="core_231.htm#MARKER-2-1165">%count-low-zeros function</A>
  functions
    <A HREF="core_231.htm#MARKER-2-1165">%count-low-zeros</A>
  <A HREF="core_135.htm#MARKER-2-749">current-thread function</A>
</PRE>
<H2>D</H2>
<PRE>
  <A HREF="core_233.htm#MARKER-2-1194">d%ceiling/ function</A>
  <A HREF="core_233.htm#MARKER-2-1200">d%divide function</A>
  <A HREF="core_233.htm#MARKER-2-1192">d%floor/ function</A>
  <A HREF="core_233.htm#MARKER-2-1196">d%round/ function</A>
  <A HREF="core_233.htm#MARKER-2-1198">d%truncate/ function</A>
  <A HREF="core_48.htm#MARKER-2-407">debug-assert statement macro</A>
  <A HREF="core_49.htm#MARKER-2-411">debug-message function</A>
  define function definition macro <A HREF="core_8.htm#MARKER-2-115">[1]</A> <A HREF="core_9.htm#MARKER-2-118">[2]</A>
  <A HREF="core_51.htm#MARKER-2-416">define table definition macro</A>
  definition macros
    define function <A HREF="core_8.htm#MARKER-2-114">[1]</A> <A HREF="core_9.htm#MARKER-2-117">[2]</A>
    <A HREF="core_51.htm#MARKER-2-415">define table</A>
  <A HREF="core_24.htm#MARKER-2-328">description of finalization</A>
  <A HREF="core_53.htm#MARKER-2-423">difference generic function</A>
  differences
    <A HREF="core_13.htm#MARKER-2-140">language</A>
  <A HREF="core_33.htm#MARKER-2-355">directly finalizing objects</A>
  <A HREF="core_231.htm#MARKER-2-1179">%divide function</A>
  <A HREF="core_249.htm#MARKER-2-1265">$double-e constant</A>
  <A HREF="core_250.htm#MARKER-2-1268">$double-pi constant</A>
  <A HREF="core_91.htm#MARKER-2-586">drain-finalization-queue function</A>
  <A HREF="core_27.htm#MARKER-2-337">draining the finalization queue</A>
    <A HREF="core_41.htm#MARKER-2-378">automatically</A>
    <A HREF="core_42.htm#MARKER-2-386">when to drain queue</A>
  Dylan
    <A HREF="core_192.htm#MARKER-2-910">arithmetic extensions</A>
    <A HREF="core_7.htm#MARKER-2-111">extensions to core language</A>
    <A HREF="core_6.htm#MARKER-2-108">using language extensions</A>
  <A HREF="core_4.htm#MARKER-2-97">Dylan language extensions</A>
    <A HREF="core_20.htm#MARKER-2-314">general</A>
  Dylan library
    <A HREF="core_124.htm#MARKER-2-719">effects of threads on</A>
    <A HREF="core_5.htm#MARKER-2-103">extensions to, introduction</A>
  <A HREF="core_216.htm#MARKER-2-1098">dylan-arithmetic module</A>
  <A HREF="core_215.htm#MARKER-2-1096">dylan-excluding-arithmetic module</A>
  dynamic binding <A HREF="core_121.htm#MARKER-2-706">[1]</A> <A HREF="core_178.htm#MARKER-2-854">[2]</A>
  <A HREF="core_119.htm#MARKER-2-701">dynamic environment</A>
  dynamic-bind statement macro <A HREF="core_179.htm#MARKER-2-857">[1]</A> <A HREF="core_181.htm#MARKER-2-863">[2]</A>
    <A HREF="core_180.htm#MARKER-2-861">extended form of</A>
</PRE>
<H2>E</H2>
<PRE>
  <A HREF="core_33.htm#MARKER-2-354">effects of finalizing objects directly</A>
  <A HREF="core_31.htm#MARKER-2-346">effects of multiple registrations</A>
  <A HREF="core_32.htm#MARKER-2-350">effects of resurrecting objects</A>
  <A HREF="core_124.htm#MARKER-2-717">effects of threads on the Dylan library</A>
  environment
    <A HREF="core_119.htm#MARKER-2-702">dynamic</A>
  equality comparisons <A HREF="core_197.htm#MARKER-2-919">[1]</A> <A HREF="core_221.htm#MARKER-2-1110">[2]</A>
  <A HREF="core_203.htm#MARKER-2-944">even? function</A>
  <A HREF="core_227.htm#MARKER-2-1138">even? method</A>
  <A HREF="core_149.htm#MARKER-2-784">exclusive locks</A>
  <A HREF="core_150.htm#MARKER-2-787">&lt;exclusive-lock&gt; class</A>
  exiting applications
    <A HREF="core_30.htm#MARKER-2-344">finalization</A>
  <A HREF="core_251.htm#MARKER-2-1271">exp method</A>
  <A HREF="core_117.htm#MARKER-2-697">explicit synchronization</A>
  <A HREF="core_214.htm#MARKER-2-1092">exported modules from General-arithmetic library</A>
  <A HREF="core_188.htm#MARKER-2-883">extended form of conditional-update! statement macro</A>
  <A HREF="core_180.htm#MARKER-2-859">extended form of dynamic-bind statement macro</A>
  extensions
    <A HREF="core_6.htm#MARKER-2-106">using Functional Developer's language extensions</A>
  extensions to Dylan
    <A HREF="core_192.htm#MARKER-2-911">arithmetic</A>
    <A HREF="core_4.htm#MARKER-2-98">Dylan language</A>
    <A HREF="core_20.htm#MARKER-2-312">Dylan language, general</A>
  <A HREF="core_7.htm#MARKER-2-112">extensions to Dylan language</A>
  extensions to Dylan library
    <A HREF="core_5.htm#MARKER-2-104">introduction</A>
  <A HREF="core_10.htm#MARKER-2-120">extensions to the for iteration construct</A>
</PRE>
<H2>F</H2>
<PRE>
  <A HREF="core_54.htm#MARKER-2-428">false-or function</A>
  <A HREF="core_55.htm#MARKER-2-432">fill-table! function</A>
  <A HREF="core_23.htm#MARKER-2-325">finalization</A>
    <A HREF="core_29.htm#MARKER-2-341">after</A>
    <A HREF="core_34.htm#MARKER-2-358">and weak tables</A>
    <A HREF="core_36.htm#MARKER-2-366">class-based</A>
    <A HREF="core_24.htm#MARKER-2-327">description of</A>
    <A HREF="core_30.htm#MARKER-2-343">on exiting applications</A>
    <A HREF="core_26.htm#MARKER-2-335">registering objects for</A>
    <A HREF="core_40.htm#MARKER-2-377">using in applications</A>
    <A HREF="core_42.htm#MARKER-2-385">when to drain queue</A>
  <A HREF="core_25.htm#MARKER-2-332">finalization interface</A>
  <A HREF="core_88.htm#MARKER-2-575">finalization module</A>
  finalization queue
    <A HREF="core_27.htm#MARKER-2-338">draining</A>
    <A HREF="core_41.htm#MARKER-2-380">draining automatically</A>
  <A HREF="core_93.htm#MARKER-2-592">finalize generic function</A>
  <A HREF="core_94.htm#MARKER-2-595">finalize method</A>
  <A HREF="core_92.htm#MARKER-2-589">finalize-when-unreachable function</A>
  <A HREF="core_28.htm#MARKER-2-339">finalizers</A>
    <A HREF="core_39.htm#MARKER-2-374">singleton</A>
    <A HREF="core_35.htm#MARKER-2-362">writing</A>
  <A HREF="core_33.htm#MARKER-2-357">finalizing objects directly</A>
  <A HREF="core_56.htm#MARKER-2-436">find-element generic function</A>
  <A HREF="core_57.htm#MARKER-2-441">float-to-string function</A>
  <A HREF="core_204.htm#MARKER-2-1012">floor function</A>
  <A HREF="core_231.htm#MARKER-2-1171">%floor/ function</A>
  <A HREF="core_204.htm#MARKER-2-1020">floor/ function</A>
  for iteration construct
    <A HREF="core_10.htm#MARKER-2-121">extensions to</A>
  for statement macro <A HREF="core_207.htm#MARKER-2-1075">[1]</A> <A HREF="core_213.htm#MARKER-2-1091">[2]</A>
  <A HREF="core_83.htm#MARKER-2-555">format-out function</A>
  <A HREF="core_58.htm#MARKER-2-446">&lt;format-string-condition&gt; class</A>
  <A HREF="core_84.htm#MARKER-2-559">format-to-string function</A>
  formatting
    <A HREF="core_21.htm#MARKER-2-319">simple</A>
  <A HREF="core_59.htm#MARKER-2-451">found? function</A>
  functions
    <A HREF="core_231.htm#MARKER-2-1169">%*</A>
    <A HREF="core_231.htm#MARKER-2-1167">%+</A>
    <A HREF="core_231.htm#MARKER-2-1168">%-</A>
    <A HREF="core_231.htm#MARKER-2-1181">%abs</A>
    <A HREF="core_231.htm#MARKER-2-1173">%ceiling/</A>
    <A HREF="core_231.htm#MARKER-2-1179">%divide</A>
    <A HREF="core_231.htm#MARKER-2-1171">%floor/</A>
    <A HREF="core_231.htm#MARKER-2-1180">%negative</A>
    <A HREF="core_231.htm#MARKER-2-1175">%round/</A>
    <A HREF="core_231.htm#MARKER-2-1182">%shift-left</A>
    <A HREF="core_231.htm#MARKER-2-1183">%shift-right</A>
    <A HREF="core_231.htm#MARKER-2-1177">%truncate/</A>
    <A HREF="core_230.htm#MARKER-2-1159">as-unsigned</A>
    <A HREF="core_204.htm#MARKER-2-1058">ash</A>
    <A HREF="core_170.htm#MARKER-2-834">associated-lock</A>
    <A HREF="core_187.htm#MARKER-2-878">atomic-decrement!</A>
    <A HREF="core_186.htm#MARKER-2-875">atomic-increment!</A>
    <A HREF="core_89.htm#MARKER-2-579">automatic-finalization-enabled?</A>
    <A HREF="core_90.htm#MARKER-2-582">automatic-finalization-enabled?-setter</A>
    <A HREF="core_108.htm#MARKER-2-661">case-insensitive-equal</A>
    <A HREF="core_107.htm#MARKER-2-658">case-insensitive-string-hash</A>
    <A HREF="core_204.htm#MARKER-2-1013">ceiling</A>
    <A HREF="core_204.htm#MARKER-2-1021">ceiling/</A>
    <A HREF="core_135.htm#MARKER-2-748">current-thread</A>
    <A HREF="core_233.htm#MARKER-2-1194">d%ceiling/</A>
    <A HREF="core_233.htm#MARKER-2-1200">d%divide</A>
    <A HREF="core_233.htm#MARKER-2-1192">d%floor/</A>
    <A HREF="core_233.htm#MARKER-2-1196">d%round/</A>
    <A HREF="core_233.htm#MARKER-2-1198">d%truncate/</A>
    <A HREF="core_49.htm#MARKER-2-410">debug-message</A>
    <A HREF="core_91.htm#MARKER-2-585">drain-finalization-queue</A>
    <A HREF="core_203.htm#MARKER-2-943">even?</A>
    <A HREF="core_54.htm#MARKER-2-427">false-or</A>
    <A HREF="core_55.htm#MARKER-2-431">fill-table!</A>
    <A HREF="core_92.htm#MARKER-2-588">finalize-when-unreachable</A>
    <A HREF="core_57.htm#MARKER-2-440">float-to-string</A>
    <A HREF="core_204.htm#MARKER-2-1011">floor</A>
    <A HREF="core_204.htm#MARKER-2-1019">floor/</A>
    <A HREF="core_83.htm#MARKER-2-554">format-out</A>
    <A HREF="core_84.htm#MARKER-2-558">format-to-string</A>
    <A HREF="core_59.htm#MARKER-2-450">found?</A>
    <A HREF="core_204.htm#MARKER-2-1062">gcd</A>
    <A HREF="core_98.htm#MARKER-2-639">hash</A>
    <A HREF="core_61.htm#MARKER-2-456">ignorable</A>
    <A HREF="core_60.htm#MARKER-2-453">ignore</A>
    <A HREF="core_12.htm#MARKER-2-131">inlining adjectives for</A>
    <A HREF="core_62.htm#MARKER-2-459">integer-to-string</A>
    <A HREF="core_133.htm#MARKER-2-742">join-thread</A>
    <A HREF="core_204.htm#MARKER-2-1060">lcm</A>
    <A HREF="core_204.htm#MARKER-2-1052">logand</A>
    <A HREF="core_204.htm#MARKER-2-1056">logbit?</A>
    <A HREF="core_204.htm#MARKER-2-1047">logior</A>
    <A HREF="core_204.htm#MARKER-2-1054">lognot</A>
    <A HREF="core_204.htm#MARKER-2-1050">logxor</A>
    <A HREF="core_206.htm#MARKER-2-1068">merge-hash-codes</A>
    <A HREF="core_16.htm#MARKER-2-146">merge-hash-ids</A>
    <A HREF="core_204.htm#MARKER-2-1027">modulo</A>
    object-hash <A HREF="core_17.htm#MARKER-2-148">[1]</A> <A HREF="core_206.htm#MARKER-2-1070">[2]</A>
    <A HREF="core_64.htm#MARKER-2-469">one-of</A>
    <A HREF="core_87.htm#MARKER-2-571">random</A>
    range <A HREF="core_196.htm#MARKER-2-917">[1]</A> <A HREF="core_211.htm#MARKER-2-1084">[2]</A>
    <A HREF="core_173.htm#MARKER-2-843">release-all</A>
    <A HREF="core_204.htm#MARKER-2-1029">remainder</A>
    <A HREF="core_204.htm#MARKER-2-1015">round</A>
    <A HREF="core_204.htm#MARKER-2-1023">round/</A>
    <A HREF="core_104.htm#MARKER-2-652">sequence-hash</A>
    <A HREF="core_128.htm#MARKER-2-729">sequence-point</A>
    <A HREF="core_175.htm#MARKER-2-847">sleep</A>
    <A HREF="core_232.htm#MARKER-2-1187">so%*</A>
    <A HREF="core_232.htm#MARKER-2-1185">so%+</A>
    <A HREF="core_232.htm#MARKER-2-1186">so%-</A>
    <A HREF="core_232.htm#MARKER-2-1189">so%abs</A>
    <A HREF="core_232.htm#MARKER-2-1188">so%negative</A>
    <A HREF="core_232.htm#MARKER-2-1190">so%shift-left</A>
    <A HREF="core_106.htm#MARKER-2-656">string-hash</A>
    <A HREF="core_71.htm#MARKER-2-502">string-to-integer</A>
    <A HREF="core_72.htm#MARKER-2-509">subclass</A>
    <A HREF="core_73.htm#MARKER-2-513">supplied?</A>
    <A HREF="core_129.htm#MARKER-2-732">synchronize-side-effects</A>
    <A HREF="core_132.htm#MARKER-2-739">thread-name</A>
    <A HREF="core_134.htm#MARKER-2-745">thread-yield</A>
    <A HREF="core_204.htm#MARKER-2-1017">truncate</A>
    <A HREF="core_204.htm#MARKER-2-1025">truncate/</A>
    <A HREF="core_234.htm#MARKER-2-1203">u%*</A>
    <A HREF="core_234.htm#MARKER-2-1201">u%+</A>
    <A HREF="core_234.htm#MARKER-2-1202">u%-</A>
    <A HREF="core_234.htm#MARKER-2-1209">u%&lt;</A>
    <A HREF="core_234.htm#MARKER-2-1204">u%divide</A>
    <A HREF="core_234.htm#MARKER-2-1205">u%rotate-left</A>
    <A HREF="core_234.htm#MARKER-2-1206">u%rotate-right</A>
    <A HREF="core_234.htm#MARKER-2-1207">u%shift-left</A>
    <A HREF="core_234.htm#MARKER-2-1208">u%shift-right</A>
    <A HREF="core_235.htm#MARKER-2-1210">ud%divide</A>
    <A HREF="core_235.htm#MARKER-2-1211">ud%shift-left</A>
    <A HREF="core_235.htm#MARKER-2-1212">ud%shift-right</A>
    <A HREF="core_76.htm#MARKER-2-524">unfound</A>
    <A HREF="core_77.htm#MARKER-2-528">unfound?</A>
    <A HREF="core_79.htm#MARKER-2-537">unsupplied</A>
    <A HREF="core_80.htm#MARKER-2-541">unsupplied?</A>
    <A HREF="core_105.htm#MARKER-2-654">values-hash</A>
</PRE>
<H2>G</H2>
<PRE>
  <A HREF="core_204.htm#MARKER-2-1063">gcd function</A>
  <A HREF="core_20.htm#MARKER-2-311">general Dylan language extensions</A>
  <A HREF="core_123.htm#MARKER-2-713">general requirements for Threads library</A>
  <A HREF="core_208.htm#MARKER-2-1076">General-arithmetic library</A>
    <A HREF="core_214.htm#MARKER-2-1094">exported modules</A>
  generic functions
    <A HREF="core_204.htm#MARKER-2-989">*</A>
    <A HREF="core_204.htm#MARKER-2-973">+</A>
    <A HREF="core_204.htm#MARKER-2-981">-</A>
    <A HREF="core_204.htm#MARKER-2-997">/</A>
    <A HREF="core_200.htm#MARKER-2-931">&lt;</A>
    <A HREF="core_198.htm#MARKER-2-923">=</A>
    <A HREF="core_204.htm#MARKER-2-1039">abs</A>
    <A HREF="core_46.htm#MARKER-2-396">concatenate!</A>
    <A HREF="core_47.htm#MARKER-2-399">condition-to-string</A>
    <A HREF="core_53.htm#MARKER-2-422">difference</A>
    <A HREF="core_93.htm#MARKER-2-591">finalize</A>
    <A HREF="core_56.htm#MARKER-2-435">find-element</A>
    <A HREF="core_203.htm#MARKER-2-963">integral?</A>
    <A HREF="core_204.htm#MARKER-2-1003">negative</A>
    <A HREF="core_203.htm#MARKER-2-957">negative?</A>
    <A HREF="core_202.htm#MARKER-2-941">odd?</A>
    <A HREF="core_152.htm#MARKER-2-791">owned?</A>
    <A HREF="core_66.htm#MARKER-2-477">position</A>
    <A HREF="core_203.htm#MARKER-2-951">positive?</A>
    <A HREF="core_140.htm#MARKER-2-761">release</A>
    remove-all-keys! <A HREF="core_67.htm#MARKER-2-483">[1]</A> <A HREF="core_109.htm#MARKER-2-666">[2]</A>
    <A HREF="core_141.htm#MARKER-2-764">synchronization-name</A>
    <A HREF="core_15.htm#MARKER-2-144">table-protocol</A>
    <A HREF="core_139.htm#MARKER-2-758">wait-for</A>
    <A HREF="core_203.htm#MARKER-2-945">zero?</A>
    <A HREF="core_204.htm#MARKER-2-1031">^</A>
  <A HREF="core_217.htm#MARKER-2-1100">generic-arithmetic-dylan module</A>
</PRE>
<H2>H</H2>
<PRE>
  Functional Developer
    <A HREF="core_6.htm#MARKER-2-109">using language extensions</A>
  <A HREF="core_18.htm#MARKER-2-303">Functional-extensions library</A>
    <A HREF="core_19.htm#MARKER-2-308">introduction</A>
  <A HREF="core_43.htm#MARKER-2-388">functional-extensions module</A>
  <A HREF="core_98.htm#MARKER-2-638">hash functions</A>
  <A HREF="core_102.htm#MARKER-2-648">&lt;hash-state&gt; type</A>
  hierarchy
    <A HREF="core_125.htm#MARKER-2-722">threads class</A>
</PRE>
<H2>I</H2>
<PRE>
  <A HREF="core_61.htm#MARKER-2-457">ignorable function</A>
  <A HREF="core_60.htm#MARKER-2-454">ignore function</A>
  initialize methods
    <A HREF="core_37.htm#MARKER-2-369">parallels with</A>
  inlining adjectives
    <A HREF="core_12.htm#MARKER-2-133">for constants</A>
    <A HREF="core_12.htm#MARKER-2-130">for functions</A>
    <A HREF="core_12.htm#MARKER-2-136">for methods</A>
    <A HREF="core_12.htm#MARKER-2-127">for slots</A>
  <A HREF="core_62.htm#MARKER-2-460">integer-to-string function</A>
  <A HREF="core_190.htm#MARKER-2-905">integers</A>
  <A HREF="core_203.htm#MARKER-2-964">integral? generic function</A>
  <A HREF="core_203.htm#MARKER-2-968">integral? method</A>
  <A HREF="core_203.htm#MARKER-2-966">integral? sealed domain</A>
  interface
    <A HREF="core_25.htm#MARKER-2-333">finalization</A>
  introduction to
    <A HREF="core_191.htm#MARKER-2-906">arithmetic libraries</A>
    <A HREF="core_5.htm#MARKER-2-101">extensions to Dylan</A>
    <A HREF="core_19.htm#MARKER-2-306">Functional-extensions library</A>
    <A HREF="core_113.htm#MARKER-2-688">Threads library</A>
    <A HREF="core_237.htm#MARKER-2-1219">Transcendentals library</A>
  <A HREF="core_252.htm#MARKER-2-1275">isqrt method</A>
  <A HREF="core_63.htm#MARKER-2-464">iterate statement macro</A>
  iteration constructs <A HREF="core_207.htm#MARKER-2-1072">[1]</A> <A HREF="core_213.htm#MARKER-2-1088">[2]</A>
</PRE>
<H2>J</H2>
<PRE>
  <A HREF="core_133.htm#MARKER-2-743">join-thread function</A>
</PRE>
<H2>L</H2>
<PRE>
  <A HREF="core_13.htm#MARKER-2-139">language differences</A>
  language extensions
    <A HREF="core_4.htm#MARKER-2-99">Dylan</A>
    <A HREF="core_20.htm#MARKER-2-313">general Dylan</A>
    <A HREF="core_6.htm#MARKER-2-107">using</A>
  <A HREF="core_204.htm#MARKER-2-1061">lcm function</A>
  libraries
    <A HREF="core_191.htm#MARKER-2-907">arithmetic, introduction</A>
    <A HREF="core_219.htm#MARKER-2-1104">Big-integers</A>
    <A HREF="core_124.htm#MARKER-2-718">effects of threads on Dylan library</A>
    <A HREF="core_5.htm#MARKER-2-102">extensions to Dylan, introduction</A>
    <A HREF="core_208.htm#MARKER-2-1077">General-arithmetic</A>
    <A HREF="core_214.htm#MARKER-2-1093">General-arithmetic, exported modules</A>
    <A HREF="core_18.htm#MARKER-2-304">Functional-extensions</A>
    <A HREF="core_19.htm#MARKER-2-307">Functional-extensions, introduction</A>
    Table-extensions <A HREF="core_95.htm#MARKER-2-627">[1]</A> <A HREF="core_96.htm#MARKER-2-630">[2]</A>
    <A HREF="core_97.htm#MARKER-2-635">Table-extensions, basics features</A>
    <A HREF="core_122.htm#MARKER-2-710">thread safety in client libraries</A>
    <A HREF="core_112.htm#MARKER-2-687">Threads</A>
    <A HREF="core_123.htm#MARKER-2-714">Threads library, general requirements</A>
    Threads, basic features <A HREF="core_126.htm#MARKER-2-725">[1]</A> <A HREF="core_137.htm#MARKER-2-753">[2]</A>
    <A HREF="core_113.htm#MARKER-2-689">Threads, introduction</A>
    <A HREF="core_236.htm#MARKER-2-1218">Transcendentals</A>
    <A HREF="core_237.htm#MARKER-2-1220">Transcendentals, introduction</A>
  limited method <A HREF="core_195.htm#MARKER-2-916">[1]</A> <A HREF="core_220.htm#MARKER-2-1108">[2]</A> <A HREF="core_227.htm#MARKER-2-1151">[3]</A>
  <A HREF="core_143.htm#MARKER-2-769">&lt;lock&gt; class</A>
  locked
    <A HREF="core_182.htm#MARKER-2-864">variables</A>
  <A HREF="core_183.htm#MARKER-2-868">locked variable definition adjective</A>
  <A HREF="core_142.htm#MARKER-2-767">locks</A>
    <A HREF="core_149.htm#MARKER-2-785">exclusive</A>
    <A HREF="core_163.htm#MARKER-2-819">multiple reader / single writer</A>
    <A HREF="core_153.htm#MARKER-2-795">recursive</A>
    <A HREF="core_158.htm#MARKER-2-807">simple</A>
  <A HREF="core_253.htm#MARKER-2-1279">log method</A>
  <A HREF="core_231.htm#MARKER-2-1162">%logand function</A>
  functions
    <A HREF="core_231.htm#MARKER-2-1162">%logior</A>
  <A HREF="core_204.htm#MARKER-2-1053">logand function</A>
  <A HREF="core_231.htm#MARKER-2-1164">%logbit? function</A>
  functions
    <A HREF="core_231.htm#MARKER-2-1164">%logbit?</A>
  <A HREF="core_204.htm#MARKER-2-1057">logbit? function</A>
  <A HREF="core_231.htm#MARKER-2-1160">%logior function</A>
  functions
    <A HREF="core_231.htm#MARKER-2-1160">%logior</A>
  <A HREF="core_204.htm#MARKER-2-1048">logior function</A>
  <A HREF="core_254.htm#MARKER-2-1283">logn method</A>
  <A HREF="core_231.htm#MARKER-2-1163">%lognot function</A>
  functions
    <A HREF="core_231.htm#MARKER-2-1163">%lognot</A>
  <A HREF="core_204.htm#MARKER-2-1055">lognot function</A>
  <A HREF="core_231.htm#MARKER-2-1161">%logxor function</A>
  functions
    <A HREF="core_231.htm#MARKER-2-1161">%logxor</A>
  <A HREF="core_204.htm#MARKER-2-1051">logxor function</A>
  <A HREF="core_127.htm#MARKER-2-727">low-level synchronization</A>
</PRE>
<H2>M</H2>
<PRE>
  Machine Words module <A HREF="core_226.htm#MARKER-2-1132">[1]</A>
  &lt;machine-word&gt; class <A HREF="core_226.htm#MARKER-2-1134">[1]</A> <A HREF="core_229.htm#MARKER-2-1152">[2]</A>
  <A HREF="core_230.htm#MARKER-2-1153">$machine-word-size constant</A>
  magnitude comparisons <A HREF="core_199.htm#MARKER-2-927">[1]</A> <A HREF="core_222.htm#MARKER-2-1112">[2]</A>
  <A HREF="core_230.htm#MARKER-2-1155">$maximum-signed-machine-word constant</A>
  <A HREF="core_230.htm#MARKER-2-1157">$maximum-unsigned-machine-word constant</A>
  <A HREF="core_206.htm#MARKER-2-1069">merge-hash-codes function</A>
  <A HREF="core_16.htm#MARKER-2-147">merge-hash-ids function</A>
  methods
    * <A HREF="core_204.htm#MARKER-2-995">[1]</A> <A HREF="core_204.htm#MARKER-2-993">[2]</A>
    + <A HREF="core_204.htm#MARKER-2-979">[1]</A> <A HREF="core_204.htm#MARKER-2-977">[2]</A>
    - <A HREF="core_204.htm#MARKER-2-987">[1]</A> <A HREF="core_204.htm#MARKER-2-985">[2]</A>
    <A HREF="core_204.htm#MARKER-2-1001">/</A>
    &lt; <A HREF="core_200.htm#MARKER-2-933">[1]</A> <A HREF="core_227.htm#MARKER-2-1147">[2]</A> <A HREF="core_227.htm#MARKER-2-1146">[3]</A> <A HREF="core_227.htm#MARKER-2-1145">[4]</A>
    = <A HREF="core_198.htm#MARKER-2-925">[1]</A> <A HREF="core_227.htm#MARKER-2-1144">[2]</A> <A HREF="core_227.htm#MARKER-2-1143">[3]</A> <A HREF="core_227.htm#MARKER-2-1142">[4]</A>
    abs <A HREF="core_204.htm#MARKER-2-1045">[1]</A> <A HREF="core_204.htm#MARKER-2-1043">[2]</A>
    <A HREF="core_240.htm#MARKER-2-1228">acos</A>
    <A HREF="core_241.htm#MARKER-2-1232">acosh</A>
    as <A HREF="core_227.htm#MARKER-2-1150">[1]</A> <A HREF="core_227.htm#MARKER-2-1149">[2]</A> <A HREF="core_227.htm#MARKER-2-1148">[3]</A>
    <A HREF="core_242.htm#MARKER-2-1236">asin</A>
    <A HREF="core_243.htm#MARKER-2-1240">asinh</A>
    <A HREF="core_244.htm#MARKER-2-1244">atan</A>
    <A HREF="core_245.htm#MARKER-2-1248">atan2</A>
    <A HREF="core_246.htm#MARKER-2-1252">atanh</A>
    <A HREF="core_247.htm#MARKER-2-1256">cos</A>
    <A HREF="core_248.htm#MARKER-2-1260">cosh</A>
    <A HREF="core_227.htm#MARKER-2-1138">even?</A>
    <A HREF="core_251.htm#MARKER-2-1270">exp</A>
    <A HREF="core_94.htm#MARKER-2-594">finalize</A>
    <A HREF="core_12.htm#MARKER-2-137">inlining adjectives for</A>
    <A HREF="core_203.htm#MARKER-2-967">integral?</A>
    <A HREF="core_252.htm#MARKER-2-1274">isqrt</A>
    limited <A HREF="core_195.htm#MARKER-2-915">[1]</A> <A HREF="core_220.htm#MARKER-2-1107">[2]</A> <A HREF="core_227.htm#MARKER-2-1151">[3]</A>
    <A HREF="core_253.htm#MARKER-2-1278">log</A>
    <A HREF="core_254.htm#MARKER-2-1282">logn</A>
    negative <A HREF="core_204.htm#MARKER-2-1009">[1]</A> <A HREF="core_204.htm#MARKER-2-1007">[2]</A>
    negative? <A HREF="core_203.htm#MARKER-2-961">[1]</A> <A HREF="core_227.htm#MARKER-2-1141">[2]</A>
    odd? <A HREF="core_202.htm#MARKER-2-937">[1]</A> <A HREF="core_227.htm#MARKER-2-1137">[2]</A>
    owned? <A HREF="core_157.htm#MARKER-2-804">[1]</A> <A HREF="core_162.htm#MARKER-2-816">[2]</A> <A HREF="core_167.htm#MARKER-2-827">[3]</A>
    <A HREF="core_37.htm#MARKER-2-368">parallels with initialize</A>
    positive? <A HREF="core_203.htm#MARKER-2-955">[1]</A> <A HREF="core_227.htm#MARKER-2-1140">[2]</A>
    release <A HREF="core_148.htm#MARKER-2-781">[1]</A> <A HREF="core_156.htm#MARKER-2-802">[2]</A> <A HREF="core_161.htm#MARKER-2-813">[3]</A> <A HREF="core_166.htm#MARKER-2-825">[4]</A> <A HREF="core_172.htm#MARKER-2-840">[5]</A>
    remove-all-keys! <A HREF="core_110.htm#MARKER-2-668">[1]</A> <A HREF="core_111.htm#MARKER-2-670">[2]</A>
    <A HREF="core_255.htm#MARKER-2-1286">sin</A>
    <A HREF="core_258.htm#MARKER-2-1296">sinh</A>
    <A HREF="core_259.htm#MARKER-2-1300">sqrt</A>
    <A HREF="core_260.htm#MARKER-2-1304">tan</A>
    <A HREF="core_261.htm#MARKER-2-1308">tanh</A>
    wait-for <A HREF="core_147.htm#MARKER-2-778">[1]</A> <A HREF="core_155.htm#MARKER-2-799">[2]</A> <A HREF="core_160.htm#MARKER-2-811">[3]</A> <A HREF="core_165.htm#MARKER-2-823">[4]</A> <A HREF="core_171.htm#MARKER-2-837">[5]</A>
    zero? <A HREF="core_203.htm#MARKER-2-949">[1]</A> <A HREF="core_227.htm#MARKER-2-1139">[2]</A>
    ^ <A HREF="core_204.htm#MARKER-2-1037">[1]</A> <A HREF="core_204.htm#MARKER-2-1035">[2]</A> <A HREF="core_239.htm#MARKER-2-1224">[3]</A>
  <A HREF="core_230.htm#MARKER-2-1156">$minimum-signed-machine-word constant</A>
  <A HREF="core_230.htm#MARKER-2-1158">$minimum-unsigned-machine-word constant</A>
  modules
    <A HREF="core_216.htm#MARKER-2-1099">dylan-arithmetic</A>
    <A HREF="core_215.htm#MARKER-2-1097">dylan-excluding-arithmetic</A>
    <A HREF="core_214.htm#MARKER-2-1095">exported from General-arithmetic library</A>
    <A HREF="core_88.htm#MARKER-2-576">finalization</A>
    <A HREF="core_217.htm#MARKER-2-1101">generic-arithmetic-dylan</A>
    <A HREF="core_43.htm#MARKER-2-389">functional-extensions</A>
    <A HREF="core_82.htm#MARKER-2-551">simple-format</A>
    <A HREF="core_85.htm#MARKER-2-563">simple-random</A>
    <A HREF="core_100.htm#MARKER-2-644">table-extensions</A>
    <A HREF="core_238.htm#MARKER-2-1223">transcendentals</A>
  <A HREF="core_204.htm#MARKER-2-1028">modulo function</A>
  <A HREF="core_114.htm#MARKER-2-692">multi-thread semantics</A>
  <A HREF="core_163.htm#MARKER-2-818">multiple reader / single writer locks</A>
  multiple registrations
    <A HREF="core_31.htm#MARKER-2-348">effects</A>
</PRE>
<H2>N</H2>
<PRE>
  <A HREF="core_231.htm#MARKER-2-1180">%negative function</A>
  <A HREF="core_204.htm#MARKER-2-1004">negative generic function</A>
  negative method <A HREF="core_204.htm#MARKER-2-1010">[1]</A> <A HREF="core_204.htm#MARKER-2-1008">[2]</A>
  <A HREF="core_204.htm#MARKER-2-1006">negative sealed domain</A>
  <A HREF="core_203.htm#MARKER-2-958">negative? generic function</A>
  negative? method <A HREF="core_203.htm#MARKER-2-962">[1]</A> <A HREF="core_227.htm#MARKER-2-1141">[2]</A>
  <A HREF="core_203.htm#MARKER-2-960">negative? sealed domain</A>
  <A HREF="core_169.htm#MARKER-2-832">&lt;notification&gt; class</A>
  <A HREF="core_168.htm#MARKER-2-830">notifications</A>
  number generation
    <A HREF="core_22.htm#MARKER-2-322">simple random</A>
  numbers
    properties of <A HREF="core_201.htm#MARKER-2-936">[1]</A> <A HREF="core_223.htm#MARKER-2-1115">[2]</A>
</PRE>
<H2>O</H2>
<PRE>
  object-hash function <A HREF="core_17.htm#MARKER-2-149">[1]</A> <A HREF="core_206.htm#MARKER-2-1071">[2]</A>
  objects
    <A HREF="core_33.htm#MARKER-2-356">effects of finalizing directly</A>
    <A HREF="core_32.htm#MARKER-2-351">effects of resurrecting</A>
    <A HREF="core_26.htm#MARKER-2-336">registering for finalization</A>
  <A HREF="core_202.htm#MARKER-2-942">odd? generic function</A>
  odd? method <A HREF="core_202.htm#MARKER-2-938">[1]</A> <A HREF="core_227.htm#MARKER-2-1137">[2]</A>
  <A HREF="core_202.htm#MARKER-2-940">odd? sealed domain</A>
  <A HREF="core_64.htm#MARKER-2-470">one-of function</A>
  operations
    arithmetic <A HREF="core_204.htm#MARKER-2-970">[1]</A> <A HREF="core_212.htm#MARKER-2-1087">[2]</A> <A HREF="core_224.htm#MARKER-2-1117">[3]</A>
    <A HREF="core_130.htm#MARKER-2-734">on threads</A>
  <A HREF="core_116.htm#MARKER-2-696">ordering</A>
  <A HREF="core_152.htm#MARKER-2-792">owned? generic function</A>
  owned? method <A HREF="core_157.htm#MARKER-2-805">[1]</A> <A HREF="core_162.htm#MARKER-2-817">[2]</A> <A HREF="core_167.htm#MARKER-2-828">[3]</A>
</PRE>
<H2>P</H2>
<PRE>
  <A HREF="core_37.htm#MARKER-2-367">parallels with initialize methods</A>
  <A HREF="core_66.htm#MARKER-2-478">position generic function</A>
  <A HREF="core_203.htm#MARKER-2-952">positive? generic function</A>
  positive? method <A HREF="core_203.htm#MARKER-2-956">[1]</A> <A HREF="core_227.htm#MARKER-2-1140">[2]</A>
  <A HREF="core_203.htm#MARKER-2-954">positive? sealed domain</A>
  <A HREF="core_21.htm#MARKER-2-317">printing</A>
  properties of numbers <A HREF="core_201.htm#MARKER-2-935">[1]</A> <A HREF="core_223.htm#MARKER-2-1114">[2]</A>
  protocol
    <A HREF="core_136.htm#MARKER-2-751">synchronization</A>
  protocols
    <A HREF="core_151.htm#MARKER-2-789">release</A>
    <A HREF="core_206.htm#MARKER-2-1067">table</A>
</PRE>
<H2>Q</H2>
<PRE>
  queue
    <A HREF="core_42.htm#MARKER-2-384">when to drain finalization queue</A>
</PRE>
<H2>R</H2>
<PRE>
  <A HREF="core_86.htm#MARKER-2-567">&lt;random&gt; class</A>
  <A HREF="core_87.htm#MARKER-2-572">random function</A>
  random number generation
    <A HREF="core_22.htm#MARKER-2-323">simple</A>
  range function <A HREF="core_196.htm#MARKER-2-918">[1]</A> <A HREF="core_211.htm#MARKER-2-1085">[2]</A>
  ranges <A HREF="core_193.htm#MARKER-2-912">[1]</A> <A HREF="core_209.htm#MARKER-2-1079">[2]</A>
  <A HREF="core_164.htm#MARKER-2-821">&lt;read-write-lock&gt; class</A>
  <A HREF="core_153.htm#MARKER-2-794">recursive locks</A>
  <A HREF="core_154.htm#MARKER-2-797">&lt;recursive-lock&gt; class</A>
  <A HREF="core_26.htm#MARKER-2-334">registering objects for finalization</A>
  registrations
    <A HREF="core_31.htm#MARKER-2-347">effects of multiple</A>
  <A HREF="core_140.htm#MARKER-2-762">release generic function</A>
  release method <A HREF="core_148.htm#MARKER-2-782">[1]</A> <A HREF="core_156.htm#MARKER-2-803">[2]</A> <A HREF="core_161.htm#MARKER-2-814">[3]</A> <A HREF="core_166.htm#MARKER-2-826">[4]</A> <A HREF="core_172.htm#MARKER-2-841">[5]</A>
  <A HREF="core_151.htm#MARKER-2-790">release protocol</A>
  <A HREF="core_173.htm#MARKER-2-844">release-all function</A>
  <A HREF="core_204.htm#MARKER-2-1030">remainder function</A>
  remove-all-keys! generic function <A HREF="core_67.htm#MARKER-2-484">[1]</A> <A HREF="core_109.htm#MARKER-2-667">[2]</A>
  remove-all-keys! method <A HREF="core_110.htm#MARKER-2-669">[1]</A> <A HREF="core_111.htm#MARKER-2-671">[2]</A>
  <A HREF="core_123.htm#MARKER-2-716">requirements for Threads library</A>
  resurrecting objects
    <A HREF="core_32.htm#MARKER-2-352">effects</A>
  robustness
    <A HREF="core_38.htm#MARKER-2-371">simplicity and</A>
  <A HREF="core_204.htm#MARKER-2-1016">round function</A>
  <A HREF="core_231.htm#MARKER-2-1175">%round/ function</A>
  <A HREF="core_204.htm#MARKER-2-1024">round/ function</A>
</PRE>
<H2>S</H2>
<PRE>
  sealed domains
    <A HREF="core_204.htm#MARKER-2-991">*</A>
    <A HREF="core_204.htm#MARKER-2-975">+</A>
    <A HREF="core_204.htm#MARKER-2-983">-</A>
    <A HREF="core_204.htm#MARKER-2-999">/</A>
    <A HREF="core_200.htm#MARKER-2-929">&lt;</A>
    <A HREF="core_198.htm#MARKER-2-921">=</A>
    <A HREF="core_204.htm#MARKER-2-1041">abs</A>
    <A HREF="core_203.htm#MARKER-2-965">integral?</A>
    <A HREF="core_204.htm#MARKER-2-1005">negative</A>
    <A HREF="core_203.htm#MARKER-2-959">negative?</A>
    <A HREF="core_202.htm#MARKER-2-939">odd?</A>
    <A HREF="core_203.htm#MARKER-2-953">positive?</A>
    <A HREF="core_203.htm#MARKER-2-947">zero?</A>
    <A HREF="core_204.htm#MARKER-2-1033">^</A>
  semantics
    <A HREF="core_114.htm#MARKER-2-693">multi-thread</A>
  <A HREF="core_146.htm#MARKER-2-776">&lt;semaphore&gt; class</A>
  <A HREF="core_145.htm#MARKER-2-774">semaphores</A>
  <A HREF="core_104.htm#MARKER-2-653">sequence-hash function</A>
  <A HREF="core_128.htm#MARKER-2-730">sequence-point function</A>
  <A HREF="core_231.htm#MARKER-2-1182">%shift-left function</A>
  <A HREF="core_231.htm#MARKER-2-1183">%shift-right function</A>
  <A HREF="core_21.htm#MARKER-2-318">simple formatting</A>
  <A HREF="core_158.htm#MARKER-2-806">simple locks</A>
  <A HREF="core_22.htm#MARKER-2-321">simple random number generation</A>
  <A HREF="core_68.htm#MARKER-2-489">&lt;simple-condition&gt; class</A>
  <A HREF="core_82.htm#MARKER-2-550">simple-format module</A>
  <A HREF="core_159.htm#MARKER-2-809">&lt;simple-lock&gt; class</A>
  <A HREF="core_85.htm#MARKER-2-562">simple-random module</A>
  <A HREF="core_38.htm#MARKER-2-370">simplicity and robustness</A>
  <A HREF="core_255.htm#MARKER-2-1287">sin method</A>
  <A HREF="core_256.htm#MARKER-2-1291">$single-e constant</A>
  <A HREF="core_257.htm#MARKER-2-1294">$single-pi constant</A>
  <A HREF="core_39.htm#MARKER-2-373">singleton finalizers</A>
  <A HREF="core_258.htm#MARKER-2-1297">sinh method</A>
  <A HREF="core_175.htm#MARKER-2-848">sleep function</A>
  slots
    <A HREF="core_12.htm#MARKER-2-128">inlining adjectives for</A>
  <A HREF="core_232.htm#MARKER-2-1187">so%* function</A>
  <A HREF="core_232.htm#MARKER-2-1185">so%+ function</A>
  <A HREF="core_232.htm#MARKER-2-1186">so%- function</A>
  <A HREF="core_232.htm#MARKER-2-1189">so%abs function</A>
  <A HREF="core_232.htm#MARKER-2-1188">so%negative function</A>
  <A HREF="core_232.htm#MARKER-2-1190">so%shift-left function</A>
  specific constructors <A HREF="core_194.htm#MARKER-2-913">[1]</A> <A HREF="core_211.htm#MARKER-2-1082">[2]</A> <A HREF="core_220.htm#MARKER-2-1105">[3]</A>
  <A HREF="core_259.htm#MARKER-2-1301">sqrt method</A>
  statement macros
    <A HREF="core_44.htm#MARKER-2-392">assert</A>
    conditional-update! <A HREF="core_185.htm#MARKER-2-872">[1]</A> <A HREF="core_188.htm#MARKER-2-881">[2]</A> <A HREF="core_189.htm#MARKER-2-886">[3]</A>
    <A HREF="core_48.htm#MARKER-2-406">debug-assert</A>
    dynamic-bind <A HREF="core_179.htm#MARKER-2-856">[1]</A> <A HREF="core_180.htm#MARKER-2-860">[2]</A> <A HREF="core_181.htm#MARKER-2-862">[3]</A>
    for <A HREF="core_207.htm#MARKER-2-1074">[1]</A> <A HREF="core_213.htm#MARKER-2-1090">[2]</A>
    <A HREF="core_63.htm#MARKER-2-463">iterate</A>
    <A HREF="core_74.htm#MARKER-2-517">timing</A>
    <A HREF="core_81.htm#MARKER-2-546">when</A>
    <A HREF="core_144.htm#MARKER-2-771">with-lock</A>
  <A HREF="core_69.htm#MARKER-2-496">&lt;stretchy-sequence&gt; class</A>
  <A HREF="core_106.htm#MARKER-2-657">string-hash function</A>
  &lt;string-table&gt; class <A HREF="core_70.htm#MARKER-2-499">[1]</A> <A HREF="core_101.htm#MARKER-2-646">[2]</A>
  <A HREF="core_71.htm#MARKER-2-503">string-to-integer function</A>
  <A HREF="core_72.htm#MARKER-2-510">subclass function</A>
  <A HREF="core_73.htm#MARKER-2-514">supplied? function</A>
  synchronization
    <A HREF="core_117.htm#MARKER-2-698">explicit</A>
    <A HREF="core_127.htm#MARKER-2-728">low-level</A>
    <A HREF="core_136.htm#MARKER-2-750">protocol</A>
  <A HREF="core_138.htm#MARKER-2-756">&lt;synchronization&gt; class</A>
  <A HREF="core_141.htm#MARKER-2-765">synchronization-name generic function</A>
  <A HREF="core_129.htm#MARKER-2-733">synchronize-side-effects function</A>
</PRE>
<H2>T</H2>
<PRE>
  <A HREF="core_206.htm#MARKER-2-1066">table protocol</A>
  Table-extensions library <A HREF="core_95.htm#MARKER-2-626">[1]</A> <A HREF="core_96.htm#MARKER-2-629">[2]</A>
    <A HREF="core_97.htm#MARKER-2-636">basics features</A>
  <A HREF="core_100.htm#MARKER-2-643">table-extensions module</A>
  <A HREF="core_15.htm#MARKER-2-145">table-protocol generic function</A>
  <A HREF="core_14.htm#MARKER-2-142">tables</A>
    weak <A HREF="core_11.htm#MARKER-2-124">[1]</A> <A HREF="core_99.htm#MARKER-2-642">[2]</A>
  <A HREF="core_260.htm#MARKER-2-1305">tan method</A>
  <A HREF="core_261.htm#MARKER-2-1309">tanh method</A>
  <A HREF="core_131.htm#MARKER-2-737">&lt;thread&gt; class</A>
  <A HREF="core_122.htm#MARKER-2-709">thread safety in client libraries</A>
  <A HREF="core_177.htm#MARKER-2-852">thread variable definition adjective</A>
  thread variables <A HREF="core_120.htm#MARKER-2-704">[1]</A> <A HREF="core_176.htm#MARKER-2-849">[2]</A>
  <A HREF="core_132.htm#MARKER-2-740">thread-name function</A>
  <A HREF="core_134.htm#MARKER-2-746">thread-yield function</A>
  threads
    <A HREF="core_125.htm#MARKER-2-721">class hierarchy</A>
    <A HREF="core_124.htm#MARKER-2-720">effects on Dylan library</A>
    <A HREF="core_130.htm#MARKER-2-735">operations on</A>
  <A HREF="core_112.htm#MARKER-2-686">Threads library</A>
    basic features <A HREF="core_126.htm#MARKER-2-726">[1]</A> <A HREF="core_137.htm#MARKER-2-754">[2]</A>
    <A HREF="core_123.htm#MARKER-2-715">general requirements</A>
    <A HREF="core_113.htm#MARKER-2-690">introduction</A>
  <A HREF="core_174.htm#MARKER-2-846">timers</A>
  <A HREF="core_74.htm#MARKER-2-518">timing statement macro</A>
  <A HREF="core_236.htm#MARKER-2-1217">Transcendentals library</A>
    <A HREF="core_237.htm#MARKER-2-1221">introduction</A>
  <A HREF="core_238.htm#MARKER-2-1222">transcendentals module</A>
  <A HREF="core_204.htm#MARKER-2-1018">truncate function</A>
  <A HREF="core_231.htm#MARKER-2-1177">%truncate/ function</A>
  <A HREF="core_204.htm#MARKER-2-1026">truncate/ function</A>
  types
    <A HREF="core_102.htm#MARKER-2-647">&lt;hash-state&gt;</A>
</PRE>
<H2>U</H2>
<PRE>
  <A HREF="core_234.htm#MARKER-2-1203">u%* function</A>
  <A HREF="core_234.htm#MARKER-2-1201">u%+ function</A>
  <A HREF="core_234.htm#MARKER-2-1202">u%- function</A>
  <A HREF="core_234.htm#MARKER-2-1209">u%&lt; function</A>
  <A HREF="core_234.htm#MARKER-2-1204">u%divide function</A>
  <A HREF="core_234.htm#MARKER-2-1205">u%rotate-left function</A>
  <A HREF="core_234.htm#MARKER-2-1206">u%rotate-right function</A>
  <A HREF="core_234.htm#MARKER-2-1207">u%shift-left function</A>
  <A HREF="core_234.htm#MARKER-2-1208">u%shift-right function</A>
  <A HREF="core_235.htm#MARKER-2-1210">ud%divide function</A>
  <A HREF="core_235.htm#MARKER-2-1211">ud%shift-left function</A>
  <A HREF="core_235.htm#MARKER-2-1212">ud%shift-right function</A>
  <A HREF="core_75.htm#MARKER-2-522">$unfound constant</A>
  <A HREF="core_76.htm#MARKER-2-525">unfound function</A>
  <A HREF="core_77.htm#MARKER-2-529">unfound? function</A>
  <A HREF="core_78.htm#MARKER-2-534">$unsupplied constant</A>
  <A HREF="core_79.htm#MARKER-2-538">unsupplied function</A>
  <A HREF="core_80.htm#MARKER-2-542">unsupplied? function</A>
  update
    conditional <A HREF="core_118.htm#MARKER-2-700">[1]</A> <A HREF="core_184.htm#MARKER-2-871">[2]</A>
  <A HREF="core_40.htm#MARKER-2-375">using finalization in applications</A>
  <A HREF="core_6.htm#MARKER-2-105">using Functional Developer's language extensions</A>
</PRE>
<H2>V</H2>
<PRE>
  <A HREF="core_105.htm#MARKER-2-655">values-hash function</A>
  variable definition adjectives
    <A HREF="core_183.htm#MARKER-2-867">locked</A>
    <A HREF="core_177.htm#MARKER-2-851">thread</A>
  variables
    <A HREF="core_182.htm#MARKER-2-865">locked</A>
    thread <A HREF="core_120.htm#MARKER-2-705">[1]</A> <A HREF="core_176.htm#MARKER-2-850">[2]</A>
</PRE>
<H2>W</H2>
<PRE>
  <A HREF="core_139.htm#MARKER-2-759">wait-for generic function</A>
  wait-for method <A HREF="core_147.htm#MARKER-2-779">[1]</A> <A HREF="core_155.htm#MARKER-2-800">[2]</A> <A HREF="core_160.htm#MARKER-2-812">[3]</A> <A HREF="core_165.htm#MARKER-2-824">[4]</A> <A HREF="core_171.htm#MARKER-2-838">[5]</A>
  weak tables <A HREF="core_11.htm#MARKER-2-123">[1]</A> <A HREF="core_99.htm#MARKER-2-641">[2]</A>
    <A HREF="core_34.htm#MARKER-2-359">finalization and</A>
  <A HREF="core_42.htm#MARKER-2-383">when should my application drain the finalization queue?</A>
  <A HREF="core_81.htm#MARKER-2-547">when statement macro</A>
  <A HREF="core_144.htm#MARKER-2-772">with-lock statement macro</A>
  <A HREF="core_35.htm#MARKER-2-361">writing finalizers</A>
</PRE>
<H2>Z</H2>
<PRE>
  <A HREF="core_203.htm#MARKER-2-946">zero? generic function</A>
  zero? method <A HREF="core_203.htm#MARKER-2-950">[1]</A> <A HREF="core_227.htm#MARKER-2-1139">[2]</A>
  <A HREF="core_203.htm#MARKER-2-948">zero? sealed domain</A>
</PRE>
<H2>^</H2>
<PRE>
  <A HREF="core_204.htm#MARKER-2-1032">^ generic function</A>
  ^ method <A HREF="core_204.htm#MARKER-2-1038">[1]</A> <A HREF="core_204.htm#MARKER-2-1036">[2]</A> <A HREF="core_239.htm#MARKER-2-1225">[3]</A>
  <A HREF="core_204.htm#MARKER-2-1034">^ sealed domain</A>
</PRE>


</DIV>

<HR>
<ADDRESS>Common Dylan and Functional Extensions - 31 Mar 00</ADDRESS>
<P><IMG ALIGN=BOTTOM SRC=nextg.gif ALT=Next BORDER=0> <A HREF="core_270.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
