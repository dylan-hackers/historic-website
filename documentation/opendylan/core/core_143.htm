<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="core_1.htm">
<LINK REL=UP HREF="core_142.htm">
<LINK REL=PREV HREF="core_142.htm">
<LINK REL=NEXT HREF="core_144.htm">
<TITLE> &lt;lock&gt;</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING143></A>

<DIV>
<P><A HREF="core_144.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_142.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_142.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.6.2   Locks</P>

</DIV>
<A NAME=HEADING143-0></A>
<H1> <A NAME=MARKER-2-768></A><A NAME=MARKER-2-769></A><A NAME=MARKER-9-770></A>&lt;lock&gt;</H1>
<P><I>Open abstract instantiable class</I></P>
<H3>Summary</H3>
<P> The class of locks.</P>
<H3>Superclasses</H3>
<dl><dd><pre><A HREF="core_138.htm#MARKER-9-757"><CODE>&lt;synchronization&gt;</CODE></A></pre></dl>
<H3>Library</H3>
<dl><dd><pre>threads</pre></dl>
<H3>Module</H3>
<dl><dd><pre>threads</pre></dl>
<H3>Description</H3>
<P> Locks are synchronization objects which change state when they are <I>claimed</I> (using <A HREF="core_139.htm#MARKER-9-760"><CODE>wait-for</CODE></A>), and revert state when <I>released</I> (using <A HREF="core_140.htm#MARKER-9-763"><CODE>release</CODE></A>). </P>
<P> It is normally necessary for programs to ensure that locks are released, otherwise there is the possibility of <I>deadlock</I>. Locks may be used to restrict the access of other threads to shared resources between the synchronization and the release. It is common for a protected operation to be performed by a body of code which is evaluated in a single thread between synchronization and release. A macro <A HREF="core_144.htm#MARKER-9-773"><CODE>with-lock</CODE></A><CODE> </CODE>is provided for this purpose. When a thread uses a lock for <I>mutual-exclusion</I> in this way, the thread is said to <I>own the lock</I>.</P>
<P> <CODE>&lt;lock&gt;</CODE> has no direct instances; calling <CODE>make</CODE> on <CODE>&lt;lock&gt; </CODE>returns an instance of <CODE>&lt;simple-lock&gt;</CODE>.</P>
<H3>Operations</H3>
<P> The class <CODE>&lt;lock&gt;</CODE> provides the following operations:</P>
<DL>
<P> </P><DT><CODE><A HREF="core_144.htm#MARKER-9-773">with-lock</A></CODE><DD> Execute a body of code between <A HREF="core_139.htm#MARKER-9-760"><CODE>wait-for</CODE></A> and <A HREF="core_140.htm#MARKER-9-763"><CODE>release</CODE></A> operations.
</DL>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Common Dylan and Functional Extensions - 31 Mar 00</ADDRESS>
<P><A HREF="core_144.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_142.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_142.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
