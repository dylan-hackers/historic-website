<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="core_1.htm">
<LINK REL=UP HREF="core_190.htm">
<LINK REL=PREV HREF="core_207.htm">
<LINK REL=NEXT HREF="core_209.htm">
<TITLE>5.3   The Generic-Arithmetic library</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING208></A>

<DIV>
<P><A HREF="core_209.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_207.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_190.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>5 Integers</P>

</DIV>
<A NAME=HEADING208-0></A>
<A NAME=UID-numbers-897581></A>
<H1>5.3   <A NAME=MARKER-2-1076></A><A NAME=MARKER-2-1077></A><A NAME=MARKER-9-1078></A>The Generic-Arithmetic library</H1>
<P>The Generic-Arithmetic library exports the functions described in this section from an exported module called <CODE>generic-arithmetic</CODE>. </P>
<P>The Generic-Arithmetic library provides a fully extensible version of all arithmetic operations. If an application only uses Generic-Arithmetic, these versions of the operators reduce themselves to be equivalent to those in the Dylan library. But when you use additional implementation libraries, the arithmetic operators are extended. </P>
<P>The Big-Integers library is one such implementation library. It provides a 64-bit implementation of <CODE>&lt;integer&gt;</CODE>. </P>
<P>The standard integer implementation in the Dylan library is actually part of the following class hierarchy:</P>
<PRE>
&lt;abstract-integer&gt;
  &lt;integer&gt;
  &lt;big-integer&gt;
    &lt;double-integer&gt;
<P></P>
</PRE>
<P>(The classes <CODE>&lt;big-integer&gt;</CODE> and <CODE>&lt;double-integer&gt;</CODE> are implementation classes. You do not need to use them.) </P>
<P>The modules in the Generic-Arithmetic library export <CODE>&lt;abstract-integer&gt;</CODE> with the name <CODE>&lt;integer&gt;</CODE>. They also export a full set of arithmetic operators that use instances of <CODE>&lt;abstract-integer&gt;</CODE> rather than instances of <CODE>&lt;integer&gt;</CODE> (in the Dylan library naming scheme). However, those operators just fall back to the Dylan library operators until you include an implementation library, such as Big-Integers, in your application.</P>
<P>When you use the Big-Integers library, the arithmetic operators exported by Generic-Arithmetic are enhanced to extend their results to 64-bit integers. If a result is small enough to fit in a Dylan library <CODE>&lt;integer&gt;</CODE>, it will be fitted into one.</P>
<P>Note that the Generic-Arithmetic library uses the same naming conventions for arithmetic operators as used by the Dylan library. This means that some renaming is required in modules that require access to both the basic Dylan interfaces and the interfaces supplied by the Generic-Arithmetic library. As described earlier, the notation <I>interface<CODE>#module</CODE></I> is used to denote different interfaces of the same name, where <I>interface</I> is the name of the interface, and <I>module</I> is the name of the module it is exported from.</P>
<P>See <A HREF="core_218.htm#MARKER-9-1102">"Using special arithmetic features" on page 142</A> for an example of how to use an implementation library with Generic-Arithmetic.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="core_209.htm#HEADING209-0"><B>5.3.1  </B> - Ranges</A>
<DD>
<DT><A REL=BELOW HREF="core_210.htm#HEADING210-0"><B>5.3.2  </B> - Classes</A>
<DD>
<DT><A REL=BELOW HREF="core_211.htm#HEADING211-0"><B>5.3.3  </B> - Specific constructors</A>
<DD>
<DT><A REL=BELOW HREF="core_212.htm#HEADING212-0"><B>5.3.4  </B> - Arithmetic operations</A>
<DD>
<DT><A REL=BELOW HREF="core_213.htm#HEADING213-0"><B>5.3.5  </B> - Iteration constructs</A>
<DD>
<DT><A REL=BELOW HREF="core_214.htm#HEADING214-0"><B>5.3.6  </B> - Exported modules from the Generic-Arithmetic library</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Common Dylan and Functional Extensions - 31 Mar 00</ADDRESS>
<P><A HREF="core_209.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_207.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_190.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
