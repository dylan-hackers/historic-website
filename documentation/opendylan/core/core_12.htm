<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="core_1.htm">
<LINK REL=UP HREF="core_7.htm">
<LINK REL=PREV HREF="core_11.htm">
<LINK REL=NEXT HREF="core_13.htm">
<TITLE>1.3.4   Inlining adjectives for methods, constants, functions, and slots </TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING12></A>

<DIV>
<P><A HREF="core_13.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_11.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_7.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>1.3   The core of the common extensions </P>

</DIV>
<A NAME=HEADING12-0></A>
<H1>1.3.4   <A NAME=MARKER-2-127></A><A NAME=MARKER-2-128></A><A NAME=MARKER-2-129></A><A NAME=MARKER-2-130></A><A NAME=MARKER-2-131></A><A NAME=MARKER-2-132></A><A NAME=MARKER-2-133></A><A NAME=MARKER-2-134></A><A NAME=MARKER-2-135></A><A NAME=MARKER-2-136></A><A NAME=MARKER-2-137></A><A NAME=MARKER-2-138></A>Inlining adjectives for methods, constants, functions, and slots </H1>
<P>To <I>inline</I> a value is to replace, at compile time, a reference to a variable with the value of that variable. Such inlining often allows compile-time evaluation ("constant folding") or partial evaluation.</P>
<P>The Functional Developer compiler can perform inlining on generic function methods, constants, class slots, and functions (created with <CODE>define</CODE> <CODE>function</CODE>--see <A HREF="core_8.htm#MARKER-9-116">Section 1.3.1 on page 2</A>). We have extended the Dylan language specification of <CODE>define</CODE> <CODE>method</CODE>, <CODE>define</CODE> <CODE>constant</CODE>, and class slots with inlining definition adjectives and have included those same adjectives in our language extension <CODE>define</CODE> <CODE>function</CODE>. The adjectives are:<CODE></CODE></P>
<DL>
<DT><CODE>not-inline</CODE><DD><P> Never inline this item.</P>
<DT><CODE>default-inline</CODE> (default)<DD><P></P>
<DT><DD>Inline this item within a library, at the compiler's discretion. Never inline a cross-library reference.
<DT><CODE>may-inline</CODE><DD><P> Inline this item within or between libraries, at the compiler's discretion.</P>
<DT><CODE>inline</CODE><DD><P> Inline this item wherever the compiler can do so.</P>
</DL>
<P>In addition, <CODE>define</CODE> <CODE>constant</CODE> and <CODE>define</CODE> <CODE>function</CODE> permit the adjective <CODE>inline-only</CODE>, which forces every reference to the constant or function to be inlined.</P>
<P><B>Note:</B> If you export from a library any variables created with <CODE>may-inline</CODE>, <CODE>inline</CODE>, or <CODE>inline-only</CODE>, and then change the values of the variables, client libraries may need to be recompiled.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Common Dylan and Functional Extensions - 31 Mar 00</ADDRESS>
<P><A HREF="core_13.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="core_11.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="core_7.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="core_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="core_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="core_271.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
