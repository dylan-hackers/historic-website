<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_97.htm">
<LINK REL=PREV HREF="dguid_97.htm">
<LINK REL=NEXT HREF="dguid_99.htm">
<TITLE>7.4.1   Basic properties of sheets</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING98></A>

<DIV>
<P><A HREF="dguid_99.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_97.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_97.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>7.4   A tour of sheets</P>

</DIV>
<A NAME=HEADING98-0></A>
<H1>7.4.1   <A NAME=MARKER-2-490></A><A NAME=MARKER-2-491></A>Basic properties of sheets</H1>
<P><A NAME=MARKER-10-492></A>All sheets, including gadgets and layouts, have a number of properties that deal with the fairly low level implementation behavior of sheet classes. When developing basic DUIM applications, you do not need to be concerned with these properties for the most part, since gadgets and layouts have been designed so as to avoid the need for direct low level manipulation. However, if you design your own classes of sheet, you need to support these properties.</P>
<DL>
<DT><CODE>sheet-region</CODE><DD><P> The sheet region is used to define the area of the screen that "belongs to" a sheet. This is essential for deciding in which sheet a particular event occurs. For example, the <CODE>sheet-region</CODE> for a gadget defines the area of the screen in which its callbacks are invoked, should an event occur.</P>
<DT><DD>The sheet region is expressed in the sheet's own coordinate system. It can be an instance of any concrete subclass of <CODE>&lt;region&gt;</CODE>, but is usually represented by the region class <CODE>&lt;bounding-box&gt;</CODE>.
<DT><DD>The sheet-region is defined relative to the region of its parent, rather than an absolute region of the screen.
<DT><CODE>sheet-transform</CODE> <DD><P></P>
<DT><DD>This maps the sheet's coordinate system to the coordinate system of its parent. This is an instance of a concrete subclass of <CODE>&lt;transform&gt;</CODE>.
<DT><DD>Providing the sheet transform means that you do not have to worry about the absolute screen position of any given element of an interface. Instead, you can specify its location relative to its parent in the sheet hierarchy. For example, you can arrange gadgets in an interface in terms of the layout that contains them, rather than in absolute terms. 
<DT><CODE>sheet-parent</CODE><DD><P> This is <CODE>#f</CODE> if the sheet has no parent, or another sheet otherwise. This slot is used to describe any hierarchy of sheets.</P>
<DT><CODE>sheet-mapped?</CODE><DD><P> This is a boolean that specifies whether the sheet is visible on a display, ignoring issues of occluding windows.</P>
<DT><CODE>sheet-frame</CODE><DD><P> This returns the frame a sheet belongs to.</P>
</DL>
<P>Many sheet classes, such as <CODE>&lt;menu-bar&gt;</CODE> or <CODE>&lt;tool-bar&gt;</CODE>, have single or multiple children, in which case they have additional attributes:</P>
<DL>
<DT><CODE>sheet-children</CODE><DD><P> The value of this slot is a sequence of sheets. Each sheet in the sequence is a child of the current sheet.</P>
<DT>Methods to add, remove, and replace a child.<DD><P></P>
<DT>Methods to map over children.<DD><P></P>
</DL>
<P>Some classes of sheet -- usually gadgets -- can receive input. These have:</P>
<DL>
<DT><CODE>sheet-event-queue</CODE> <DD><P> </P>
<DT><DD>This is a list of all the events currently queued and waiting for execution for a given sheet.
<DT>Methods for <CODE>&lt;handle-event&gt;</CODE><DD><P></P>
<DT><DD>Each class of sheet must have methods for <CODE>&lt;handle-event&gt;</CODE> defined, so that callbacks may be described for the sheet class.
</DL>
<P>Sheets that can be repainted have methods for <CODE>handle-repaint</CODE>. Sheets that can display output have a <CODE>sheet-medium</CODE> slot. As a guide, all gadgets can be repainted and can display output, and no layouts can be repainted or display output.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_99.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_97.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_97.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
