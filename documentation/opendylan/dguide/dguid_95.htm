<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_92.htm">
<LINK REL=PREV HREF="dguid_94.htm">
<LINK REL=NEXT HREF="dguid_96.htm">
<TITLE>7.3.3   Pinboard layouts and fixed layouts</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING95></A>

<DIV>
<P><A HREF="dguid_96.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_94.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_92.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>7.3   A tour of layouts</P>

</DIV>
<A NAME=HEADING95-0></A>
<H1>7.3.3   <A NAME=MARKER-2-479></A><A NAME=MARKER-2-480></A><A NAME=MARKER-2-481></A><A NAME=MARKER-2-482></A>Pinboard layouts and fixed layouts</H1>
<P>A pinboard layout is a framework that serves as a place to locate any number of child gadgets. It has no built in layout information, so, unless you specify coordinates explicitly, any object placed in a pinboard layout is placed at the coordinates 0,0 (top left), with the most recently created object on top. </P>
<P>In normal use, you should supply coordinate information for each child to determine its position in the layout. You have complete flexibility in positioning objects in a pinboard layout by giving each object coordinates, as shown in the following example:</P>
<PRE>
contain
  (make
    (&lt;pinboard-layout&gt;, 
     children: 
       vector (make(&lt;push-button&gt;, label: &quot;One&quot;, x: 0, y: 0),
               make(&lt;push-button&gt;, label: &quot;Two&quot;, x: 50,y: 50),
               make(&lt;push-button&gt;, label: &quot;Three&quot;, 
                    x: 50, y: 100)))); 
<P></P>
<TABLE BORDER=1><CAPTION></PRE>
<P>Figure 7.25   Three buttons arranged in a pinboard layout<A NAME=MARKER-9-339></A></P>
</CAPTION><TR VALIGN=TOP><TD><P> <A NAME=MARKER-10-340></A><IMG ALIGN=TOP SRC=dg95im28.gif></P>
</TD></TR></TABLE><P>Any child in a pinboard layout obeys any size constraints that may apply to it, whether those constraints have been specified by you, or calculated by DUIM. For instance, any button you place on a pinboard layout will always be large enough to display all the text in its label, as shown in <A HREF="#MARKER-9-339">Figure 7.25</A>. The <CODE>&lt;fixed-layout&gt;</CODE> class takes generalization of layouts a step further, by requiring that you specify not only the position of every child, but also its size, so that DUIM performs no constraint calculation at all.This class of layout should only be used if you know exactly what size and position every child in the layout should have. It might be useful, for instance, if you were setting up a resource database in which the sizes and positions of a number of sheets were specified, and were to be read directly into your application code from this database. For most situations, however, you will not need to use the <CODE>&lt;fixed-layout&gt;</CODE> class.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_96.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_94.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_92.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
