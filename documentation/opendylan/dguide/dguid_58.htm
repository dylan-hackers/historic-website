<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_55.htm">
<LINK REL=PREV HREF="dguid_57.htm">
<LINK REL=NEXT HREF="dguid_59.htm">
<TITLE>6.3   Re-implementing the menus of the task list manager</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING58></A>

<DIV>
<P><A HREF="dguid_59.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_57.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_55.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6 Using Command Tables</P>

</DIV>
<A NAME=HEADING58-0></A>
<A NAME=UID-commands-889261></A>
<H1>6.3   Re-implementing the menus of the task list manager</H1>
<P>The code below provides definitions for the entire menu hierarchy of the task list manager, using the same activate callbacks that are described and implemented in <A HREF="dguid_34.htm#MARKER-9-245">Chapter 5, "Adding Callbacks to the Application"</A>. Note that the labels, documentation strings, and keyboard accelerators for each menu item are identical to the ones used in the original implementation of the task list manager. For completeness, the definition of <CODE>*file-command-table*</CODE>, described in <A HREF="dguid_57.htm#MARKER-9-332">Section 6.2 on page 76</A>, is repeated below.</P>
<PRE>
define command-table *file-command-table* (*global-command-table*)
  menu-item &quot;Open&quot; = open-file,
    accelerator:   make-keyboard-gesture(#&quot;o&quot;, #&quot;control&quot;),
    documentation: &quot;Opens an existing file.&quot;;
  menu-item &quot;Save&quot; = save-file,
    accelerator:   make-keyboard-gesture(#&quot;s&quot;, #&quot;control&quot;),
    documentation: &quot;Saves the current file to disk.&quot;;
  menu-item &quot;Save As...&quot; = save-as-file,
    documentation: &quot;Saves the current file with a new name.&quot;;
  menu-item &quot;Exit&quot; = exit-task,
    accelerator:   make-keyboard-gesture(#&quot;f4&quot;, #&quot;alt&quot;),
    documentation: &quot;Exits the application.&quot;;
end command-table *file-command-table*;
<P></P>
define command-table *edit-command-table* (*global-command-table*)
  menu-item &quot;Cut&quot; = cut-command,
    accelerator:   make-keyboard-gesture(#&quot;x&quot;, #&quot;control&quot;),
    documentation: &quot;Cut the selection to the clipboard.&quot;;
  menu-item &quot;Copy&quot; = copy-command,
    accelerator:   make-keyboard-gesture(#&quot;c&quot;, #&quot;control&quot;),
    documentation: &quot;Copy the selection to the clipboard.&quot;;
  menu-item &quot;Paste&quot; = paste-command,
    accelerator:   make-keyboard-gesture(#&quot;v&quot;, #&quot;control&quot;),
    documentation: &quot;Paste the selection in the clipboard at the current position.&quot;;
end command-table *edit-command-table*;
<P></P>
define command-table *task-command-table* 
    (*global-command-table*)
  menu-item &quot;Add...&quot; = frame-add-task,
    accelerator: make-keyboard-gesture(#&quot;a&quot;, #&quot;control&quot;, #&quot;shift&quot;),
    documentation: &quot;Add a new task.&quot;;
  menu-item &quot;Remove&quot; = frame-remove-task,
    accelerator: make-keyboard-gesture(#&quot;d&quot;, #&quot;control&quot;, #&quot;shift&quot;),
    documentation: &quot;Remove the selected task from the list.&quot;;
end command-table *task-command-table*;
<P></P>
define command-table *help-command-table* (*global-command-table*)
  menu-item &quot;About&quot; = about-task,
    accelerator:   make-keyboard-gesture(#&quot;f1&quot;),
    documentation: &quot;Display information about the application.&quot;;
end command-table *help-command-table*;
<P></P>
</PRE>
<P>The definitions above can be used in place of the definition of each menu and menu button in the original implementation of the task list manager. You must place the command table definitions provided above after the callback definitions themselves, to avoid forward references.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_59.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_57.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_55.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
