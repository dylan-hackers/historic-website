<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_19.htm">
<LINK REL=PREV HREF="dguid_26.htm">
<LINK REL=NEXT HREF="dguid_28.htm">
<TITLE>3.8   Creating a dialog for adding new items</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING27></A>

<DIV>
<P><A HREF="dguid_28.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_26.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_19.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>3 Improving The Design</P>

</DIV>
<A NAME=HEADING27-0></A>
<A NAME=UID-improve-889674></A>
<H1>3.8   <A NAME=MARKER-2-173></A><A NAME=MARKER-2-174></A><A NAME=MARKER-9-175></A>Creating a dialog for adding new items</H1>
<P>You may be wondering what has happened to <CODE>task-text</CODE>, the text field in which you typed the text of each new task. In the new design, this is moved to a new dialog box that is popped up whenever you choose a command to add a new task to the list. This section shows you how to define this dialog.</P>
<P>The method <CODE>prompt-for-task</CODE> below creates and displays a dialog that asks the user to type the text for a new task. The definition of <CODE>task-text</CODE> is very similar to the definition you provided in the initial design, with the exception that the activate callback exits the dialog, rather than calling the <CODE>not-yet-implemented</CODE> function. </P>
<TABLE BORDER=1><CAPTION><P>Figure 3.1   The dialog box created by the prompt-for-task method</P>
</CAPTION><TR VALIGN=TOP><TD><P> <A NAME=MARKER-10-132></A><IMG ALIGN=TOP SRC=dg27ima3.gif></P>
</TD></TR></TABLE><P>The method takes two keyword arguments: a title, which is assigned a value by default, and an owner, which is used as the owner for the dialog that is displayed by <CODE>prompt-for-task</CODE>. Note that the title is never explicitly set by any calls to <CODE>prompt-for-task</CODE> in the task list manager; it is provided here as an illustration of how you can provide a default value for a keyword argument, rather than requiring that it either always be passed in the call to the method, or that it be hard-wired into the code.</P>
<P>The method returns two values: the name of the new task, that is, the text that the user types into the text field, and the priority of the new task.</P>
<P>Add this method to <CODE>frame.dylan</CODE>.</P>
<P><B>Note:</B> The definition of the <CODE>prompt-for-task</CODE> method uses the <CODE>&lt;priority&gt;</CODE> type. Note that this type is defined in <A HREF="dguid_35.htm#MARKER-9-247">Section 5.1, "Defining the underlying data structures for tasks"</A>. Until the relevant code in <A HREF="dguid_35.htm#MARKER-9-247">Section 5.1</A> is added to your project, any attempt to build it will generate a serious warning.</P>
<PRE>
define method prompt-for-task 
    (#key title = &quot;Type text of new task&quot;, owner)
 =&gt; (name :: false-or(&lt;string&gt;), 
     priority :: false-or(&lt;priority&gt;))
  let task-text
    = make(&lt;text-field&gt;, 
           label: &quot;Task text:&quot;,
           activate-callback: exit-dialog);
  let priority-field
    = make(&lt;radio-box&gt;,
           items: $priority-items,
           label-key: first,
           value-key: second,
           value: #&quot;medium&quot;);
  let frame-add-task-dialog
    = make(&lt;dialog-frame&gt;, 
           title: title,
           owner: owner,
           layout: vertically ()
                     task-text;
                     priority-field
                   end,
           input-focus: task-text);
  if (start-dialog(frame-add-task-dialog))
    values(gadget-value(task-text), gadget-value(priority-field))
  end
end method prompt-for-task;
<P></P>
</PRE>
<P>Notice that the dialog used in the <CODE>prompt-for-task</CODE> method is created inline within the method definition. In this particular case, the dialog is only ever needed within the context of <CODE>prompt-for-task</CODE> and so it is not necessary to use <CODE>define frame</CODE> to create a distinct class of frame specifically for this dialog.</P>
<P>Note also that <B>OK</B> and <B>Cancel</B> buttons are generated automatically for a dialog box; you do not need to define them explicitly.</P>
<P>Later on, the activate callback you define for the <CODE>add-button</CODE> pane calls this method, then inserts the return value into the list <CODE>task-list</CODE>.</P>
<A NAME=LINK-improve-lastpage></A><A NAME=LINK-menus-firstpage></A><!-- FM pgf ignored -->

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_28.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_26.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_19.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
