<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_71.htm">
<LINK REL=PREV HREF="dguid_72.htm">
<LINK REL=NEXT HREF="dguid_74.htm">
<TITLE>7.2.3.2   Button boxes</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING73></A>

<DIV>
<P><A HREF="dguid_74.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_72.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_71.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>7.2.3   Collection gadgets</P>

</DIV>
<A NAME=HEADING73-0></A>
<H1>7.2.3.2   <A NAME=MARKER-2-392></A><A NAME=MARKER-2-393></A><A NAME=MARKER-9-394></A>Button boxes</H1>
<P>Groups of functionally related buttons are placed in button boxes. The superclass for button boxes is the <CODE>&lt;button-box&gt;</CODE> class. The two most common types of button box are <CODE>&lt;check-box&gt; </CODE>(groups of check buttons) and <CODE>&lt;radio-box&gt; </CODE>(groups of radio buttons). In addition, <CODE>&lt;push-box&gt; </CODE>(groups of push buttons) can be used.</P>
<TABLE BORDER=1><CAPTION><P>Figure 7.5   A push box</P>
</CAPTION><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=dg73ima8.gif></P>
</TD></TR></TABLE><P><B>Note:</B> You should be aware of the distinction between the use of the term "box" in DUIM, and the use of the term "box" in some other development documentation (such as Microsoft's interface guidelines). <B>In the context of DUIM, a box always refers to a group containing several gadgets</B> (usually buttons). In other documentation, a box may just be a GUI element that looks like a box. For example, a <I>check button</I> may sometimes be called a <I>check box</I>. </P>
<P>A <CODE>&lt;radio-box&gt; </CODE>is a button box that contains one or more radio buttons, only one of which may be selected at any time. </P>
<PRE>
define variable *my-radio-box* <A NAME=MARKER-10-395></A>
   := make(&lt;radio-box&gt;, items: #[1, 2, 3],
           value: 2);
<P></P>
</PRE>
<P>Note the use of <CODE>value:</CODE> to choose the item initially selected when the box is created.</P>
<TABLE BORDER=1><CAPTION><P>Figure 7.6   <A NAME=MARKER-9-345></A>A radio box</P>
</CAPTION><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=dg73ima9.gif></P>
</TD></TR></TABLE><P>For all boxes, the <CODE>gadget-value</CODE> is the selected button. In<A NAME=MARKER-10-396></A> <A HREF="#MARKER-9-345">Figure 7.6</A> the <CODE>gadget-value</CODE> is 2. </P>
<PRE>
gadget-value(*my-radio-box*);
<I>=&gt; 2</I> 
<P></P>
</PRE>
<P>You can set the <CODE>gadget-value</CODE> to 3 and the selected button changes to 3:</P>
<PRE>
gadget-value(*my-radio-box*) := 3;
<P></P>
</PRE>
<P>As with all collection gadgets, use <CODE>gadget-items</CODE> to set or return the collection that defines the contents of a radio box. </P>
<PRE>
gadget-items(*my-radio-box*); <I>=&gt; #[1, 2, 3]</I> 
<P></P>
</PRE>
<P>If you reset the <CODE>gadget-items</CODE> in a collection gadget, the gadget resizes accordingly:</P>
<PRE>
gadget-items(*my-radio-box*) := range(from: 5, to: 20, by: 5);<A NAME=MARKER-10-397></A>
<P></P>
<TABLE BORDER=1><CAPTION></PRE>
<P>Figure 7.7   The same radio box, resized to hold new items</P>
</CAPTION><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=dg73im10.gif></P>
</TD></TR></TABLE><P>A check box, on the other hand, can have any number of buttons selected. The following code creates a check box. After creating it, select the buttons labelled 4 and 6, as shown<A NAME=MARKER-10-398></A> in <A HREF="#MARKER-9-346">Figure 7.8</A>.</P>
<PRE>
define variable *my-check-box* <A NAME=MARKER-10-399></A>
   := make(&lt;check-box&gt;, items: #(4, 5, 6));
<P></P>
<TABLE BORDER=1><CAPTION></PRE>
<P>Figure 7.8   <A NAME=MARKER-9-346></A>A check box</P>
</CAPTION><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=dg73im11.gif></P>
</TD></TR></TABLE><P>You can return the current selection, or set the selection, using <CODE>gadget-value</CODE>.</P>
<PRE>
gadget-value(*my-check-box*); <I>=&gt; #[4, 6]</I> 
gadget-value(*my-check-box*) := #[5, 6];
<P></P>
</PRE>
<P>Remember that for a multiple-selection collection gadget, the gadget value is a sequence consisting of the values of all the selected items. The value of any given item is calculated using the value key.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_74.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_72.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_71.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
