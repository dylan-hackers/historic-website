<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_47.htm">
<LINK REL=PREV HREF="dguid_48.htm">
<LINK REL=NEXT HREF="dguid_50.htm">
<TITLE>5.3.3.2   Determining and setting the selected task</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING49></A>

<DIV>
<P><A HREF="dguid_50.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_48.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_47.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>5.3.3   Updating the user interface</P>

</DIV>
<A NAME=HEADING49-0></A>
<H1>5.3.3.2   <A NAME=MARKER-9-295></A>Determining and setting the selected task</H1>
<P>Two methods are used to determine which task is selected in the task list manager, and to set a specific task in the task list manager: <CODE>frame-selected-task</CODE> and <CODE>frame-selected-task-setter</CODE>.</P>
<P>The <CODE>frame-selected-task</CODE> method returns the task that is currently selected in the task list manager, or <CODE>#f</CODE> if no task is selected. This method is used by <CODE>frame-remove-task</CODE> to determine which task should be deleted from the task list. It is also used by <CODE>note-task-selection-change</CODE> to determine whether or not a task is selected.</P>
<PRE>
define method frame-selected-task
    (frame :: &lt;task-frame&gt;) =&gt; (task :: false-or(&lt;task&gt;))
  let list-box = task-list(frame);
  gadget-value(list-box)
end method frame-selected-task;
<P></P>
</PRE>
<P>The <CODE>frame-selected-task</CODE> method works by determining the <CODE>gadget-value</CODE> of the list box that displays the tasks in the task list manager. The <CODE>gadget-value</CODE> of a collection such as a list box is the selected item. Notice how you can access the value of a pane in a frame instance in exactly the same way that you can access the value of a slot in a class instance; the definition of the pane creates an accessor that is just like a slot accessor. Recall that the name of the list box in the definition of the <CODE>&lt;task-frame&gt;</CODE> class is <CODE>task-list</CODE>.</P>
<P>A setter method is also defined for <CODE>frame-selected-task</CODE>, as shown below:</P>
<PRE>
define method frame-selected-task-setter
    (task :: false-or(&lt;task&gt;), frame :: &lt;task-frame&gt;)
 =&gt; (task :: false-or(&lt;task&gt;))
  let list-box = task-list(frame);
  gadget-value(list-box) := task;
  note-task-selection-change(frame);
  task
end method frame-selected-task-setter;
<P></P>
</PRE>
<P>This method takes two arguments: the <CODE>task</CODE> to select in the task list manager, and the <CODE>frame</CODE> to which the task belongs. It returns the task. The method determines the list box used to display tasks in <CODE>frame</CODE>, and then sets the <CODE>gadget-value</CODE> of that list box to <CODE>task</CODE>. Finally, it calls <CODE>note-task-selection-change</CODE>, described below, to update other parts of the user interface appropriately, such as buttons on the tool bar.</P>
<P>As with most setter methods, <CODE>frame-selected-task-setter</CODE> is not called directly. Instead, it is called implicitly by setting a value using fra<CODE>me-selected-task</CODE>. For example, </P>
<PRE>
frame-selected-task(frame) := #f;
<P></P>
</PRE>
<P>ensures that no tasks are selected in <CODE>frame</CODE>.</P>
<P>The <CODE>frame-selected-task-setter</CODE> method is called by two other methods: <CODE>frame-add-task</CODE> (to ensure that the task added is subsequently selected) and <CODE>frame-remove-task</CODE> (to ensure that no tasks are selected once a task has been removed from the list). These methods are described in <A HREF="dguid_45.htm#MARKER-9-286">Section 5.3.2.1 on page 60</A>.</P>
<P>Add the code for these methods to <CODE>frame.dylan</CODE>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_50.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_48.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_47.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
