<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dgui_107.htm">
<LINK REL=PREV HREF="dgui_108.htm">
<LINK REL=NEXT HREF="dgui_110.htm">
<TITLE>A.2   A task list manager using command tables</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING109></A>

<DIV>
<P><A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dgui_108.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dgui_107.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>A Source Code For The Task List Manager</P>

</DIV>
<A NAME=HEADING109-0></A>
<H1>A.2   <A NAME=MARKER-2-616></A><A NAME=MARKER-2-617></A><A NAME=MARKER-2-618></A><A NAME=MARKER-9-619></A>A task list manager using command tables</H1>
<P>This section contains the complete source code of the task list manager when command tables have been used to implement the menu system, rather than explicit menu gadgets. To load this code into the environment, choose <B>Tools &gt; Open Example Project</B> from any window in the environment. The code in this section can be loaded by choosing Task List 2 in the Documentation category of the Open Example Project dialog.</P>
<P>The command tables used in this implementation are described in <A HREF="dguid_55.htm#MARKER-9-326">Chapter 6, "Using Command Tables"</A>. You should refer to <A HREF="dguid_19.htm#MARKER-9-149">Chapter 3, "Improving The Design"</A>, and <A HREF="dguid_34.htm#MARKER-9-245">Chapter 5, "Adding Callbacks to the Application"</A>, for a full description of the rest of the code shown here. Note that, apart from code specific to command tables and callbacks, the code listed in this section is a repeat of code listed in <A HREF="dgui_108.htm#MARKER-9-615">Section A.1 on page 133</A>. </P>
<P>Contents of the file <CODE>frame.dylan</CODE>:</P>
<PRE>
Module:    task-list
Synopsis:  Task List Manager.
Author:    Harlequin Group plc
Copyright: (C) 1998, Harlequin Group plc.  All rights reserved.

define constant $priority-items
  = #(#(&quot;Low&quot;, #&quot;low&quot;),
      #(&quot;Medium&quot;, #&quot;medium&quot;),
      #(&quot;High&quot;, #&quot;high&quot;));

define frame &lt;task-frame&gt; (&lt;simple-frame&gt;)
  slot frame-task-list :: &lt;task-list&gt; = make(&lt;task-list&gt;);

// Note: no definition of menu buttons in this implementation,
// See definition of command tables instead.

// Definition of buttons
  pane add-button (frame)
    make(&lt;push-button&gt;, label: &quot;Add task&quot;,
         command: frame-add-task,
         activate-callback: method (gadget) 
         frame-add-task(frame) end);
  pane remove-button (frame)
    make(&lt;push-button&gt;, label: &quot;Remove task&quot;,
    command: frame-remove-task,
    activate-callback:  method (gadget) frame-remove-task(frame)
                        end);
  pane open-button (frame)
    make(&lt;push-button&gt;, label: &quot;Open file&quot;,
    command: open-file,
    activate-callback: method (gadget) open-file(frame) end);
   pane save-button (frame)
    make(&lt;push-button&gt;, label: &quot;Save file&quot;,
    command: save-file,
    activate-callback: method (gadget) save-file(frame) end);

// Definition of radio box
  pane priority-box (frame)
    make(&lt;radio-box&gt;,
    items: $priority-items,
    orientation: #&quot;horizontal&quot;,
    label-key: first,
    value-key: second,
    value: #&quot;medium&quot;,
    activate-callback: method (gadget) not-yet-implemented(frame)                        end);

// Definition of tool bar
  pane task-tool-bar (frame)
    make(&lt;tool-bar&gt;,
        child: horizontally ()
                 frame.open-button;
                 frame.save-button;
                 frame.add-button;
                 frame.remove-button
               end); 

// Definition of status bar
  pane task-status-bar (frame)
    make(&lt;status-bar&gt;, label: &quot;Task Manager&quot;);

// Definition of list
  pane task-list (frame)
    make (&lt;list-box&gt;,
          items: frame.frame-task-list.task-list-tasks,
          label-key: task-name,
          lines: 15,
          value-changed-callback: 
            method (gadget) 
              note-task-selection-change(frame) 
            end);

// Main layout
  pane task-layout (frame)
    vertically ()
      frame.task-list; 
      frame.priority-box;
    end;

// Activation of frame elements
  layout (frame) frame.task-layout;
  tool-bar (frame) frame.task-tool-bar;
  status-bar (frame) frame.task-status-bar;
  command-table (frame) *task-list-command-table*;

// Frame title
  keyword title: = &quot;Task List Manager&quot;;
end frame &lt;task-frame&gt;;

define method initialize
    (frame :: &lt;task-frame&gt;, #key) =&gt; ()
  next-method();
  refresh-task-frame(frame);
end method initialize;

define method prompt-for-task 
   (#key title = &quot;Type text of new task&quot;, owner)
 =&gt; (name :: false-or(&lt;string&gt;), 
     priority :: false-or(&lt;priority&gt;))
  let task-text
    = make(&lt;text-field&gt;, 
           label: &quot;Task text:&quot;,
           activate-callback: exit-dialog);
  let priority-field
    = make(&lt;radio-box&gt;,
           items: $priority-items,
           label-key: first,
           value-key: second,
           value: #&quot;medium&quot;);
  let frame-add-task-dialog
    = make(&lt;dialog-frame&gt;, 
           title: title,
           owner: owner,
           layout: vertically ()
                     task-text;
                     priority-field
                   end,
           input-focus: task-text);
  if (start-dialog(frame-add-task-dialog))
    values(gadget-value(task-text), gadget-value(priority-field))
  end
end method prompt-for-task;

define function not-yet-implemented (frame :: &lt;task-frame&gt;) =&gt; ()
  notify-user(&quot;Not yet implemented!&quot;, owner: frame)
end function not-yet-implemented;

define method start-task () =&gt; ()
  let frame
    = make(&lt;task-frame&gt;);
  start-frame(frame);
end method start-task;

define method frame-add-task (frame :: &lt;task-frame&gt;) =&gt; ()
  let task-list = frame-task-list(frame);
  let (name, priority) = prompt-for-task(owner: frame);
  if (name &amp; priority)
    let new-task = make(&lt;task&gt;, name: name, priority: priority);
    add-task(task-list, new-task);
    refresh-task-frame(frame);
    frame-selected-task(frame) := new-task
  end
end method frame-add-task;

define method frame-remove-task (frame :: &lt;task-frame&gt;) =&gt; ()
  let task = frame-selected-task(frame);
  let task-list = frame-task-list(frame);
  if (notify-user(format-to-string
                    (&quot;Really remove task %s&quot;, task.task-name),
                  owner: frame, style: #&quot;question&quot;))
    frame-selected-task(frame) := #f;
    remove-task(task-list, task);
    refresh-task-frame(frame)
  end
end method frame-remove-task;

define method frame-selected-task
    (frame :: &lt;task-frame&gt;) =&gt; (task :: false-or(&lt;task&gt;))
  let list-box = task-list(frame);
  gadget-value(list-box)
end method frame-selected-task;

define method frame-selected-task-setter
    (task :: false-or(&lt;task&gt;), frame :: &lt;task-frame&gt;)
 =&gt; (task :: false-or(&lt;task&gt;))
  let list-box = task-list(frame);
  gadget-value(list-box) := task;
  note-task-selection-change(frame);
  task
end method frame-selected-task-setter;

define method refresh-task-frame
    (frame :: &lt;task-frame&gt;) =&gt; ()
  let list-box = frame.task-list;
  let task-list = frame.frame-task-list;
  let modified? = task-list.task-list-modified?;
  let tasks = task-list.task-list-tasks;
  if (gadget-items(list-box) == tasks)
    update-gadget(list-box)
  else
    gadget-items(list-box) := tasks
  end;
  command-enabled?(save-file, frame) := modified?;
  note-task-selection-change(frame);
end method refresh-task-frame;

define method note-task-selection-change
    (frame :: &lt;task-frame&gt;) =&gt; ()
  let task = frame-selected-task(frame);
  if (task)
    frame.priority-box.gadget-value := task.task-priority;
  end;
  command-enabled?(frame-remove-task, frame) := task ~= #f;
end method note-task-selection-change;

define method open-file
    (frame :: &lt;task-frame&gt;) =&gt; ()
  let task-list = frame-task-list(frame);
  let filename
    = choose-file(frame: frame,
                  default: task-list.task-list-filename,
                  direction: #&quot;input&quot;);
  if (filename)
    let task-list = load-task-list(filename);
    if (task-list)
      frame.frame-task-list := task-list;
      refresh-task-frame(frame)
    else
      notify-user(format-to-string
                   (&quot;Failed to open file %s&quot;, filename),
                  owner: frame)
    end
  end
end method open-file;

define method save-file
    (frame :: &lt;task-frame&gt;) =&gt; ()
  let task-list = frame-task-list(frame);
  if (task-list.task-list-modified?)
    save-as-file(frame, filename: task-list.task-list-filename)
  end
end method save-file;

define method save-as-file
    (frame :: &lt;task-frame&gt;, #key filename) =&gt; ()
  let task-list = frame-task-list(frame);
  let filename
    = filename
        | choose-file(frame: frame,
                      default: task-list.task-list-filename,
                      direction: #&quot;output&quot;);
  if (filename)
    if (save-task-list(task-list, filename: filename))
      frame.frame-task-list := task-list;
      refresh-task-frame(frame)
    else
      notify-user(format-to-string
                    (&quot;Failed to save file %s&quot;, filename),
                  owner: frame)
    end
  end
end method save-as-file;

define function about-task (frame :: &lt;task-frame&gt;) =&gt; ()
  notify-user(&quot;Task List Manager&quot;, owner: frame)
end function about-task;

define method exit-task (frame :: &lt;task-frame&gt;) =&gt; ()
  let task-list = frame-task-list(frame);
  save-file(frame);
  exit-frame(frame)
end method exit-task;

define function make-keyboard-gesture
    (keysym :: &lt;symbol&gt;, #rest modifiers)
 =&gt; (gesture :: &lt;keyboard-gesture&gt;)
  make(&lt;keyboard-gesture&gt;, keysym: keysym, modifiers: modifiers)
end function make-keyboard-gesture;

// Definition of the File menu
define command-table *file-command-table* (*global-command-table*)
  menu-item &quot;Open&quot; = open-file,
    accelerator:   make-keyboard-gesture(#&quot;o&quot;, #&quot;control&quot;),
    documentation: &quot;Opens an existing file.&quot;;
  menu-item &quot;Save&quot; = save-file,
    accelerator:   make-keyboard-gesture(#&quot;s&quot;, #&quot;control&quot;),
    documentation: &quot;Saves the current file to disk.&quot;;
  menu-item &quot;Save As...&quot; = save-as-file,
    documentation: &quot;Saves the current file with a new name.&quot;;
  separator;
  menu-item &quot;Exit&quot; = exit-task,
    accelerator:   make-keyboard-gesture(#&quot;f4&quot;, #&quot;alt&quot;),
    documentation: &quot;Exits the application.&quot;;
end command-table *file-command-table*;

// Definition of the Edit menu
define command-table *edit-command-table*
    (*global-command-table*)
  menu-item &quot;Cut&quot; = not-yet-implemented,
    accelerator:   make-keyboard-gesture(#&quot;x&quot;, #&quot;control&quot;),
    documentation: &quot;Cut the selection to the clipboard.&quot;;
  menu-item &quot;Copy&quot; = not-yet-implemented,
    accelerator:   make-keyboard-gesture(#&quot;c&quot;, #&quot;control&quot;),
    documentation: &quot;Copy the selection to the clipboard.&quot;;
  menu-item &quot;Paste&quot; = not-yet-implemented,
    accelerator:   make-keyboard-gesture(#&quot;v&quot;, #&quot;control&quot;),
    documentation: &quot;Paste the selection in the clipboard at 
                    the current position.&quot;;
end command-table *edit-command-table*;

// Definition of the Task menu 
define command-table *task-command-table* 
    (*global-command-table*)
  menu-item &quot;Add...&quot; = frame-add-task,
    accelerator: make-keyboard-gesture(#&quot;a&quot;, #&quot;control&quot;,
                                       #&quot;shift&quot;),
    documentation: &quot;Add a new task.&quot;;
  menu-item &quot;Remove&quot; = frame-remove-task,
    accelerator: make-keyboard-gesture(#&quot;d&quot;, #&quot;control&quot;,
                                       #&quot;shift&quot;),
    documentation: &quot;Remove the selected task from the list.&quot;;
end command-table *task-command-table*;

// Definition of the Help menu
define command-table 
    *help-command-table* (*global-command-table*)
  menu-item &quot;About&quot; = about-task,
    accelerator:   make-keyboard-gesture(#&quot;f1&quot;),
    documentation: &quot;Display information about the application.&quot;;
end command-table *help-command-table*;

// Definition of the overall menu bar
define command-table *task-list-command-table* 
    (*global-command-table*)
  menu-item &quot;File&quot; = *file-command-table*;
  menu-item &quot;Edit&quot; = *edit-command-table*;
  menu-item &quot;Task&quot; = *task-command-table*;
  menu-item &quot;Help&quot; = *help-command-table*;
end command-table *task-list-command-table*;

define method main (arguments :: &lt;sequence&gt;) =&gt; ()
// Handle the arguments
  start-task();
end method main;

begin
  main(application-arguments()) 
  // Start the application!
end;
</PRE>
<P>Contents of the file <CODE>task-list.dylan</CODE>:</P>
<DL>
<DT><DD>The file <CODE>task-list.dylan</CODE> is identical to the listing shown in <A HREF="dgui_108.htm#MARKER-9-615">Section A.1</A>, and so is not repeated here.
<A NAME=LINK-source-lastpage></A><A NAME=LINK-duim-guideIX-firstpage></A></DL>
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dgui_108.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dgui_107.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
