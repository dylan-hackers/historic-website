<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_60.htm">
<LINK REL=PREV HREF="dguid_62.htm">
<LINK REL=NEXT HREF="dguid_64.htm">
<TITLE>6.5.3   Changes to method definitions</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING63></A>

<DIV>
<P><A HREF="dguid_64.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_62.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_60.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6.5   Changes required to run Task List 2</P>

</DIV>
<A NAME=HEADING63-0></A>
<H1>6.5.3   Changes to method definitions</H1>
<P>The definitions for the methods given in Chapter 5 must be redefined so as to take an instance of <CODE>&lt;frame&gt;</CODE> as an argument, rather than an instance of <CODE>&lt;gadget&gt;</CODE>. This change results in these new definitions:</P>
<PRE>
define method open-file
    (frame :: &lt;task-frame&gt;) =&gt; ()
  let task-list = frame-task-list(frame);
  let filename
    = choose-file(frame: frame,
                  default: task-list.task-list-filename,
                  direction: #&quot;input&quot;);
  if (filename)
    let task-list = load-task-list(filename);
    if (task-list)
      frame.frame-task-list := task-list;
      refresh-task-frame(frame)
    else
      notify-user(format-to-string(&quot;Failed to open file %s&quot;, filename),
                  owner: frame)
    end
  end
end method open-file;
<P></P>
define method save-file
    (frame :: &lt;task-frame&gt;) =&gt; ()
  let task-list = frame-task-list(frame);
  if (task-list.task-list-modified?)
    save-as-file(frame, filename: task-list.task-list-filename)
  end
end method save-file;
<P></P>
define method save-as-file
    (frame :: &lt;task-frame&gt;, #key filename) =&gt; ()
  let task-list = frame-task-list(frame);
  let filename
    = filename
        | choose-file(frame: frame,
                      default: task-list.task-list-filename,
                      direction: #&quot;output&quot;);
  if (filename)
    if (save-task-list(task-list, filename: filename))
      frame.frame-task-list := task-list;
      refresh-task-frame(frame)
    else
      notify-user(format-to-string
                    (&quot;Failed to save file %s&quot;, filename),
                  owner: frame)
    end
  end
end method save-as-file;
<P></P>
define method frame-add-task (frame :: &lt;task-frame&gt;) =&gt; ()
  let task-list = frame-task-list(frame);
  let (name, priority) = prompt-for-task(owner: frame);
  if (name &amp; priority)
    let new-task = make(&lt;task&gt;, name: name, priority: priority);
    add-task(task-list, new-task);
    refresh-task-frame(frame);
    frame-selected-task(frame) := new-task
  end
end method frame-add-task;
<P></P>
define method frame-remove-task (frame :: &lt;task-frame&gt;) =&gt; ()
  let task = frame-selected-task(frame);
  let task-list = frame-task-list(frame);
  if (notify-user(format-to-string
                    (&quot;Really remove task %s&quot;, task.task-name),
                  owner: frame, style: #&quot;question&quot;))
    frame-selected-task(frame) := #f;
    remove-task(task-list, task);
    refresh-task-frame(frame)
  end
end method frame-remove-task;
<P></P>
define method note-task-selection-change
    (frame :: &lt;task-frame&gt;) =&gt; ()
  let task = frame-selected-task(frame);
  if (task)
    frame.priority-box.gadget-value := task.task-priority;
  end;
  command-enabled?(frame-remove-task, frame) := task ~= #f;
end method note-task-selection-change;
<P></P>
</PRE>
<P>For details about <CODE>note-task-selection-change</CODE>, see <A HREF="dguid_50.htm#MARKER-9-296">Section 5.3.3.3 on page 67</A>. See <A HREF="dgui_109.htm#MARKER-9-619">Section A.2, "A task list manager using command tables"</A> for the complete source code for the Task List 2 project.</P>
<P></P>
<A NAME=LINK-commands-lastpage></A><A NAME=LINK-tour-firstpage></A><!-- FM pgf ignored -->

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_64.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_62.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_60.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
