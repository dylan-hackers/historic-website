<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_55.htm">
<LINK REL=PREV HREF="dguid_56.htm">
<LINK REL=NEXT HREF="dguid_58.htm">
<TITLE>6.2   Implementing a command table</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING57></A>

<DIV>
<P><A HREF="dguid_58.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_56.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_55.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6 Using Command Tables</P>

</DIV>
<A NAME=HEADING57-0></A>
<A NAME=UID-commands-889227></A>
<H1>6.2   <A NAME=MARKER-2-330></A><A NAME=MARKER-2-331></A><A NAME=MARKER-9-332></A>Implementing a command table</H1>
<P>You use <CODE>define</CODE> <CODE>command-table</CODE> to define a new command table. Consider the following command table defined for the <B>File</B> menu in the task list manager:</P>
<PRE>
define command-table *file-command-table* 
    (*global-command-table*)
  menu-item &quot;Open&quot; = open-file,
    accelerator:   make-keyboard-gesture(#&quot;o&quot;, #&quot;control&quot;),
    documentation: &quot;Opens an existing file.&quot;;
  menu-item &quot;Save&quot; = save-file,
    accelerator:   make-keyboard-gesture(#&quot;s&quot;, #&quot;control&quot;),
    documentation: &quot;Saves the current file to disk.&quot;;
  menu-item &quot;Save As...&quot; = save-as-file,
    documentation: &quot;Saves the current file with a new name.&quot;;
  menu-item &quot;Exit&quot; = exit-task,
    accelerator:   make-keyboard-gesture(#&quot;f4&quot;, #&quot;alt&quot;),
    documentation: &quot;Exits the application.&quot;;
end command-table *file-command-table*;
<P></P>
</PRE>
<P>This defines a command table, called <CODE>*file-command-table*</CODE>, that contains all the menu commands required in the <B>File</B> menu of the task list manager. It replaces the definition of each menu button, as well as the definition of the <B>File</B> menu itself, in the original implementation of the task list manager application that was given in <A HREF="dguid_28.htm#MARKER-9-195">Chapter 4, "Adding Menus To The Application"</A>. As you can see, this definition is considerably shorter than the individual definitions of the menu and menu buttons previously required,</P>
<P>When defining a command table, you should provide a list of other command tables from which the command table you are defining inherits. This is done in the clause</P>
<PRE>
define command-table *file-command-table* 
    (*global-command-table*)
<P></P>
</PRE>
<P>above. This is analogous to the way that the superclasses of any frame class are listed in the frame's definition.</P>
<P>Any items defined by the command tables which are to be inherited are automatically added to the command table being defined.<A NAME=MARKER-10-333></A></P>
<P>In the example above, <CODE>*file-command-table*</CODE> inherits from only one command table: <CODE>*global-command-table*</CODE>. This is defined globally for the whole Dylan environment, and every command table that does not explicitly inherit from other command tables must inherit from this command table.<A NAME=MARKER-10-334></A></P>
<P>Each menu item is introduced using the <CODE>menu-item</CODE> option, and a command is specified for each menu item immediately after the <CODE>=</CODE> sign. Each command is just the activate callback that was defined for the equivalent menu button gadget in <A HREF="dguid_34.htm#MARKER-9-245">Chapter 5, "Adding Callbacks to the Application"</A>.</P>
<P>Notice that you can use the <CODE>accelerator:</CODE> and <CODE>documentation:</CODE> init-keywords to specify a keyboard accelerator and a documentation string for each menu item in the command table, just like you can when you define each menu button in a menu using a specific gadget. In the same way, you can specify the value of any init-keyword that can be specified for an instance of <CODE>&lt;menu-button&gt;</CODE>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_58.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_56.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_55.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
