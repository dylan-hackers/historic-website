<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997) -->
<HEAD>
<LINK REL=TOP HREF="dguide_1.htm">
<LINK REL=UP HREF="dguid_76.htm">
<LINK REL=PREV HREF="dguid_77.htm">
<LINK REL=NEXT HREF="dguid_79.htm">
<TITLE>7.2.4.2   List controls</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV>
<A NAME=HEADING78></A>

<DIV>
<P><A HREF="dguid_79.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_77.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_76.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>7.2.4   Display controls</P>

</DIV>
<A NAME=HEADING78-0></A>
<H1>7.2.4.2   <A NAME=MARKER-2-421></A><A NAME=MARKER-2-422></A><A NAME=MARKER-9-423></A>List controls</H1>
<P><A NAME=MARKER-10-424></A>The <CODE>&lt;list-control&gt; </CODE>class is used to display a collection of items, each item consisting of an icon and a label. In Microsoft documentation, this control corresponds to the List View control in its "icon", "small icon", and "list" views. Like other collection gadgets, the contents of a list control is determined using the <CODE>gadget-items</CODE> slot.</P>
<TABLE BORDER=1><CAPTION><P>Figure 7.13   A list control</P>
</CAPTION><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=dg78im16.gif></P>
</TD></TR></TABLE><P>Like tree controls, list controls support the <CODE>icon-function:</CODE> init-keyword. Note, however, that unlike tree controls, you can also use the <CODE>list-control-icon-function</CODE> generic function to retrieve and set the value of this slot after the control has been created.</P>
<P>A number of different views are available, allowing you to view the items in different ways. These views let you choose whether each item should be accompanied by a large or a small icon. You can specify the view for a list control when it is first created, using the <CODE>view:</CODE> init-keyword. After creation, the <CODE>list-control-view</CODE> slot can be used to read or set the view for the list control.</P>
<P>The list control in the example below contains a number of items, each of which consists of a two element vector. </P>
<UL>
<LI>The first element (a string) represents the label for each item in the list control.
<LI>The second element (beginning with <CODE>reply-</CODE>) represents the value of each item in the list control--in this case the callback function that is invoked when that item is double-clicked. 
</UL>
<P>The example assumes that you have already defined these callback functions elsewhere.</P>
<PRE>
make(&lt;list-control&gt;,
     items: vector(vector(&quot;Yes or No?&quot;, reply-yes-or-no),
                   vector(&quot;Black or White?&quot;, 
                          reply-black-or-white),
                   vector(&quot;Left or Right?&quot;, reply-left-or-right),
                   vector(&quot;Top or Bottom?&quot;, reply-top-or-bottom),
                   vector(&quot;North or South?&quot;, 
                          reply-north-or-south)),
     label-key: first,
     value-key: second,
     scroll-bars: #&quot;none&quot;,
     activate-callback: method (sheet :: &lt;sheet&gt;)
                          gadget-value(sheet)(sheet-frame(sheet))
                        end);
<P></P>
</PRE>
<P>In the example above, <CODE>first</CODE> is used to calculate the label that is used for each item in the list, and <CODE>second</CODE> specifies what the value for each item is. The activate callback examines this gadget value, so that the callback specified in the <CODE>items:</CODE> init-keyword can be used. Note that the <CODE>scroll-bars:</CODE> init-keyword can be used to specify which, if any, scroll bars are added to the control.</P>
<P>Like list boxes, and tree controls, list controls support the <CODE>borders:</CODE> and <CODE>scroll-bars:</CODE> init-keywords.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Building Applications Using DUIM - 26 May 1999</ADDRESS>
<P><A HREF="dguid_79.htm"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="dguid_77.htm"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="dguid_76.htm"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="dguide_1.htm"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="dguide_2.htm"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="dgui_110.htm"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
</BODY>
</HTML>
