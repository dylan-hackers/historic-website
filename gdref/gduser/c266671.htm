<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML
><HEAD
><TITLE
>Static linking mechanisms</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet version 1.13"><LINK
REL="HOME"
TITLE="Gwydion Dylan User's Guide"
HREF="book1.htm"><LINK
REL="UP"
TITLE="Using the Melange Interface Generator"
HREF="c266.htm"><LINK
REL="PREVIOUS"
TITLE="Low level support facilities"
HREF="c266627.htm"><LINK
REL="NEXT"
TITLE="Differences from Creole"
HREF="c266680.htm"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Gwydion Dylan User's Guide</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="c266627.htm"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 5. Using the Melange Interface Generator</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="c266680.htm"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><H1
><A
NAME="MELANGE-STATIC-LINKING"
>Static linking mechanisms</A
></H1
><P
>Because object file formats vary widely by architecture,
      Mindy does not support dynamic loading of object files or
      automatic symbol table look up for all architectures. In the
      general case, it is necessary to depend upon a less elegant
      technique for explicitly making certain C objects
      available.</P
><P
>Simple instructions for using this mechanism from within
      Melange are given in <A
HREF="c266320.htm#MELANGE-LOADING-AND-FINDING"
>the section called <I
>Loading and Finding Objects</I
></A
>. This section simply
      provides more information on the underlying mechanism.</P
><P
>In order to make sure that the desired symbols can be
      located, it is necessary to build an explicit table which maps
      between the symbol's name and its address. This table is
      automatically created by running the "make-init.pl" script [This
      requires you to have PERL installed on your system.] upon a list
      of "interface definition files". This will create two files
      ",extern1.def" and ",extern2.def", which should then be renamed
      to "extern1.def" and "extern2.def" respectively. These files are
      automatically included by "ext-init.c" so that the table will be
      created after Mindy is rebuilt.</P
><P
>The interface definition files consist of zero or more
      lines of text, each of which should contain the name of one
      object. If the object is a function, it should be immediately
      followed by a set of parentheses. For example, the file which
      defines the memory allocation routines used by Melange's support
      code contains the following four lines:</P
><PRE
CLASS="PROGRAMLISTING"
>free()
malloc()
strcmp()
strlen()</PRE
><P
>The only other step required to make the objects available
      is simply to ensure that the library which contains them is
      linked into Mindy. The easiest way to accomplish all of this is
      to simply modify the Makefile in Mindy's source directory. If
      you add the names of the required libraries to LIBS and the
      names of the interface definition files to EXTERN-INCLUDES, make
      will do the necessary work for you. You should be sure to leave
      "../compat/libcompat.a" or "-lm" in LIBS and "malloc.inc" in
      EXTERN-INCLUDES.</P
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="c266627.htm"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="c266680.htm"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Low level support facilities</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="c266.htm"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Differences from Creole</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>