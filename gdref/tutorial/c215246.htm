<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML
><HEAD
><TITLE
>Return Values</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet version 1.13"><LINK
REL="HOME"
TITLE="Getting Started with 
Dylan"
HREF="book1.htm"><LINK
REL="UP"
TITLE="Methods & Generic Functions"
HREF="c215.htm"><LINK
REL="PREVIOUS"
TITLE="Methods & Generic Functions"
HREF="c215.htm"><LINK
REL="NEXT"
TITLE="Bare Methods"
HREF="c215253.htm"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Getting Started with 
<SPAN
CLASS="TRADEMARK"
><A
HREF="http://www.cambridge.apple.com/dylan/dylan.html"
TARGET="_top"
>Dylan</A
></SPAN
></TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="c215.htm"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 3. Methods &#38; Generic Functions</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="c215253.htm"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><H1
><A
NAME="RETURN-VALUES"
>Return Values</A
></H1
><P
>Because Dylan methods can't have normal &#8220;output&#8221;
      parameters in their parameter lists, they're allowed considerably
      more flexibility when it comes to return values. Methods may return
      more than one value. As with parameters, these values may be typed or
      untyped. Interestingly enough, all return values <I
CLASS="EMPHASIS"
>must</I
> be
      named.</P
><P
>A Dylan method&#8212;or any other control
      construct&#8212;returns the value of the last expression in its
      body.</P
><PRE
CLASS="PROGRAMLISTING"
>define method foo() =&#62; sample :: &#60;string&#62;;
  "Sample string.";		// return string
end;

define method bar() =&#62; my-untyped-value;
  if (weekend-day?(today()))
    "Let's party!";	// return string
  else
    make(&#60;excuse&#62;);	// return object
  end if;
end method;

define method moby( )
  =&#62;	sample :: &#60;string&#62;, my-untyped-value;
  values( foo(), bar() ); // return both!
end;

define method baz( ) =&#62; ( );
  let (x,y) = moby( );		// assign both
end;</PRE
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="c215.htm"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="c215253.htm"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Methods &#38; Generic Functions</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="c215.htm"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Bare Methods</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>