<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML
><HEAD
><TITLE
>Generic Functions</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet version 1.13"><LINK
REL="HOME"
TITLE="Getting Started with 
Dylan"
HREF="book1.htm"><LINK
REL="UP"
TITLE="Methods & Generic Functions"
HREF="c215.htm"><LINK
REL="PREVIOUS"
TITLE="Local Methods"
HREF="c215265.htm"><LINK
REL="NEXT"
TITLE="Keyword Arguments"
HREF="c215295.htm"></HEAD
><BODY
BGCOLOR="#FFFFFF"
TEXT="#000000"
><DIV
CLASS="NAVHEADER"
><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Getting Started with 
<SPAN
CLASS="TRADEMARK"
><A
HREF="http://www.cambridge.apple.com/dylan/dylan.html"
TARGET="_top"
>Dylan</A
></SPAN
></TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="c215265.htm"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 3. Methods &#38; Generic Functions</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="c215295.htm"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><H1
><A
NAME="GENERIC-FUNCTIONS"
>Generic Functions</A
></H1
><P
>A <I
CLASS="GLOSSTERM"
>generic function</I
> represents zero or more similar
      methods. Every method created by means of <TT
CLASS="LITERAL"
>define method</TT
> is
      automatically <I
CLASS="GLOSSTERM"
>contained</I
> within the generic function of
      the same name. For example, a programmer could define three methods
      named <TT
CLASS="FUNCTION"
><B
>display</B
></TT
>, each of which acted on a different data
      type:</P
><PRE
CLASS="PROGRAMLISTING"
>define method display(i :: &#60;integer&#62;)
	do-display-integer(i);
end;

define method display(s :: &#60;string&#62;)
	do-display-string(s);
end;

define method display(f :: &#60;float&#62;)
	do-display-float(f);
end;</PRE
><P
>When a program calls <TT
CLASS="FUNCTION"
><B
>display</B
></TT
>, Dylan examines all
      three methods. Depending on the number and type of arguments to
      <TT
CLASS="FUNCTION"
><B
>display</B
></TT
>, Dylan invokes one of the above methods. If no
      methods match the actual parameters, an error occurs.</P
><P
>In <SPAN
CLASS="ACRONYM"
>C++</SPAN
>, this process occurs only at compile time. (It's
      called operator overloading.) In Dylan, calls to <TT
CLASS="FUNCTION"
><B
>display</B
></TT
>
      may be resolved either at compile time or while the program is
      actually executing. This makes it possible to define methods like:</P
><PRE
CLASS="PROGRAMLISTING"
>define method display(c :: &#60;collection&#62;)
  for (item in c)
    display(item); // runtime dispatch
  end;
end;</PRE
><P
>This method extracts objects of unknown type from a collection,
      and attempts to invoke the generic function <TT
CLASS="FUNCTION"
><B
>display</B
></TT
> on
      each of them. Since there's no way for the compiler to know what type
      of objects the collection actually contains, it must generate code to
      identify and invoke the proper method at runtime. If no applicable
      method can be found, the Dylan runtime environment throws an
      exception.</P
><P
>Generic functions may also be declared explicity, allowing the
      programmer to exercise control over what sort of methods get
      added. For example, the following declaration limits all
      <TT
CLASS="FUNCTION"
><B
>display</B
></TT
> methods to single parameter and no return
      value:</P
><PRE
CLASS="PROGRAMLISTING"
>define generic display(thing :: &#60;object&#62;) =&#62; ()</PRE
><P
>Generic functions are explained in greater detail in the
      chapter on <A
HREF="c441.htm"
>multiple dispatch</A
>.</P
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="c215265.htm"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="c215295.htm"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Local Methods</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="c215.htm"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Keyword Arguments</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>