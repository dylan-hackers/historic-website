<?php
require "fragments.inc";
code_header("Keyword Arguments");
?>

<P>You can specify the arguments to a function by name. This can be useful
when you need to add occasionally-used parameters to existing
functions.</P>

<BLOCKQUOTE><PRE>
define function describe-list(my-list :: &lt;list>, #key verbose?) => ()
  format(*standard-output*, "{a &lt;list&gt;, size: %d", my-list.size);
  if (verbose?)
    format(*standard-output*, ", elements:");
    for (item in my-list)
      format(*standard-output*, " %=", item);
    end for;
  end if;
  format(*standard-output*, "}");
end function;
    
describe-list(#(1, 2, 3, 4, 5, 6));
// prints "{a &lt;list>, size: 6}"

describe-list(#(5, 7, 3), verbose?: #t);
// prints "{a &lt;list>, size: 3, elements: 5 7 3}"
</PRE></BLOCKQUOTE>

<P>Dylan's <CODE>format</CODE> statement works just like
<CODE>printf</CODE>, except that you can extend it to handle new types of
objects.</P>


<?php code_footer(); ?>
