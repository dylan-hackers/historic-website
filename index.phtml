<?php
require "shared.inc";
standard_header("Overview");
?>

<P>We're a group of volunteers working to create new development tools,
with a focus on Unix-like systems. We have updated <A
HREF="http://www.cs.cmu.edu/afs/cs/project/gwydion/docs/htdocs/gwydion/">CMU's
Gwydion Dylan</A>, fixing many bugs and making it work well under modern
versions of Linux and FreeBSD. Our <A HREF="downloading.phtml">current
release</A> is a technology preview, suitable for learning Dylan and
building modest command-line applications. In the future, we want to create
one of the most advanced development tools available and donate it to the
<A HREF="http://www.gnu.org/">GNU project</A>.</P>

<P>Please feel free to join us! You can look at <A HREF="goals.phtml">our
goals</A>, or check out the following resources:</P>

<P>[
Why is Dylan cool? |
<A HREF="learning.phtml">Learning Dylan</A> |
<A HREF="http://www.harlequin.com/devtools/dylan">Dylan for Windows</A>
]<BR>[
<A HREF="limitations.phtml">Limitations</A> |
<A HREF="downloading.phtml">Downloading</A> |
<A HREF="gdref.phtml">Documentation</A> |
<A HREF="lists.phtml">Mailing Lists</A> ]</P>

<!--
<P>Gwydion Dylan is an implementation of the Dylan programming language for
Unix systems. Originally written as a research project by the Gwydion group at CMU, it is now maintained by a group of volunteers.</P>

<P>The current version of Gwydion is development code, and <STRONG>intended
only for use by Dylan fanatics</STRONG>. The compiler is slow, lacks shared
library support and still needs lots of bug fixes. To make life more
exciting, the documentation is incomplete, and you'll need to read the
source and ask questions on the mailing list. If this sounds like fun,
you'll enjoy Gwydion.</P>

<P>To make Gwydion a truly useful compiler, we'll need to solve three or
four <STRONG>hard problems</STRONG>:</P>

<UL>
<LI>Figure out how to maintain binary compatibility between two versions of
a shared library.
<LI>Reduce the code size of Dylan-to-C glue.
<LI>Speed up the compiler (and/or implement incremental compilation)
<LI>Add Dylan support to GDB.
</UL>

<P>Thanks to the skilled programmers at CMU, Gwydion can already generate
<STRONG>exceptionally efficient</STRONG> code (half the speed of C in most
cases) and implements about 98% of the Dylan standard with many extra
libraries.</P>

<P>Someday we'd like Gwydion Dylan to look like <A HREF="ftp://berlin.ccc.de/pub/gd/misc/browsers1.png">this</A> or <A HREF="ftp://berlin.ccc.de/pub/gd/misc/browsers2.png">this</A>. (Screenshots of Apple Dylan.) Of course, it will still run as a "normal" command-line compiler, too.</P>
-->

<H3>Recent News</H3>

<DL>
<DT><STRONG>Gwydion Dylan Status Report (24 Dec 1998)</STRONG></DT>

<DD>
<P>We're pushing towards a code freeze now. A few outstanding bugs need
fixing (see the <STRONG>critical</STRONG> section in the bug tracker), bits
of Melange need further study, and our documentation is still not
completely resolved.</P>

<P>Jeff Dubrule has ported Mindy to run on a 64-bit system (RedHat 5.2
Alpha), and has started work on d2c. (These ports will not be included
in 2.2.) Peter Housel and Matthias Hoelzl have been stomping bugs left and
right, and Eric Kidd has rewritten getopt and cooked up some man pages.
Andreas has been working to make Melange play nicely with Gtk+, and Peter
Hinely has been helping edit our documentation. Shaleh has bootstrapped d2c
under Debian, and should have debs sometime soon.</P>
</DD>

<DT><STRONG>Gwydion Dylan 2.1.2 Released (1 Dec 1998)</STRONG></DT>

<DD><P>
  The feature freeze for 2.2 is now in effect. We're closing out our
  critical bugs, working on documentation, and breaking one or two small
  things which should be done <EM>before</EM> we have users.
</P></DD>
</DL>

<P>[ <A HREF="news.phtml">Older News</A> |
<A HREF="lists.phtml">Mailing List Archives</A> ]</P>

<?php standard_footer(); ?>
