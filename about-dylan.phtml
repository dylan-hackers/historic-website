<?php
require "shared.inc";
standard_header("What is Dylan?");
?>

<P>Peter Hinely wrote one of the more concise descriptions of Dylan:</P>

<BLOCKQUOTE>
<EM>Dylan is an advanced, object-oriented, dynamic language which supports
the rapid development of programs.  When needed, the programmer can later
optimize [his or her] programs for more efficient execution by supplying
type information to the compiler.  Nearly all entities in Dylan (including
functions, classes, and basic data types such as integers) are first class
objects. Additionally Dylan supports multiple inheritance, polymorphism,
multiple dispatch, keyword arguments, object introspection, and many other
advanced features...</EM>
</BLOCKQUOTE>

<P>Dylan is fast, flexible and capable of unusually sophisticated
abstractions. Some of its more interesting features include:</P>

<UL>
<LI><STRONG>An advanced object model.</STRONG> Dylan's object model is more
powerful than those of most mainstream languages, but more familiar than
what you'd find in an academic language.
<LI><STRONG>Efficiency <EM>and</EM> flexibility.</STRONG>
Dylan can be used as a dynamic prototyping language (like Smalltalk)
or an efficient compiled language. Functional Developer, Functional
Objects' Dylan compiler, generates code as good as that of most C
compilers.  Still, it provides an interactive prototyping environment
like those found in Smalltalk or Common Lisp.
<LI><STRONG>Support for advanced IDEs.</STRONG> The original implementation
of Dylan stored code in a database and provided multiple views of how
definitions were related. Cross-referencing, hypercode and online
documentation were all popular research topics among the language's
designers.
<LI><STRONG>Infix syntax.</STRONG> (Most languages, including C, are
infix. LISP is prefix and Forth is postfix.)
</UL>

<P>[ <A HREF="fragments.phtml">Code examples</A> |
<A HREF="goals.phtml">Our goals</A> ]</P>

<H3>The current state of Dylan</H3>

<P>
There are two major implementations of Dylan which are actively
supported. One, d2c, is a compiler that translates Dylan code to C
code, which was originally developed by the Gwydion group at CMU. It
is stable, produces quite efficient code, and is highly portable to a
wide range of systems. A group of volounteers, the Gwydion Dylan
hackers, has been maintaining this compiler since 1998 in an typical
Open Source process.
</P>

<P>
The other one is a compiler that was originally written by a company
called Harlequin, and after that was closed down, by a spinoff named
Fuctional Objects. It compiles to native x86 code. It was commercially
available for the Win32 plaform, but a port to Linux is also working
well.  The complete code of this project has been released under an
Open Source license in early 2004, and we have successfully
bootstrapped the compiler from source, producing snapshots for both
Win32 and Linux.
</P>

<P>[ <A HREF="downloading.phtml">Downloading Software</A> ]</P>

<?php standard_footer(); ?>
