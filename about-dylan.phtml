<?php
require "shared.inc";
standard_header("What is Dylan?");
?>

<P>Dylan is a fully buzzword-compliant programming language. It
supports:</P>

<UL>
<LI>An advanced object model, including headache-free multiple inheritence
<LI>Multiple dispatch, which makes complex object-oriented designs
simple (research at <A HREF="http://www.harlequin.com/">Harlequin</A> shows
that three quarters of the concepts illustrated in <CITE>Design
Patterns</CITE> can be implemented more easily in Dylan
than in C++ or Java)
<LI>A choice between efficient static typing as used in C++ and
Eiffel, and convenient dynamic typing, which is commonly
associated with scripting and prototyping languages
<LI>Convenient goodies to make development easier, including garbage
collection, functional access to data members, and runtime safety
<LI>Reasonable performance (code generated by the current development
version of Gwydion runs at a third to half the speed of native
C)
<LI>Advanced development tools such as closures, definable language
constructs and introspection
</UL>

<P>Dylan is easy to learn, easy to use, and more powerful than C++ or
Java. It tries to balance the best features of traditional compiled
languages with advantages of prototyping and scripting languages.</P>

<H3>The Downside of Dylan</H3>

<P>Dylan isn't without some serious shortcomings. It's not widely supported
as of the summer of 1998, with only two majors implementations, one of
which is still incomplete. Several features of the language could be more
elegant, and there's a wickedly intricate set of tradeoffs when
implementing shared libraries.</P>

<?php standard_footer(); ?>
